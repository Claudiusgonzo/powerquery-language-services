{"version":3,"sources":["../webpack/bootstrap","../../node_modules/vscode-jsonrpc/lib/cancellation.js","../../node_modules/vscode-jsonrpc/lib/events.js","../../node_modules/vscode-jsonrpc/lib/is.js","../../node_modules/vscode-jsonrpc/lib/linkedMap.js","../../node_modules/vscode-jsonrpc/lib/main.js","../../node_modules/vscode-jsonrpc/lib/messageReader.js","../../node_modules/vscode-jsonrpc/lib/messageWriter.js","../../node_modules/vscode-jsonrpc/lib/messages.js","../../node_modules/vscode-jsonrpc/lib/pipeSupport.js","../../node_modules/vscode-jsonrpc/lib/socketSupport.js","../../node_modules/vscode-languageserver-protocol/lib/main.js","../../node_modules/vscode-languageserver-protocol/lib/messages.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.callHierarchy.proposed.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.colorProvider.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.configuration.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.declaration.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.foldingRange.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.implementation.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.progress.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.selectionRange.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.sematicTokens.proposed.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.typeDefinition.js","../../node_modules/vscode-languageserver-protocol/lib/protocol.workspaceFolders.js","../../node_modules/vscode-languageserver-protocol/lib/utils/is.js","../../node_modules/vscode-languageserver-textdocument/lib/esm/main.js","../../node_modules/vscode-languageserver-types/lib/esm/main.js","../../node_modules/vscode-languageserver/lib/configuration.js","../../node_modules/vscode-languageserver/lib/files.js","../../node_modules/vscode-languageserver/lib/main.js","../../node_modules/vscode-languageserver/lib/proposed.progress.js","../../node_modules/vscode-languageserver/lib/utils/is.js","../../node_modules/vscode-languageserver/lib/utils/uuid.js","../../node_modules/vscode-languageserver/lib/workspaceFolders.js","../../packages/powerquery-format/lib/format/error.js","../../packages/powerquery-format/lib/format/format.js","../../packages/powerquery-format/lib/format/index.js","../../packages/powerquery-format/lib/format/passes/comment.js","../../packages/powerquery-format/lib/format/passes/common.js","../../packages/powerquery-format/lib/format/passes/isMultiline/common.js","../../packages/powerquery-format/lib/format/passes/isMultiline/isMultiline.js","../../packages/powerquery-format/lib/format/passes/isMultiline/isMultilineFirstPass.js","../../packages/powerquery-format/lib/format/passes/isMultiline/isMultilineSecondPass.js","../../packages/powerquery-format/lib/format/passes/isMultiline/linearLength.js","../../packages/powerquery-format/lib/format/passes/serializerParameter.js","../../packages/powerquery-format/lib/format/serializer.js","../../packages/powerquery-format/lib/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/arrayUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/assert.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/error.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/partialResult/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/partialResult/partialResult.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/partialResult/partialResultUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/patterns.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/result/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/result/result.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/result/resultUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/stringUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/traversal.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/common/typeUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/activeNode/activeNodeUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/activeNode/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/autocomplete.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/inspection.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/inspectionUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/position/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/position/positionUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/scope/identifier.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/scope/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/scope/invokeExpression.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/inspection/scope/scope.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/lexer/comment.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/lexer/error.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/lexer/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/lexer/keywords.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/lexer/lexer.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/lexer/lexerSnapshot.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/lexer/token.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/localization/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/localization/localization.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/localization/templates.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/IParser.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/IParserState/IParserStateUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/IParserState/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/ast/ast.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/ast/astUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/ast/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/context/context.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/context/contextUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/context/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/error.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/nodeIdMap/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/nodeIdMap/nodeIdMap.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/nodeIdMap/nodeIdMapUtils.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/nodeIdMap/xorNode.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/parsers/combinatorialParser.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/parsers/common.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/parsers/index.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/parsers/naive.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/parser/parsers/recursiveDescentParser.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/settings.js","../../packages/powerquery-format/node_modules/@microsoft/powerquery-parser/lib/tasks.js","../../packages/powerquery-format/node_modules/grapheme-splitter/index.js","../../packages/powerquery-language-services/lib/index.js","../../packages/powerquery-language-services/lib/language-services/analysis.js","../../packages/powerquery-language-services/lib/language-services/common.js","../../packages/powerquery-language-services/lib/language-services/currentDocumentSymbolProvider.js","../../packages/powerquery-language-services/lib/language-services/index.js","../../packages/powerquery-language-services/lib/language-services/inspectionHelpers.js","../../packages/powerquery-language-services/lib/language-services/keywordProvider.js","../../packages/powerquery-language-services/lib/language-services/providers.js","../../packages/powerquery-language-services/lib/language-services/validation.js","../../packages/powerquery-language-services/lib/language-services/workspaceCache.js","../../packages/powerquery-library/lib/index.js","../../packages/powerquery-library/lib/library/index.js","../../packages/powerquery-library/lib/library/jsonTypes.js","../../packages/powerquery-library/lib/library/staticLibrarySymbolProvider.js","../../packages/powerquery-library/lib/library/utils.js",".././src/server.ts","../external \"child_process\"","../external \"crypto\"","../external \"fs\"","../external \"net\"","../external \"os\"","../external \"path\"","../external \"url\""],"names":[],"mappings":";;QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,8DAAU;AACnC,WAAW,mBAAO,CAAC,sDAAM;AACzB;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA,YAAY,YAAY,sBAAsB,EAAE;AAChD,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA,yBAAyB,YAAY,EAAE;AACvC,8BAA8B,oBAAoB;AAClD,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,gDAAgD;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,SAAS;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+CAA+C,SAAS;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;;;;;;;;;;;;;ACnI7B;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjCa;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACjB,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,kCAAkC;AAClC;AACA;AACA,iBAAiB;AACjtRA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,sDAAM;AACzB,mBAAmB,mBAAO,CAAC,kEAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,4EAAiB;AACjD;AACA;AACA;AACA;AACA,wBAAwB,mBAAO,CAAC,4EAAiB;AACjD;AACA;AACA;AACA;AACA,iBAAiB,mBAAO,CAAC,8DAAU;AACnC;AACA;AACA;AACA,uBAAuB,mBAAO,CAAC,0EAAgB;AAC/C;AACA;AACA,oBAAoB,mBAAO,CAAC,oEAAa;AACzC,SAAS,mBAAO,CAAC,wEAAe;AAChC,SAAS,mBAAO,CAAC,4EAAiB;AAClC;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,EAAE;AACpB,iBAAiB,EAAE;AACnB,iBAAiB,EAAE;AACnB,gBAAgB;AAChB,CAAC;AACD;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,oHAAoH,sBAAsB,wBAAwB,cAAc;AAChL;AACA;AACA,oHAAoH,sBAAsB;AAC1I;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4GAA4G,sBAAsB,wBAAwB,cAAc;AACxK;AACA;AACA,4GAA4G,sBAAsB;AAClI;AACA;AACA;AACA;AACA,8GAA8G,sBAAsB;AACpI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,oDAAoD;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,uBAAuB,yBAAyB,cAAc;AACxH;AACA;AACA,0DAA0D,uBAAuB;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,eAAe,yBAAyB,cAAc;AAChH;AACA;AACA,0DAA0D,eAAe;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kGAAkG,iCAAiC;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA,2CAA2C,eAAe,MAAM,WAAW;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACA,gDAAgD,eAAe;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,OAAO,MAAM,WAAW,8BAA8B,uBAAuB;AACzH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,wCAAwC;AAC1E;AACA,4CAA4C,eAAe,MAAM,WAAW;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,wCAAwC;AAC9E;AACA;AACA;AACA;AACA;AACA,iDAAiD,eAAe;AAChE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,4CAA4C;AACtF;AACA;AACA;AACA,0CAA0C,wCAAwC;AAClF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,sBAAsB,IAAI,mBAAmB;AAC7G,iDAAiD,uBAAuB,MAAM,WAAW,QAAQ,wCAAwC,KAAK,MAAM;AACpJ;AACA;AACA,gDAAgD,WAAW;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,yCAAyC;AACxE;AACA;AACA;AACA,+CAA+C,oBAAoB;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,yDAAyD;AACzD;AACA;AACA,SAAS;AACT;AACA;AACA,8DAA8D,MAAM;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,oEAAoE,eAAe;AACnF,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0EAA0E,KAAK;AAC/E,iBAAiB;AACjB;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA,oDAAoD;AACpD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,gCAAgC;AACxG;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACh8BA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,8DAAU;AACnC,WAAW,mBAAO,CAAC,sDAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,4CAA4C;AACrF;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChOA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,8DAAU;AACnC,WAAW,mBAAO,CAAC,sDAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qDAAqD;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjMA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,sDAAM;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACzOA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,kBAAM;AAC7B,aAAa,mBAAO,CAAC,cAAI;AACzB,iBAAiB,mBAAO,CAAC,sBAAQ;AACjC,cAAc,mBAAO,CAAC,gBAAK;AAC3B,wBAAwB,mBAAO,CAAC,4EAAiB;AACjD,wBAAwB,mBAAO,CAAC,4EAAiB;AACjD;AACA;AACA;AACA,8CAA8C,aAAa;AAC3D;AACA;AACA;AACA,oDAAoD,aAAa;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrDA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,gBAAK;AAC3B,wBAAwB,mBAAO,CAAC,4EAAiB;AACjD,wBAAwB,mBAAO,CAAC,4EAAiB;AACjD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD,aAAa;AACb,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,kEAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAO,CAAC,gGAA6B;AAC9C,SAAS,mBAAO,CAAC,kFAAY;AAC7B,sBAAsB,mBAAO,CAAC,gIAAmC;AACjE,WAAW,mBAAO,CAAC,gIAAmC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,kHAAkH;AACvH;AACA;AACA;AACA;AACA,KAAK,oIAAoI;AACzI;AACA;AACA;AACA;AACA,KAAK,oIAAoI;AACzI;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,gGAAgG;AACrG;AACA;AACA;AACA;AACA,KAAK,+GAA+G;AACpH;AACA;AACA;AACA;AACA,KAAK,+GAA+G;AACpH,CAAC,uDAAuD;AACxD;AACA;AACA;AACA;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,kEAAgB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,kFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gHAAgH;AACjH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;;;;;;;;;;;;;ACrCnI;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,kEAAgB;AACjD,mBAAmB,mBAAO,CAAC,kFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;;;;;;;;;;;;;AC9BxG;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,kFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;;;;;;;;;;;;;ACnB5F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,kEAAgB;AACjD,mBAAmB,mBAAO,CAAC,kFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;;;;;;;;;;;;;ACvBzE;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,kEAAgB;AACjD,mBAAmB,mBAAO,CAAC,kFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;;;;;;;;;;;;;ACtCzF;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,kEAAgB;AACjD,mBAAmB,mBAAO,CAAC,kFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;;;;;;;;;;;;;ACtB/F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,kFAAY;AAC/B,yBAAyB,mBAAO,CAAC,kEAAgB;AACjD,mBAAmB,mBAAO,CAAC,kFAAY;AACvC,kCAAkC,mBAAO,CAAC,gHAA2B;AACrE;AACA,kCAAkC,mBAAO,CAAC,gHAA2B;AACrE;AACA,oCAAoC,mBAAO,CAAC,oHAA6B;AACzE;AACA;AACA,iCAAiC,mBAAO,CAAC,8GAA0B;AACnE;AACA,iCAAiC,mBAAO,CAAC,8GAA0B;AACnE;AACA;AACA,gCAAgC,mBAAO,CAAC,4GAAyB;AACjE;AACA,+BAA+B,mBAAO,CAAC,0GAAwB;AAC/D;AACA,kCAAkC,mBAAO,CAAC,gHAA2B;AACrE;AACA,4BAA4B,mBAAO,CAAC,oGAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qIAAqI;AACtI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gEAAgE;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+HAA+H;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+HAA+H;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2IAA2I;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kIAAkI;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0DAA0D;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yHAAyH;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,mEAAmE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,uGAAuG;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,kFAAkF;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4EAA4E;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wFAAwF;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;AAC3G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yHAAyH;AAC1H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4HAA4H;AAC7H;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sEAAsE;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,2FAA2F;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0GAA0G;;;;;;;;;;;;;AC5qB3G;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,kEAAgB;AACjD,mBAAmB,mBAAO,CAAC,kFAAY;AACvC;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sHAAsH;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qIAAqI;;;;;;;;;;;;;AC3BzH;AACb;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,kEAAgB;AACjD,mBAAmB,mBAAO,CAAC,kFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;;;;;;;;;;;;;ACpB/F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,kFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,iGAAiG;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,yEAAyE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;AAC9G;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6GAA6G;;;;;;;;;;;;;AC5F9G;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yBAAyB,mBAAO,CAAC,kEAAgB;AACjD,mBAAmB,mBAAO,CAAC,kFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8FAA8F;;;;;;;;;;;;;ACtB/F;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,kFAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oGAAoG;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8IAA8I;;;;;;;;;;;;;ACrB/I;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5CA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,uBAAuB;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,SAAS;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA,mGAAmG,SAAS;AAC5G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACM;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,gBAAgB;AAChD;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;;;;;;;;;;;;;ACxQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oEAAoE;AACrE;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0BAA0B;AAC3B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,SAAS,iCAAiC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AACtC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAC0B;AAC3B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wDAAwD;AACzD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,0EAA0E;AAC3E;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AAC1B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gDAAgD;AACjD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4CAA4C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,CAAC,wCAAwC;AAClC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,wBAAwB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AAC9B;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sBAAsB;AACvB;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,6CAA6C,IAAI;AACjF;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oDAAoD;AACrD;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AACxB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AACxC;AACP;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gCAAgC;AACjC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,4BAA4B;AAC7B;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AAClC;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,gBAAgB;;;;;;;;;;;;;ACt/CjB;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,kGAAgC;AACjF,WAAW,mBAAO,CAAC,yEAAY;AAC/B;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA,+CAA+C,eAAe;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,yC;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,gBAAK;AACzB,aAAa,mBAAO,CAAC,kBAAM;AAC3B,WAAW,mBAAO,CAAC,cAAI;AACvB,wBAAwB,mBAAO,CAAC,oCAAe;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,SAAS;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,sCAAsC;AACtC,yBAAyB;AACzB,mBAAmB;AACnB,UAAU;AACV,+BAA+B;AAC/B,aAAa;AACb,oCAAoC;AACpC,iBAAiB,mBAAmB,EAAE;AACtC,UAAU;AACV,oBAAoB;AACpB,iBAAiB,gBAAgB,EAAE;AACnC,UAAU;AACV,UAAU;AACV,UAAU,EAAE;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,oBAAoB;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,6EAA6E,WAAW;AACxF;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,6BAA6B,SAAS;AACtC;AACA;AACA;AACA;AACA,sEAAsE,WAAW;AACjF;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,OAAO;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,6DAA6D;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kEAAkE,WAAW;AAC7E;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;ACjQA;AACA;AACA;AACA;AACA;AACa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,kGAAgC;AACjF;AACA,wBAAwB,mBAAO,CAAC,mFAAiB;AACjD,2BAA2B,mBAAO,CAAC,yFAAoB;AACvD,WAAW,mBAAO,CAAC,yEAAY;AAC/B,aAAa,mBAAO,CAAC,6EAAc;AACnC;AACA,SAAS,mBAAO,CAAC,kGAAgC;AACjD,WAAW,mBAAO,CAAC,mEAAS;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8CAA8C;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,yBAAywCAAwC,WAAW;AACnD;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA,sEAAsE,OAAO;AAC7E;AACA;AACA;AACA,yDAAyD,WAAW;AACpE,SAAS;AACT;AACA;AACA;AACA;AACA,qDAAqD,WAAW;AAChE;AACA,SAAS;AACT;AACA;AACA;AACA,qDAAqD,iCAAiC;AACtF;AACA,SAAS;AACT;AACA;AACA;AACA,8DAA8D,iCAAiC;AAC/F;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,oDAAoD,WAAW;AAC/D;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,qFAAqF;AACtF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+EAA+E,kBAAkB;AACjG,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH,gBAAgB;AAChI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAmD,EAAE;AAClF;AACA;AACA;AACA;AACA;AACA,gCAAgC,yBAAyB;AACzD;AACA,SAAS;AACT,4EAA4E,OAAO;AACnF;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,6BAA6B,mDAAmD,EAAE;AAClF;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT,4EAA4E,OAAO;AACnF;AACA,SAAS;AACT;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA,8EAA8E,GAAG;AACjF,SAAS;AACT;AACA;AACA;AACA;AACA,0GAA0G,SAAS,oDAAoD,EAAE;AACzK,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8EAA8E;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iBAAiB;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2IAA2I,OAAO;AAClJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,eAAe,EAAE;AACxC,yBAAyB,kBAAkB,EAAE;AAC7C,sBAAsB,eAAe,EAAE;AACvC,sBAAsB,eAAe,EAAE;AACvC,sBAAsB,qBAAqB,EAAE;AAC7C,yBAAyB,kBAAkB,EAAE;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,iBAAiB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,0BAA0B,gBAAgB,+EAA+E;AACzH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,4BAA4B,mBAAO,CAAC,2FAAqB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,+EAA+E;AAChF,gC;;;;;;;;;;;;ACx6BA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,kGAAgC;AACjF,eAAe,mBAAO,CAAC,6EAAc;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qHAAqH,cAAc;AACnI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kIAAkI,QAAQ;AAC1I;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wCAAwC;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;ACtIA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8B;;;;;;;;;;;;AC1CA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,GAAG;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gC;;;;;;;;;;;;AChGA;AACA;AACA;AACA;AACa;AACb,8CAA8C,cAAc;AAC5D,yCAAyC,mBAAO,CAAC,kGAAgC;AACjF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;AChCa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,0HAA8B;AAClE;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACTa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,0HAA8B;AAClE,kBAAkB,mBAAO,CAAC,oFAAkB;AAC5C,sBAAsB,mBAAO,CAAC,oHAAkC;AAChE,8BAA8B,mBAAO,CAAC,4GAA8B;AACpE,qBAAqB,mBAAO,CAAC,4EAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACpDa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,kEAAS;AACrC;AACA,SAAS,mBAAO,CAAC,oEAAU;AAC3B,SAAS,mBAAO,CAAC,4EAAc;AAC/B,iC;;;;;;;;;;;;ACXa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,0HAA8B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mC;;;;;;;;;;;;AC3Da;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,0HAA8B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACda;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,0HAA8B;AAClE;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;AClBa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,+BAA+B,mBAAO,CAAC,mHAAwB;AAC/D,gCAAgC,mBAAO,CAAC,qHAAyB;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;AChBa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,0HAA8B;AAClE,iBAAiB,mBAAO,CAAC,4EAAW;AACpC,iBAAiB,mBAAO,CAAC,uFAAU;AACnC,uBAAuB,mBAAO,CAAC,mGAAguBAAuB,oBAAoB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gD;;;;;;;;;;;;ACzSa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,0HAA8B;AAClE,iBAAiB,mBAAO,CAAC,4EAAW;AACpC,iBAAiB,mBAAO,CAAC,uFAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iD;;;;;;;;;;;;AClFa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,0HAA8B;AAClwC;;;;;;;;;;;;ACzOa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,0HAA8B;AAClE,iBAAiB,mBAAO,CAAC,2EAAU;AACnC,iBAAiB,mBAAO,CAAC,mGAAsB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,kDAAkD,gDAAgD;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,4CAA4C;AACxG,iDAAiD,gDAAgD;AACjG;AACA;AACA,4DAA4D,gDAAgD;AAC5G,iDAAiD,4CAA4C;AAC7F;AACA;AACA,4DAA4D,gDAAgD;AAC5G,iDAAiD,gDAAgD;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,kDAAkD;AACtG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,+DAA+D,gDAAgD;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,qCAAqC;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,gDAAgD;AAChG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gDAAgD;AACzG;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qDAAqD,gDAAgD;AACrG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,gDAAgD;AACzG;AACA,wDAAwD,gDAAgD;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD;AACzD;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,4CAA4C;AAC9F;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,kDAAkD;AACzG;AACA;AACA;AACA,oDAAoD,gDAAgD;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,4CAA4C;AACrG,iDAAiD,4CAA4C;AAC7F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,2CAA2C;AAClG;AACA;AACA;AACA,2CAA2C,gDAAgD;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,+CAA+C;AACpG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gEAAgE,4BAA4B;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,gDAAgD;AAC1G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,iCAAiC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,kCAAkC;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,qBAAqB;AAC5C;AACA;AACA,mDAAmD,gDAAgD;AACnG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,4CAA4C;AACxF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2DAA2D,4CAA4C;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+C;;;;;;;;;;;;ACh1Ba;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,4BAA4B,mBAAO,CAAC,0HAA8B;AAClE,8BAA8B,mBAAO,CAAC,4GAA8B;AACpkCAAkC,aAAa;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,gBAAgB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;AC5Ja;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,mEAAU;AAC3B,iC;;;;;;;;;;;;ACRa;AACb,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,sGAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,YAAY;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;AC7Ba;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,sGAAG;AACtB;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACTa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,0HAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACxCa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,sHAAc;AACzC;AACA,oBAAoB,mBAAO,CAAC,4GAAS;AACrC;AACA,gBAAgB,mBAAO,CAAC,kHAAY;AACpC;AACA,oBAAoB,mBAAO,CAAC,wHAAe;AAC3C;AACA,iBAAiB,mBAAO,CAAC,oHAAa;AACtC;AACA,kBAAkB,mBAAO,CAAC,oHAAa;AACvC;AACA,SAAS,mBAAO,CAAC,8GAAU;AAC3B,SAAS,mBAAO,CAAC,4GAAS;AAC1B,SAAS,mBAAO,CAAC,kIAAiB;AAClC,SAAS,mBAAO,CAAC,kHAAY;AAC7B,SAAS,mBAAO,CAAC,oHAAU;AAC3B,SAAS,mBAAO,CAAC,wHAAe;AAChC,iC;;;;;;;;;;;;ACzBa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,2BAA2B,mBAAO,CAAC,oJAAsB;AACzD;AACA,SAAS,mBAAO,CAAC,0IAAiB;AAClC,iC;;;;;;;;;;;;ACVa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,yC;;;;;;;;;;;;ACJa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8C;;;;;;;;;;;;ACtCa;AACb;AACA;AACA,8CAA8C,cAAckqKAAkqi1IAAikqKAAkqK,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,GAAG,MAAM,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM;AAC7nnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;AC7Ba;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,oBAAoB,mBAAO,CAAC,+HAAe;AAC3C;AACA,SAAS,mBAAO,CAAC,qHAAU;AAC3B,iC;;;;;;;;;;;;ACVa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACXa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;AC1Ba;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA,yBAAyB,mBAAO,CAAC,gGAAmB;AACpD,WAAW,mBAAO,CAAC,sGAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,EAAE,KAAK;AACnC;AACA,oEAAoE,YAAY;AAChF;AACA;AACA;AACA;AACA;AACA;AACA,uC;;;;;;;;;;;;AC9Ea;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,sGAAG;AACtB,iBAAiB,mBAAO,CAAC,8GAAW;AACpC,iBAAiB,mBAAO,CAAC,oHAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qCAAqC;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;AC3Ga;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,qC;;;;;;;;;;;;ACJa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,qHAAc;AACzC;AACA,SAAS,mBAAO,CAAC,6GAAU;AAC3B,SAAS,mBAAO,CAAC,2GAAS;AAC1B,SAAS,mBAAO,CAAC,yHAAgB;AACjC,SAAS,mBAAO,CAAC,6GAAU;AAC3B,SAAS,mBAAO,CAAC,2GAAY;AAC7B,SAAS,mBAAO,CAAC,qGAAS;AAC1B,iC;;;;;;;;;;;;ACfa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,mBAAmB,mBAAO,CAAC,6HAAa;AACxa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,+IAAmB;AACnD;AACA,iC;;;;;;;;;;;;ACNa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,8GAAW;AACpC,iBAAiB,mBAAO,CAAC,4HAAkB;AAC3C,gBAAgB,mBAAO,CAAC,4GAAU;AAClC,iBAAiB,mBAAO,CAAC,8GAAW;AACpC,qBAAqB,mBAAO,CAAC,gIAAc;AAC3C,mBAAmB,mBAAO,CAAC,4HAAY;AACvC;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,kCAAkC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wC;;;;;;;;;;;;ACxSa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,oIAAmB;AACnD;AACA,SAAS,mBAAO,CAAC,0HAAc;AAC/B,SAAS,mBAAO,CAAC,4HAAY;AAC7B,SAAS,mBAAO,CAAC,sHAAS;AAC1B,iC;;;;;;;;;;;;ACZa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,8GAAW;AACpC,qBAAqB,mBAAO,CAAC,gIAAc;AAC3C,uBAAuB,mBAAO,CAAC,8HAAgB;AAC/C,gBAAgB,mBAAO,CAAC,sHAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,kBAAkB;AACzF;AACA;AACA,sC;;;;;;;;;;;;ACrBa;AACb,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,8GAAW;AACpC,qBAAqB,mBAAO,CAAC,gIAAc;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA,2C;;;;;;;;;;;;AC3Ca;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,sBAAsB,mBAAO,CAAC,yIAAiB;AAC/C;AACA,iC;;;;;;;;;;;;ACNa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,iBAAiB,mBAAO,CAAC,iHAAc;AACvyC;;;;;;;;;;;;ACnKa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,2GAAI;AACxB,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,qBAAqB,mBAAO,CAAC,iIAAe;AAC5C,mBAAmB,mBAAO,CAAC,6HAAa;AACxC;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qFAAqF,SAAS;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sC;;;;;;;;;;;;AC1Wa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,gIAAc;AAC/B,SAAS,mBAAO,CAAC,4IAAoB;AACrC,SAAS,mBAAO,CAAC,sHAAS;AAC1B,iC;;;;;;;;;;;;ACVa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,qBAAqB,mBAAO,CAAC,iIAAe;AAC5C,mBAAmB,mBAAO,CAAC,6HAAa;AACxC;AACA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,8GAA8G,0CAA0C;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4C;;;;;;;;;;;;ACjGa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,qBAAqB,mBAAO,CAAC,gIAAc;AAC3C,2BAA2B,mBAAO,CAAC,4IAAoB;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACnCa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,mC;;;;;;;;;;;;ACJa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,8GAAW;AACpC,uBAAuB,mBAAO,CAAC,0HAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AChGa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,2GAAS;AAClC;AACA,cAAc,mBAAO,CAAC,2GAAS;AAC/B;AACA,SAAS,mBAAO,CAAC,+GAAW;AAC5B,SAAS,mBAAO,CAAC,iHAAY;AAC7B,SAAS,mBAAO,CAAC,2HAAiB;AAClC,SAAS,mBAAO,CAAC,2GAAS;AAC1B,iC;;;;;;;;;;;;ACfa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;ACzDa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,qGAAG;AACtB,iBAAiB,mBAAO,CAAC,8GAAW;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,WAAW,2CAA2C;AAC/F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,WAAW,yEAAyE;AAC5J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,sBAAsB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,wBAAwB;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,kBAAkB;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,UAAU,sHAAsH;AACjL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB,gEAAgE;AACrI;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB,wDAAwD;AAC7H;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACt6Ba;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,qGAAG;AACtB,iBAAiB,mBAAO,CAAC,8GAAW;AACpqBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yC;;;;;;;;;;;;AC1Ra;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iC;;;;;;;;;;;;ACJa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,gIAAgB;AAC7C;AACA,kBAAkB,mBAAO,CAAC,0HAAa;AACvC;AACA;AACA,iC;;;;;;;;;;;;ACTa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,8GAAW;AACpwC;;;;;;;;;;;;ACzQa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,aAAa,mBAAO,CAAC,6IAAwB;AAC7C;AACA;AACA,qC;;;;;;;;;;;;;;;;;;;;;;;ACPa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,mC;;;;;;;;;;;;ACJa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,uGAAI;AACxB,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,oBAAoB,mBAAO,CAAC,2HAAcqEAAqE,WAAW;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6C;;;;;;;;;;;;AC5Va;AACb,8CAA8C,cAAc;AAC5D,0BAA0B,mBAAO,CAAC,iJAAqB;AACvD;AACA,iC;;;;;;;;;;;;ACJa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,+B;;;;;;;;;;;;ACJa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,iHAAc;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,gCAAgC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;AC/Oa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,4GAAO;AAC3B;AACA,iBAAiB,mBAAO,CAAC,sHAAY;AACrC;AACA,iC;;;;;;;;;;;;ACRa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,mC;;;;;;;;;;;;ACJa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,oBAAoB,mBAAO,CAAC,2HAAc;AAC1C;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzwC;;;;;;;;;;;;AC9Pa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,qBAAqB,mBAAO,CAAC,wHAAW;AACxC;AACA,0BAA0B,mBAAO,CAAC,kIAAgB;AAClD;AACA,iC;;;;;;;;;;;;ACRa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,8GAAW;AACpC,uBAAuB,mBAAO,CAAC,0HAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACjIa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,mBAAmB,mBAAO,CAAC,4GAAS;AACpC;AACA,eAAe,mBAAO,CAAC,sHAAW;AAClC;AACA,SAAS,mBAAO,CAAC,8GAAO;AACxB,SAAS,mBAAO,CAAC,sHAAW;AAC5B,SAAS,mBAAO,CAAC,gHAAW;AAC5B,SAAS,mBAAO,CAAC,gIAAgB;AACjC,SAAS,mBAAO,CAAC,0HAAa;AAC9B,iC;;;;;;;;;;;;AChBa;AACb;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,kBAAkB,mBAAO,CAAC,8HAAa;AACvC;AACA,uBAAuB,mBAAO,CAAC,wIAAkB;AACjD;AACA,SAAS,mBAAO,CAAC,0HAAW;AAC5B,iC;;;;;;;;;;;;ACVa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,qC;;;;;;;;;;;;ACJa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,iHAAc;AACvyBAAyB;AACzB,8GAA8G,0CAA0C;AACxJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzyBAAyB;AACzB,0EAA0E,QAAQ;AAClF;AACA;AACA;AACA,0C;;;;;;;;;;;;ACvba;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,mC;;;;;;;;;;;;ACJa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,8GAAG;AACtB,YAAY,mBAAO,CAAC,uGAAI;AACxB,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,uBAAuB,mBAAO,CAAC,iIAAiB;AAChD,iBAAiB,mBAAO,CAAC,sHAAU;AACnrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACbjVa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,uBAAuB,mBAAO,CAAC,iIAAiB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE,8DAA8D;AACvL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,uEAAuE,6CAA6C;AAC1K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gHAAgH,eAAe;AAC/H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACzFa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,cAAc,mBAAO,CAAC,oHAAS;AAC/B;AACA,4BAA4B,mBAAO,CAAC,gJAAuB;AAC3D;AACA,+BAA+B,mBAAO,CAAC,sJAA0B;AACjE;AACA,iC;;;;;;;;;;;;ACVa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,uGAAI;AACxB,iBAAiB,mBAAO,CAAC,iHAAc;AACvC,uBAAuB,mBAAO,CAAC,iIAAiB;AAChD,oBAAoB,mBAAO,CAAC,2HAAc;AAC1C,iBAAiB,mBAAO,CAAC,sHAAU;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE,wCAAwC;AACjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C,uEAAuE,wCAAwC;AAC3J;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,uEAAuE,kDAAkD;AAC9K;AACA,+DAA+D,uEAAuE,mGAAmG;AACzO;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qGAAqG;AACrG;AACA,kDAAkD,uEAAuE;AACzH;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE,0DAA0D;AACnL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qGAAqG;AACrG,kDAAkD,uEAAuE;AACzsDAAsD,uEAAuE;AAC7H;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,uEAAuE,kEAAkE;AAC7L;AACA;AACA,kDAAkD,uEAAuE;AACzH,wBAAwB;AACxyDAAyD,uEAAuE,8EAA8E;AAC9M;AACA,kDAAkD,uEAAuE,4EAA4E;AACrM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,4BAA4B;AAChH;AACA;AACA,kDAAkD,uEAAuE,gFAAgF;AACzM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE;AACzH,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE,kDAAkD;AAC3K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kJAAkJ,yOAAyO;AAC3X;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,uEAAuE;AAC7H;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8JAA8J,+IAA+I;AAC7S;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE;AACzH;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE;AACzH,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE;AACzH;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE,wCAAwC;AACjK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE;AACzH,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,uEAAuE;AAC/H;AACA,6CAA6C;AAC7C;AACA,sDAAsD,uEAAuE,oEAAoE;AACjM;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,uEAAuE,4DAA4D;AACxL;AACA;AACA,kDAAkD,uEAAuE,0KAA0K;AACnS;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,uEAAuE,2HAA2H;AACxP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sIAAsI,yIAAyI;AAC/Q;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE;AACzH;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE;AACzH;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qCAAqC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yJAAyJ,2OAA2O;AACpY,0BAA0B,iCAAiC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,kIAAkI,mBAAmB;AACrJ;AACA,kDAAkD,uEAAuE,+CAA+C;AACxkDAAkD,uEAAuE;AACzH;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE;AACzH,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,uEAAuE;AAC7H,gCAAgC;AAChC;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE,0CAA0C;AACnK;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,uEAAuE;AAC9H;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,uEAAuE;AAChI,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,uEAAuE;AAC/H;AACA,gCAAgC;AAChC;AACA;AACA;AACA,kDAAkD,uEAAuE,4EAA4E;AACrM;AACA;AACA;AACA,yDAAyD,uEAAuE,mEAAmE;AACnM;AACA;AACA,kDAAkD,uEAAuE,uJAAuJ;AAChR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,uEAAuE;AACzH;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,uEAAuE,6CAA6C;AAC1K;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;ACvzCa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,8GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;;ACnGa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,yHAAgB;AAC/C,iBAAiB,mBAAO,CAAC,6GAAU;AACnC;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;ACXa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,WAAW,mBAAO,CAAC,+FAAG;AACtB,iBAAiB,mBAAO,CAAC,6GAAU;AACnC,gBAAgB,mBAAO,CAAC,2GAAS;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,sBAAsB,gBAAgB;AAClH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wEAAwE,2BAA2B,qBAAqB;AACxH;AACA;AACA,iC;;;;;;;;;;;AC/EA;AACA;AACA;;AAEA;AACA;AACA;AACA,gD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,2CAA2C,+BAA+B;AAC1E,2D;AACA,6BAA6B,+BAA+B;AAC5D;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+DAA+D,mBAAmB;AAClF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,6C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,mBAAmB;AAC5C;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,YAAY;AACZ,IAAI;AACJ;AACA;AACA;AACA,sCAAsC;AACthC;AACA;;;;;;;;;;;;;AC9sDa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,oGAAqB;AACtC,iC;;;;;;;;;;;;ACRa;AACb;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,0FAAU;AACjC,wCAAwC,mBAAO,CAAC,wIAAiC;AACjF,0BAA0B,mBAAO,CAAC,gHAAqB;AACvD,0BAA0B,mBAAO,CAAC,4GAAmB;AACrD,oBAAoB,mBAAO,CAAC,gGAAa;AACzC,uBAAuB,mBAAO,CAAC,0GAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,WAAW;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oC;;;;;;;;;;;;ACnMa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,sCAAsC,mBAAO,CAAC,gGAA6B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kC;;;;;;;;;;;;ACnFa;AACb;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,eAAe,mBAAO,CAAC,0FAAU;AACjC,0BAA0B,mBAAO,CAAC,gHAAqB;AACvD,uBAAuB,mBAAO,CAAC,0GAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yD;;;;;;;;;;;;ACrDa;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,uBAAuB,mBAAO,CAAC,0GAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,mBAAO,CAAC,8FAAY;AAC7B,SAAS,mBAAO,CAAC,gGAAa;AAC9B,SAAS,mBAAO,CAAC,kGAAc;AAC/B,iC;;;;;;;;;;;;ACnBa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,0HAA8B;AAClD,sCAAsC,mBAAO,CAAC,gGAA6B;AAC3E,eAAe,mBAAO,CAAC,0FAAU;AACjpJa;AACb;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,0HAA8B;AAClD,sCAAsC,mBAAO,CAAC,gGAA6B;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,2C;;;;;;;;;;;;ACtCa;AACb;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,qC;;;;;;;;;;;;ACrCa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,0HAA8B;AAClD,sCAAsC,mBAAO,CAAC,gGAA6B;AAC3E,uBAAuB,mBAAO,CAAC,0GAAkB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,sC;;;;;;;;;;;;ACjGa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,YAAY,mBAAO,CAAC,0HAA8B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,aAAa,gBAAgB;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0C;;;;;;;;;;;;AC9Ha;AACb;AACA;AACA;AACA;AACA;AACA,8CAA8C,cAAc;AAC5D,SAAS,mBAAO,CAAC,sEAAW;AAC5B,SAAS,mBAAO,CAAC,oFAAqB;AACtC,SAAS,mBAAO,CAAC,wHAAuC;AACxD,iC;;;;;;;;;;;;ACVa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,wBAAwB,mBAAO,CAAC,iFAAiB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uEAAuE,cAAc;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;AClCa;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,qC;;;;;;;;;;;;;;;;;;;;;;;ACJa;AACb;AACA;AACA;AACA,2BAA2B,+DAA+D,gBAAgB,EAAE,EAAE;AAC9G;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,qFAAqF;AACpH;AACA,KAAK;AACL;AACA,8CAA8C,cAAc;AAC5D,gBAAgB,mBAAO,CAAC,oEAAS;AACjC,cAAc,mBAAO,CAAC,oEAAS;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uD;;;;;;;;;;;;AC1Ea;AACb;AACA;AACA,8CAA8C,cAAc;AAC5D,sCAAsC,mBAAO,CAAC,gGAA6B;AAC3E;AACA;AACA;AACA,kDAAkD,UAAU;AAC5D;AACA;AACA,aAAa,EAAE;AACf,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,KAAK;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,yBAAyB,iBAAiB,QAAQ,mBAAmB;AACrE;AACA;AACA;AACA;AACA;AACA,6BAA6B,iBAAiB,QAAQ,mBAAmB;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iC;;;;;;;;;;;;;AC1GA,uCAAuC;AACvC,kCAAkC;;;;;;;;;;;AAElC,kIAQsC;AACtC,qJAA4E;AAC5E,wHAAyD;AACzD,4KAA+D;AAC/D,iHAA4C;AAC5C,iLAAkE;AAElE,qFAAqF;AACrF,oDAAoD;AACpD,MAAM,UAAU,GAAkB,EAAE,CAAC,gBAAgB,CAAC,EAAE,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;AAE/E,MAAM,SAAS,GAAmC,IAAI,EAAE,CAAC,aAAa,CAAC,iDAAY,CAAC,CAAC;AAErF,IAAI,eAAiD,CAAC;AAEtD,UAAU,CAAC,YAAY,CAAC,GAAG,EAAE;IACzB,OAAO;QACH,YAAY,EAAE;YACV,gBAAgB,EAAE,EAAE,CAAC,oBAAoB,CAAC,WAAW;YACrD,0BAA0B,EAAE,IAAI;YAChC,kBAAkB,EAAE;gBAChB,0FAA0F;gBAC1F,eAAe,EAAE,KAAK;aACzB;YACD,aAAa,EAAE,IAAI;YACnB,qBAAqB,EAAE;gBACnB,iBAAiB,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC;aAChC;SACJ;KACJ,CAAC;AACN,CAAC,CAAC,CAAC;AAEH,UAAU,CAAC,aAAa,CAAC,GAAG,EAAE;IAC1B,eAAe,GAAG;QACd,qBAAqB,EAAE,OAAO,CAAC,qBAAqB,EAAE;KACzD,CAAC;AACN,CAAC,CAAC,CAAC;AAEH,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE;IACzB,gBAAgB,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;AACpD,CAAC,CAAC,CAAC;AAEH,oCAAoC;AACpC,yGAAyG;AACzG,0GAA0G;AAC1G,SAAS,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE;IACjC,gBAAgB,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAEjD,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CACzC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,yBAAyB,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CACzF,CAAC;AACN,CAAC,CAAC,CAAC;AAEH,SAAe,gBAAgB,CAAC,QAAyB;;QACrD,MAAM,gBAAgB,GAAsC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;QAEhG,UAAU,CAAC,eAAe,CAAC;YACvB,GAAG,EAAE,QAAQ,CAAC,GAAG;YACjB,WAAW,EAAE,gBAAgB,CAAC,WAAW;SAC5C,CAAC,CAAC;IACP,CAAC;CAAA;AAED,UAAU,CAAC,oBAAoB,CAAC,CAAC,uBAAoD,EAAiB,EAAE;IACpG,MAAM,aAAa,GAAgC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IAC3G,IAAI,aAAa,KAAK,SAAS,EAAE;QAC7B,OAAO,EAAE,CAAC;KACb;IACD,MAAM,QAAQ,GAAoB,aAAa,CAAC;IAEhD,MAAM,OAAO,GAAyB,uBAAuB,CAAC,OAAO,CAAC;IACtE,MAAM,cAAc,GAAkB,EAAE,CAAC;IAEzC,IAAI,kBAAsC,CAAC;IAC3C,IAAI,OAAO,CAAC,YAAY,EAAE;QACtB,kBAAkB,uBAA6B,CAAC;KACnD;SAAM;QACH,kBAAkB,iBAAyB,CAAC;KAC/C;IAED,MAAM,cAAc,mCAEb,mCAAe,KAClB,kBAAkB;QAClB,8DAA8D;QAC9D,cAAc,yBACjB,CAAC;IAEF,MAAM,YAAY,GAA6C,0BAAM,CAAC,cAAc,EAAE,QAAQ,CAAC,OAAO,EAAE,CAAC,CAAC;IAC1G,IAAI,YAAY,CAAC,IAAI,kBAAkB,EAAE;QACrC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;KAC7F;SAAM;QACH,mDAAmD;QACnD,MAAM,KAAK,GAA6B,YAAY,CAAC,KAAK,CAAC;QAC3D,IAAI,OAAe,CAAC;QACpB,IAAI,+BAAW,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE;YACnC,OAAO,GAAG,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC;SACtC;aAAM;YACH,OAAO,GAAG,6CAA6C,CAAC;SAC3D;QAED,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;KAC/C;IAED,OAAO,cAAc,CAAC;AAC1B,CAAC,CAAC,CAAC;AAEH,0CAA0C;AAC1C,SAAS,iBAAiB,CAAC,QAAyB;IAChD,OAAO;QACH,KAAK,EAAE,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;QAC7B,GAAG,EAAE;YACD,IAAI,EAAE,QAAQ,CAAC,SAAS,GAAG,CAAC;YAC5B,SAAS,EAAE,MAAM,CAAC,SAAS;SAC9B;KACJ,CAAC;AACN,CAAC;AAED,UAAU,CAAC,YAAY,CACnB,CACI,oBAAmD,EACnD,MAA4B,EACA,EAAE;IAC9B,MAAM,QAAQ,GAAgC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IACnG,IAAI,QAAQ,EAAE;QACV,MAAM,QAAQ,GAA8B,gBAAgB,CAAC,qBAAqB,CAC9E,QAAQ,EACR,oBAAoB,CAAC,QAAQ,EAC7B,eAAe,CAClB,CAAC;QAEF,OAAO,QAAQ,CAAC,kBAAkB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YAC7C,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,sBAAsB,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACpF,OAAO,EAAE,CAAC;QACd,CAAC,CAAC,CAAC;KACN;IAED,OAAO,EAAE,CAAC;AACd,CAAC,EACJ,CAAC;AAEF,UAAU,CAAC,OAAO,CACd,CAAO,oBAAmD,EAAE,MAA4B,EAAqB,EAAE;IAC3G,MAAM,UAAU,GAAa;QACzB,KAAK,EAAE,SAAS;QAChB,QAAQ,EAAE,EAAE;KACf,CAAC;IAEF,MAAM,QAAQ,GAAgC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IACnG,IAAI,QAAQ,EAAE;QACV,MAAM,QAAQ,GAA8B,gBAAgB,CAAC,qBAAqB,CAC9E,QAAQ,EACR,oBAAoB,CAAC,QAAQ,EAC7B,eAAe,CAClB,CAAC;QAEF,OAAO,QAAQ,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACnC,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,iBAAiB,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YAC/E,OAAO,UAAU,CAAC;QACtB,CAAC,CAAC,CAAC;KACN;IAED,OAAO,UAAU,CAAC;AACtB,CAAC,EACJ,CAAC;AAEF,UAAU,CAAC,eAAe,CACtB,CACI,oBAAmD,EACnD,MAA4B,EACH,EAAE;IAC3B,MAAM,kBAAkB,GAAqB;QACzC,UAAU,EAAE,EAAE;QACd,4CAA4C;QAC5C,eAAe,EAAE,IAAI;QACrB,eAAe,EAAE,CAAC;KACrB,CAAC;IAEF,MAAM,QAAQ,GAAgC,SAAS,CAAC,GAAG,CAAC,oBAAoB,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IACnG,IAAI,QAAQ,EAAE;QACV,MAAM,QAAQ,GAA8B,gBAAgB,CAAC,qBAAqB,CAC9E,QAAQ,EACR,oBAAoB,CAAC,QAAQ,EAC7B,eAAe,CAClB,CAAC;QAEF,OAAO,QAAQ,CAAC,gBAAgB,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YAC3C,UAAU,CAAC,OAAO,CAAC,KAAK,CAAC,yBAAyB,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;YACvF,OAAO,kBAAkB,CAAC;QAC9B,CAAC,CAAC,CAAC;KACN;IAED,OAAO,kBAAkB,CAAC;AAC9B,CAAC,EACJ,CAAC;AAEF,0DAA0D;AAC1D,kDAAkD;AAClD,SAAS,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;AAE7B,2BAA2B;AAC3B,UAAU,CAAC,MAAM,EAAE,CAAC;;;;;;;;;;;;ACnNpB,0C;;;;;;;;;;;ACAA,mC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,gC;;;;;;;;;;;ACAA,+B;;;;;;;;;;;ACAA,iC;;;;;;;;;;;ACAA,gC","file":"server.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/server.ts\");\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nvar CancellationToken;\r\n(function (CancellationToken) {\r\n    CancellationToken.None = Object.freeze({\r\n        isCancellationRequested: false,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    CancellationToken.Cancelled = Object.freeze({\r\n        isCancellationRequested: true,\r\n        onCancellationRequested: events_1.Event.None\r\n    });\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && (candidate === CancellationToken.None\r\n            || candidate === CancellationToken.Cancelled\r\n            || (Is.boolean(candidate.isCancellationRequested) && !!candidate.onCancellationRequested));\r\n    }\r\n    CancellationToken.is = is;\r\n})(CancellationToken = exports.CancellationToken || (exports.CancellationToken = {}));\r\nconst shortcutEvent = Object.freeze(function (callback, context) {\r\n    let handle = setTimeout(callback.bind(context), 0);\r\n    return { dispose() { clearTimeout(handle); } };\r\n});\r\nclass MutableToken {\r\n    constructor() {\r\n        this._isCancelled = false;\r\n    }\r\n    cancel() {\r\n        if (!this._isCancelled) {\r\n            this._isCancelled = true;\r\n            if (this._emitter) {\r\n                this._emitter.fire(undefined);\r\n                this.dispose();\r\n            }\r\n        }\r\n    }\r\n    get isCancellationRequested() {\r\n        return this._isCancelled;\r\n    }\r\n    get onCancellationRequested() {\r\n        if (this._isCancelled) {\r\n            return shortcutEvent;\r\n        }\r\n        if (!this._emitter) {\r\n            this._emitter = new events_1.Emitter();\r\n        }\r\n        return this._emitter.event;\r\n    }\r\n    dispose() {\r\n        if (this._emitter) {\r\n            this._emitter.dispose();\r\n            this._emitter = undefined;\r\n        }\r\n    }\r\n}\r\nclass CancellationTokenSource {\r\n    get token() {\r\n        if (!this._token) {\r\n            // be lazy and create the token only when\r\n            // actually needed\r\n            this._token = new MutableToken();\r\n        }\r\n        return this._token;\r\n    }\r\n    cancel() {\r\n        if (!this._token) {\r\n            // save an object by returning the default\r\n            // cancelled token when cancellation happens\r\n            // before someone asks for the token\r\n            this._token = CancellationToken.Cancelled;\r\n        }\r\n        else {\r\n            this._token.cancel();\r\n        }\r\n    }\r\n    dispose() {\r\n        if (!this._token) {\r\n            // ensure to initialize with an empty token if we had none\r\n            this._token = CancellationToken.None;\r\n        }\r\n        else if (this._token instanceof MutableToken) {\r\n            // actually dispose\r\n            this._token.dispose();\r\n        }\r\n    }\r\n}\r\nexports.CancellationTokenSource = CancellationTokenSource;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Disposable;\r\n(function (Disposable) {\r\n    function create(func) {\r\n        return {\r\n            dispose: func\r\n        };\r\n    }\r\n    Disposable.create = create;\r\n})(Disposable = exports.Disposable || (exports.Disposable = {}));\r\nvar Event;\r\n(function (Event) {\r\n    const _disposable = { dispose() { } };\r\n    Event.None = function () { return _disposable; };\r\n})(Event = exports.Event || (exports.Event = {}));\r\nclass CallbackList {\r\n    add(callback, context = null, bucket) {\r\n        if (!this._callbacks) {\r\n            this._callbacks = [];\r\n            this._contexts = [];\r\n        }\r\n        this._callbacks.push(callback);\r\n        this._contexts.push(context);\r\n        if (Array.isArray(bucket)) {\r\n            bucket.push({ dispose: () => this.remove(callback, context) });\r\n        }\r\n    }\r\n    remove(callback, context = null) {\r\n        if (!this._callbacks) {\r\n            return;\r\n        }\r\n        var foundCallbackWithDifferentContext = false;\r\n        for (var i = 0, len = this._callbacks.length; i < len; i++) {\r\n            if (this._callbacks[i] === callback) {\r\n                if (this._contexts[i] === context) {\r\n                    // callback & context match => remove it\r\n                    this._callbacks.splice(i, 1);\r\n                    this._contexts.splice(i, 1);\r\n                    return;\r\n                }\r\n                else {\r\n                    foundCallbackWithDifferentContext = true;\r\n                }\r\n            }\r\n        }\r\n        if (foundCallbackWithDifferentContext) {\r\n            throw new Error('When adding a listener with a context, you should remove it with the same context');\r\n        }\r\n    }\r\n    invoke(...args) {\r\n        if (!this._callbacks) {\r\n            return [];\r\n        }\r\n        var ret = [], callbacks = this._callbacks.slice(0), contexts = this._contexts.slice(0);\r\n        for (var i = 0, len = callbacks.length; i < len; i++) {\r\n            try {\r\n                ret.push(callbacks[i].apply(contexts[i], args));\r\n            }\r\n            catch (e) {\r\n                // eslint-disable-next-line no-console\r\n                console.error(e);\r\n            }\r\n        }\r\n        return ret;\r\n    }\r\n    isEmpty() {\r\n        return !this._callbacks || this._callbacks.length === 0;\r\n    }\r\n    dispose() {\r\n        this._callbacks = undefined;\r\n        this._contexts = undefined;\r\n    }\r\n}\r\nclass Emitter {\r\n    constructor(_options) {\r\n        this._options = _options;\r\n    }\r\n    /**\r\n     * For the public to allow to subscribe\r\n     * to events from this Emitter\r\n     */\r\n    get event() {\r\n        if (!this._event) {\r\n            this._event = (listener, thisArgs, disposables) => {\r\n                if (!this._callbacks) {\r\n                    this._callbacks = new CallbackList();\r\n                }\r\n                if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\r\n                    this._options.onFirstListenerAdd(this);\r\n                }\r\n                this._callbacks.add(listener, thisArgs);\r\n                let result;\r\n                result = {\r\n                    dispose: () => {\r\n                        this._callbacks.remove(listener, thisArgs);\r\n                        result.dispose = Emitter._noop;\r\n                        if (this._options && this._options.onLastListenerRemove && this._callbacks.isEmpty()) {\r\n                            this._options.onLastListenerRemove(this);\r\n                        }\r\n                    }\r\n                };\r\n                if (Array.isArray(disposables)) {\r\n                    disposables.push(result);\r\n                }\r\n                return result;\r\n            };\r\n        }\r\n        return this._event;\r\n    }\r\n    /**\r\n     * To be kept private to fire an event to\r\n     * subscribers\r\n     */\r\n    fire(event) {\r\n        if (this._callbacks) {\r\n            this._callbacks.invoke.call(this._callbacks, event);\r\n        }\r\n    }\r\n    dispose() {\r\n        if (this._callbacks) {\r\n            this._callbacks.dispose();\r\n            this._callbacks = undefined;\r\n        }\r\n    }\r\n}\r\nexports.Emitter = Emitter;\r\nEmitter._noop = function () { };\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Touch;\r\n(function (Touch) {\r\n    Touch.None = 0;\r\n    Touch.First = 1;\r\n    Touch.Last = 2;\r\n})(Touch = exports.Touch || (exports.Touch = {}));\r\nclass LinkedMap {\r\n    constructor() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    clear() {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    isEmpty() {\r\n        return !this._head && !this._tail;\r\n    }\r\n    get size() {\r\n        return this._size;\r\n    }\r\n    has(key) {\r\n        return this._map.has(key);\r\n    }\r\n    get(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        return item.value;\r\n    }\r\n    set(key, value, touch = Touch.None) {\r\n        let item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== Touch.None) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key, value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case Touch.None:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case Touch.First:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case Touch.Last:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    }\r\n    delete(key) {\r\n        const item = this._map.get(key);\r\n        if (!item) {\r\n            return false;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return true;\r\n    }\r\n    shift() {\r\n        if (!this._head && !this._tail) {\r\n            return undefined;\r\n        }\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        const item = this._head;\r\n        this._map.delete(item.key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    }\r\n    forEach(callbackfn, thisArg) {\r\n        let current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    }\r\n    forEachReverse(callbackfn, thisArg) {\r\n        let current = this._tail;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.previous;\r\n        }\r\n    }\r\n    values() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.value);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    keys() {\r\n        let result = [];\r\n        let current = this._head;\r\n        while (current) {\r\n            result.push(current.key);\r\n            current = current.next;\r\n        }\r\n        return result;\r\n    }\r\n    /* JSON RPC run on es5 which has no Symbol.iterator\r\n    public keys(): IterableIterator<K> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    let result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    public values(): IterableIterator<V> {\r\n        let current = this._head;\r\n        let iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    let result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    addItemFirst(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    }\r\n    addItemLast(item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    }\r\n    removeItem(item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n    }\r\n    touch(item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== Touch.First && touch !== Touch.Last)) {\r\n            return;\r\n        }\r\n        if (touch === Touch.First) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === Touch.Last) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            const next = item.next;\r\n            const previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    }\r\n}\r\nexports.LinkedMap = LinkedMap;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"../typings/thenable.d.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./is\");\r\nconst messages_1 = require(\"./messages\");\r\nexports.RequestType = messages_1.RequestType;\r\nexports.RequestType0 = messages_1.RequestType0;\r\nexports.RequestType1 = messages_1.RequestType1;\r\nexports.RequestType2 = messages_1.RequestType2;\r\nexports.RequestType3 = messages_1.RequestType3;\r\nexports.RequestType4 = messages_1.RequestType4;\r\nexports.RequestType5 = messages_1.RequestType5;\r\nexports.RequestType6 = messages_1.RequestType6;\r\nexports.RequestType7 = messages_1.RequestType7;\r\nexports.RequestType8 = messages_1.RequestType8;\r\nexports.RequestType9 = messages_1.RequestType9;\r\nexports.ResponseError = messages_1.ResponseError;\r\nexports.ErrorCodes = messages_1.ErrorCodes;\r\nexports.NotificationType = messages_1.NotificationType;\r\nexports.NotificationType0 = messages_1.NotificationType0;\r\nexports.NotificationType1 = messages_1.NotificationType1;\r\nexports.NotificationType2 = messages_1.NotificationType2;\r\nexports.NotificationType3 = messages_1.NotificationType3;\r\nexports.NotificationType4 = messages_1.NotificationType4;\r\nexports.NotificationType5 = messages_1.NotificationType5;\r\nexports.NotificationType6 = messages_1.NotificationType6;\r\nexports.NotificationType7 = messages_1.NotificationType7;\r\nexports.NotificationType8 = messages_1.NotificationType8;\r\nexports.NotificationType9 = messages_1.NotificationType9;\r\nconst messageReader_1 = require(\"./messageReader\");\r\nexports.MessageReader = messageReader_1.MessageReader;\r\nexports.StreamMessageReader = messageReader_1.StreamMessageReader;\r\nexports.IPCMessageReader = messageReader_1.IPCMessageReader;\r\nexports.SocketMessageReader = messageReader_1.SocketMessageReader;\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nexports.MessageWriter = messageWriter_1.MessageWriter;\r\nexports.StreamMessageWriter = messageWriter_1.StreamMessageWriter;\r\nexports.IPCMessageWriter = messageWriter_1.IPCMessageWriter;\r\nexports.SocketMessageWriter = messageWriter_1.SocketMessageWriter;\r\nconst events_1 = require(\"./events\");\r\nexports.Disposable = events_1.Disposable;\r\nexports.Event = events_1.Event;\r\nexports.Emitter = events_1.Emitter;\r\nconst cancellation_1 = require(\"./cancellation\");\r\nexports.CancellationTokenSource = cancellation_1.CancellationTokenSource;\r\nexports.CancellationToken = cancellation_1.CancellationToken;\r\nconst linkedMap_1 = require(\"./linkedMap\");\r\n__export(require(\"./pipeSupport\"));\r\n__export(require(\"./socketSupport\"));\r\nvar CancelNotification;\r\n(function (CancelNotification) {\r\n    CancelNotification.type = new messages_1.NotificationType('$/cancelRequest');\r\n})(CancelNotification || (CancelNotification = {}));\r\nvar ProgressNotification;\r\n(function (ProgressNotification) {\r\n    ProgressNotification.type = new messages_1.NotificationType('$/progress');\r\n})(ProgressNotification || (ProgressNotification = {}));\r\nclass ProgressType {\r\n    constructor() {\r\n    }\r\n}\r\nexports.ProgressType = ProgressType;\r\nexports.NullLogger = Object.freeze({\r\n    error: () => { },\r\n    warn: () => { },\r\n    info: () => { },\r\n    log: () => { }\r\n});\r\nvar Trace;\r\n(function (Trace) {\r\n    Trace[Trace[\"Off\"] = 0] = \"Off\";\r\n    Trace[Trace[\"Messages\"] = 1] = \"Messages\";\r\n    Trace[Trace[\"Verbose\"] = 2] = \"Verbose\";\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\n(function (Trace) {\r\n    function fromString(value) {\r\n        if (!Is.string(value)) {\r\n            return Trace.Off;\r\n        }\r\n        value = value.toLowerCase();\r\n        switch (value) {\r\n            case 'off':\r\n                return Trace.Off;\r\n            case 'messages':\r\n                return Trace.Messages;\r\n            case 'verbose':\r\n                return Trace.Verbose;\r\n            default:\r\n                return Trace.Off;\r\n        }\r\n    }\r\n    Trace.fromString = fromString;\r\n    function toString(value) {\r\n        switch (value) {\r\n            case Trace.Off:\r\n                return 'off';\r\n            case Trace.Messages:\r\n                return 'messages';\r\n            case Trace.Verbose:\r\n                return 'verbose';\r\n            default:\r\n                return 'off';\r\n        }\r\n    }\r\n    Trace.toString = toString;\r\n})(Trace = exports.Trace || (exports.Trace = {}));\r\nvar TraceFormat;\r\n(function (TraceFormat) {\r\n    TraceFormat[\"Text\"] = \"text\";\r\n    TraceFormat[\"JSON\"] = \"json\";\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\n(function (TraceFormat) {\r\n    function fromString(value) {\r\n        value = value.toLowerCase();\r\n        if (value === 'json') {\r\n            return TraceFormat.JSON;\r\n        }\r\n        else {\r\n            return TraceFormat.Text;\r\n        }\r\n    }\r\n    TraceFormat.fromString = fromString;\r\n})(TraceFormat = exports.TraceFormat || (exports.TraceFormat = {}));\r\nvar SetTraceNotification;\r\n(function (SetTraceNotification) {\r\n    SetTraceNotification.type = new messages_1.NotificationType('$/setTraceNotification');\r\n})(SetTraceNotification = exports.SetTraceNotification || (exports.SetTraceNotification = {}));\r\nvar LogTraceNotification;\r\n(function (LogTraceNotification) {\r\n    LogTraceNotification.type = new messages_1.NotificationType('$/logTraceNotification');\r\n})(LogTraceNotification = exports.LogTraceNotification || (exports.LogTraceNotification = {}));\r\nvar ConnectionErrors;\r\n(function (ConnectionErrors) {\r\n    /**\r\n     * The connection is closed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Closed\"] = 1] = \"Closed\";\r\n    /**\r\n     * The connection got disposed.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"Disposed\"] = 2] = \"Disposed\";\r\n    /**\r\n     * The connection is already in listening mode.\r\n     */\r\n    ConnectionErrors[ConnectionErrors[\"AlreadyListening\"] = 3] = \"AlreadyListening\";\r\n})(ConnectionErrors = exports.ConnectionErrors || (exports.ConnectionErrors = {}));\r\nclass ConnectionError extends Error {\r\n    constructor(code, message) {\r\n        super(message);\r\n        this.code = code;\r\n        Object.setPrototypeOf(this, ConnectionError.prototype);\r\n    }\r\n}\r\nexports.ConnectionError = ConnectionError;\r\nvar ConnectionStrategy;\r\n(function (ConnectionStrategy) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.cancelUndispatched);\r\n    }\r\n    ConnectionStrategy.is = is;\r\n})(ConnectionStrategy = exports.ConnectionStrategy || (exports.ConnectionStrategy = {}));\r\nvar ConnectionState;\r\n(function (ConnectionState) {\r\n    ConnectionState[ConnectionState[\"New\"] = 1] = \"New\";\r\n    ConnectionState[ConnectionState[\"Listening\"] = 2] = \"Listening\";\r\n    ConnectionState[ConnectionState[\"Closed\"] = 3] = \"Closed\";\r\n    ConnectionState[ConnectionState[\"Disposed\"] = 4] = \"Disposed\";\r\n})(ConnectionState || (ConnectionState = {}));\r\nfunction _createMessageConnection(messageReader, messageWriter, logger, strategy) {\r\n    let sequenceNumber = 0;\r\n    let notificationSquenceNumber = 0;\r\n    let unknownResponseSquenceNumber = 0;\r\n    const version = '2.0';\r\n    let starRequestHandler = undefined;\r\n    let requestHandlers = Object.create(null);\r\n    let starNotificationHandler = undefined;\r\n    let notificationHandlers = Object.create(null);\r\n    let progressHandlers = new Map();\r\n    let timer;\r\n    let messageQueue = new linkedMap_1.LinkedMap();\r\n    let responsePromises = Object.create(null);\r\n    let requestTokens = Object.create(null);\r\n    let trace = Trace.Off;\r\n    let traceFormat = TraceFormat.Text;\r\n    let tracer;\r\n    let state = ConnectionState.New;\r\n    let errorEmitter = new events_1.Emitter();\r\n    let closeEmitter = new events_1.Emitter();\r\n    let unhandledNotificationEmitter = new events_1.Emitter();\r\n    let unhandledProgressEmitter = new events_1.Emitter();\r\n    let disposeEmitter = new events_1.Emitter();\r\n    function createRequestQueueKey(id) {\r\n        return 'req-' + id.toString();\r\n    }\r\n    function createResponseQueueKey(id) {\r\n        if (id === null) {\r\n            return 'res-unknown-' + (++unknownResponseSquenceNumber).toString();\r\n        }\r\n        else {\r\n            return 'res-' + id.toString();\r\n        }\r\n    }\r\n    function createNotificationQueueKey() {\r\n        return 'not-' + (++notificationSquenceNumber).toString();\r\n    }\r\n    function addMessageToQueue(queue, message) {\r\n        if (messages_1.isRequestMessage(message)) {\r\n            queue.set(createRequestQueueKey(message.id), message);\r\n        }\r\n        else if (messages_1.isResponseMessage(message)) {\r\n            queue.set(createResponseQueueKey(message.id), message);\r\n        }\r\n        else {\r\n            queue.set(createNotificationQueueKey(), message);\r\n        }\r\n    }\r\n    function cancelUndispatched(_message) {\r\n        return undefined;\r\n    }\r\n    function isListening() {\r\n        return state === ConnectionState.Listening;\r\n    }\r\n    function isClosed() {\r\n        return state === ConnectionState.Closed;\r\n    }\r\n    function isDisposed() {\r\n        return state === ConnectionState.Disposed;\r\n    }\r\n    function closeHandler() {\r\n        if (state === ConnectionState.New || state === ConnectionState.Listening) {\r\n            state = ConnectionState.Closed;\r\n            closeEmitter.fire(undefined);\r\n        }\r\n        // If the connection is disposed don't sent close events.\r\n    }\r\n    function readErrorHandler(error) {\r\n        errorEmitter.fire([error, undefined, undefined]);\r\n    }\r\n    function writeErrorHandler(data) {\r\n        errorEmitter.fire(data);\r\n    }\r\n    messageReader.onClose(closeHandler);\r\n    messageReader.onError(readErrorHandler);\r\n    messageWriter.onClose(closeHandler);\r\n    messageWriter.onError(writeErrorHandler);\r\n    function triggerMessageQueue() {\r\n        if (timer || messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        timer = setImmediate(() => {\r\n            timer = undefined;\r\n            processMessageQueue();\r\n        });\r\n    }\r\n    function processMessageQueue() {\r\n        if (messageQueue.size === 0) {\r\n            return;\r\n        }\r\n        let message = messageQueue.shift();\r\n        try {\r\n            if (messages_1.isRequestMessage(message)) {\r\n                handleRequest(message);\r\n            }\r\n            else if (messages_1.isNotificationMessage(message)) {\r\n                handleNotification(message);\r\n            }\r\n            else if (messages_1.isResponseMessage(message)) {\r\n                handleResponse(message);\r\n            }\r\n            else {\r\n                handleInvalidMessage(message);\r\n            }\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    }\r\n    let callback = (message) => {\r\n        try {\r\n            // We have received a cancellation message. Check if the message is still in the queue\r\n            // and cancel it if allowed to do so.\r\n            if (messages_1.isNotificationMessage(message) && message.method === CancelNotification.type.method) {\r\n                let key = createRequestQueueKey(message.params.id);\r\n                let toCancel = messageQueue.get(key);\r\n                if (messages_1.isRequestMessage(toCancel)) {\r\n                    let response = strategy && strategy.cancelUndispatched ? strategy.cancelUndispatched(toCancel, cancelUndispatched) : cancelUndispatched(toCancel);\r\n                    if (response && (response.error !== void 0 || response.result !== void 0)) {\r\n                        messageQueue.delete(key);\r\n                        response.id = toCancel.id;\r\n                        traceSendingResponse(response, message.method, Date.now());\r\n                        messageWriter.write(response);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            addMessageToQueue(messageQueue, message);\r\n        }\r\n        finally {\r\n            triggerMessageQueue();\r\n        }\r\n    };\r\n    function handleRequest(requestMessage) {\r\n        if (isDisposed()) {\r\n            // we return here silently since we fired an event when the\r\n            // connection got disposed.\r\n            return;\r\n        }\r\n        function reply(resultOrError, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id\r\n            };\r\n            if (resultOrError instanceof messages_1.ResponseError) {\r\n                message.error = resultOrError.toJson();\r\n            }\r\n            else {\r\n                message.result = resultOrError === void 0 ? null : resultOrError;\r\n            }\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replyError(error, method, startTime) {\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                error: error.toJson()\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        function replySuccess(result, method, startTime) {\r\n            // The JSON RPC defines that a response must either have a result or an error\r\n            // So we can't treat undefined as a valid response result.\r\n            if (result === void 0) {\r\n                result = null;\r\n            }\r\n            let message = {\r\n                jsonrpc: version,\r\n                id: requestMessage.id,\r\n                result: result\r\n            };\r\n            traceSendingResponse(message, method, startTime);\r\n            messageWriter.write(message);\r\n        }\r\n        traceReceivedRequest(requestMessage);\r\n        let element = requestHandlers[requestMessage.method];\r\n        let type;\r\n        let requestHandler;\r\n        if (element) {\r\n            type = element.type;\r\n            requestHandler = element.handler;\r\n        }\r\n        let startTime = Date.now();\r\n        if (requestHandler || starRequestHandler) {\r\n            let cancellationSource = new cancellation_1.CancellationTokenSource();\r\n            let tokenKey = String(requestMessage.id);\r\n            requestTokens[tokenKey] = cancellationSource;\r\n            try {\r\n                let handlerResult;\r\n                if (requestMessage.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, cancellationSource.token);\r\n                }\r\n                else if (Is.array(requestMessage.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(...requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, ...requestMessage.params, cancellationSource.token);\r\n                }\r\n                else {\r\n                    handlerResult = requestHandler\r\n                        ? requestHandler(requestMessage.params, cancellationSource.token)\r\n                        : starRequestHandler(requestMessage.method, requestMessage.params, cancellationSource.token);\r\n                }\r\n                let promise = handlerResult;\r\n                if (!handlerResult) {\r\n                    delete requestTokens[tokenKey];\r\n                    replySuccess(handlerResult, requestMessage.method, startTime);\r\n                }\r\n                else if (promise.then) {\r\n                    promise.then((resultOrError) => {\r\n                        delete requestTokens[tokenKey];\r\n                        reply(resultOrError, requestMessage.method, startTime);\r\n                    }, error => {\r\n                        delete requestTokens[tokenKey];\r\n                        if (error instanceof messages_1.ResponseError) {\r\n                            replyError(error, requestMessage.method, startTime);\r\n                        }\r\n                        else if (error && Is.string(error.message)) {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                        }\r\n                        else {\r\n                            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    delete requestTokens[tokenKey];\r\n                    reply(handlerResult, requestMessage.method, startTime);\r\n                }\r\n            }\r\n            catch (error) {\r\n                delete requestTokens[tokenKey];\r\n                if (error instanceof messages_1.ResponseError) {\r\n                    reply(error, requestMessage.method, startTime);\r\n                }\r\n                else if (error && Is.string(error.message)) {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed with message: ${error.message}`), requestMessage.method, startTime);\r\n                }\r\n                else {\r\n                    replyError(new messages_1.ResponseError(messages_1.ErrorCodes.InternalError, `Request ${requestMessage.method} failed unexpectedly without providing any details.`), requestMessage.method, startTime);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            replyError(new messages_1.ResponseError(messages_1.ErrorCodes.MethodNotFound, `Unhandled method ${requestMessage.method}`), requestMessage.method, startTime);\r\n        }\r\n    }\r\n    function handleResponse(responseMessage) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        if (responseMessage.id === null) {\r\n            if (responseMessage.error) {\r\n                logger.error(`Received response message without id: Error is: \\n${JSON.stringify(responseMessage.error, undefined, 4)}`);\r\n            }\r\n            else {\r\n                logger.error(`Received response message without id. No further error information provided.`);\r\n            }\r\n        }\r\n        else {\r\n            let key = String(responseMessage.id);\r\n            let responsePromise = responsePromises[key];\r\n            traceReceivedResponse(responseMessage, responsePromise);\r\n            if (responsePromise) {\r\n                delete responsePromises[key];\r\n                try {\r\n                    if (responseMessage.error) {\r\n                        let error = responseMessage.error;\r\n                        responsePromise.reject(new messages_1.ResponseError(error.code, error.message, error.data));\r\n                    }\r\n                    else if (responseMessage.result !== void 0) {\r\n                        responsePromise.resolve(responseMessage.result);\r\n                    }\r\n                    else {\r\n                        throw new Error('Should never happen.');\r\n                    }\r\n                }\r\n                catch (error) {\r\n                    if (error.message) {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed with message: ${error.message}`);\r\n                    }\r\n                    else {\r\n                        logger.error(`Response handler '${responsePromise.method}' failed unexpectedly.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    function handleNotification(message) {\r\n        if (isDisposed()) {\r\n            // See handle request.\r\n            return;\r\n        }\r\n        let type = undefined;\r\n        let notificationHandler;\r\n        if (message.method === CancelNotification.type.method) {\r\n            notificationHandler = (params) => {\r\n                let id = params.id;\r\n                let source = requestTokens[String(id)];\r\n                if (source) {\r\n                    source.cancel();\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            let element = notificationHandlers[message.method];\r\n            if (element) {\r\n                notificationHandler = element.handler;\r\n                type = element.type;\r\n            }\r\n        }\r\n        if (notificationHandler || starNotificationHandler) {\r\n            try {\r\n                traceReceivedNotification(message);\r\n                if (message.params === void 0 || (type !== void 0 && type.numberOfParams === 0)) {\r\n                    notificationHandler ? notificationHandler() : starNotificationHandler(message.method);\r\n                }\r\n                else if (Is.array(message.params) && (type === void 0 || type.numberOfParams > 1)) {\r\n                    notificationHandler ? notificationHandler(...message.params) : starNotificationHandler(message.method, ...message.params);\r\n                }\r\n                else {\r\n                    notificationHandler ? notificationHandler(message.params) : starNotificationHandler(message.method, message.params);\r\n                }\r\n            }\r\n            catch (error) {\r\n                if (error.message) {\r\n                    logger.error(`Notification handler '${message.method}' failed with message: ${error.message}`);\r\n                }\r\n                else {\r\n                    logger.error(`Notification handler '${message.method}' failed unexpectedly.`);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            unhandledNotificationEmitter.fire(message);\r\n        }\r\n    }\r\n    function handleInvalidMessage(message) {\r\n        if (!message) {\r\n            logger.error('Received empty message.');\r\n            return;\r\n        }\r\n        logger.error(`Received message which is neither a response nor a notification message:\\n${JSON.stringify(message, null, 4)}`);\r\n        // Test whether we find an id to reject the promise\r\n        let responseMessage = message;\r\n        if (Is.string(responseMessage.id) || Is.number(responseMessage.id)) {\r\n            let key = String(responseMessage.id);\r\n            let responseHandler = responsePromises[key];\r\n            if (responseHandler) {\r\n                responseHandler.reject(new Error('The received response has neither a result nor an error property.'));\r\n            }\r\n        }\r\n    }\r\n    function traceSendingRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Sending request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-request', message);\r\n        }\r\n    }\r\n    function traceSendingNotification(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Sending notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-notification', message);\r\n        }\r\n    }\r\n    function traceSendingResponse(message, method, startTime) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            tracer.log(`Sending response '${method} - (${message.id})'. Processing request took ${Date.now() - startTime}ms`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('send-response', message);\r\n        }\r\n    }\r\n    function traceReceivedRequest(message) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose && message.params) {\r\n                data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n            }\r\n            tracer.log(`Received request '${message.method} - (${message.id})'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-request', message);\r\n        }\r\n    }\r\n    function traceReceivedNotification(message) {\r\n        if (trace === Trace.Off || !tracer || message.method === LogTraceNotification.type.method) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.params) {\r\n                    data = `Params: ${JSON.stringify(message.params, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    data = 'No parameters provided.\\n\\n';\r\n                }\r\n            }\r\n            tracer.log(`Received notification '${message.method}'.`, data);\r\n        }\r\n        else {\r\n            logLSPMessage('receive-notification', message);\r\n        }\r\n    }\r\n    function traceReceivedResponse(message, responsePromise) {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        if (traceFormat === TraceFormat.Text) {\r\n            let data = undefined;\r\n            if (trace === Trace.Verbose) {\r\n                if (message.error && message.error.data) {\r\n                    data = `Error data: ${JSON.stringify(message.error.data, null, 4)}\\n\\n`;\r\n                }\r\n                else {\r\n                    if (message.result) {\r\n                        data = `Result: ${JSON.stringify(message.result, null, 4)}\\n\\n`;\r\n                    }\r\n                    else if (message.error === void 0) {\r\n                        data = 'No result returned.\\n\\n';\r\n                    }\r\n                }\r\n            }\r\n            if (responsePromise) {\r\n                let error = message.error ? ` Request failed: ${message.error.message} (${message.error.code}).` : '';\r\n                tracer.log(`Received response '${responsePromise.method} - (${message.id})' in ${Date.now() - responsePromise.timerStart}ms.${error}`, data);\r\n            }\r\n            else {\r\n                tracer.log(`Received response ${message.id} without active response promise.`, data);\r\n            }\r\n        }\r\n        else {\r\n            logLSPMessage('receive-response', message);\r\n        }\r\n    }\r\n    function logLSPMessage(type, message) {\r\n        if (!tracer || trace === Trace.Off) {\r\n            return;\r\n        }\r\n        const lspMessage = {\r\n            isLSPMessage: true,\r\n            type,\r\n            message,\r\n            timestamp: Date.now()\r\n        };\r\n        tracer.log(lspMessage);\r\n    }\r\n    function throwIfClosedOrDisposed() {\r\n        if (isClosed()) {\r\n            throw new ConnectionError(ConnectionErrors.Closed, 'Connection is closed.');\r\n        }\r\n        if (isDisposed()) {\r\n            throw new ConnectionError(ConnectionErrors.Disposed, 'Connection is disposed.');\r\n        }\r\n    }\r\n    function throwIfListening() {\r\n        if (isListening()) {\r\n            throw new ConnectionError(ConnectionErrors.AlreadyListening, 'Connection is already listening');\r\n        }\r\n    }\r\n    function throwIfNotListening() {\r\n        if (!isListening()) {\r\n            throw new Error('Call listen() first.');\r\n        }\r\n    }\r\n    function undefinedToNull(param) {\r\n        if (param === void 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return param;\r\n        }\r\n    }\r\n    function computeMessageParams(type, params) {\r\n        let result;\r\n        let numberOfParams = type.numberOfParams;\r\n        switch (numberOfParams) {\r\n            case 0:\r\n                result = null;\r\n                break;\r\n            case 1:\r\n                result = undefinedToNull(params[0]);\r\n                break;\r\n            default:\r\n                result = [];\r\n                for (let i = 0; i < params.length && i < numberOfParams; i++) {\r\n                    result.push(undefinedToNull(params[i]));\r\n                }\r\n                if (params.length < numberOfParams) {\r\n                    for (let i = params.length; i < numberOfParams; i++) {\r\n                        result.push(null);\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        return result;\r\n    }\r\n    let connection = {\r\n        sendNotification: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            let method;\r\n            let messageParams;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        messageParams = params[0];\r\n                        break;\r\n                    default:\r\n                        messageParams = params;\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n            }\r\n            let notificationMessage = {\r\n                jsonrpc: version,\r\n                method: method,\r\n                params: messageParams\r\n            };\r\n            traceSendingNotification(notificationMessage);\r\n            messageWriter.write(notificationMessage);\r\n        },\r\n        onNotification: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starNotificationHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    notificationHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    notificationHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        onProgress: (_type, token, handler) => {\r\n            if (progressHandlers.has(token)) {\r\n                throw new Error(`Progress handler for token ${token} already registered`);\r\n            }\r\n            progressHandlers.set(token, handler);\r\n            return {\r\n                dispose: () => {\r\n                    progressHandlers.delete(token);\r\n                }\r\n            };\r\n        },\r\n        sendProgress: (_type, token, value) => {\r\n            connection.sendNotification(ProgressNotification.type, { token, value });\r\n        },\r\n        onUnhandledProgress: unhandledProgressEmitter.event,\r\n        sendRequest: (type, ...params) => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfNotListening();\r\n            let method;\r\n            let messageParams;\r\n            let token = undefined;\r\n            if (Is.string(type)) {\r\n                method = type;\r\n                switch (params.length) {\r\n                    case 0:\r\n                        messageParams = null;\r\n                        break;\r\n                    case 1:\r\n                        // The cancellation token is optional so it can also be undefined.\r\n                        if (cancellation_1.CancellationToken.is(params[0])) {\r\n                            messageParams = null;\r\n                            token = params[0];\r\n                        }\r\n                        else {\r\n                            messageParams = undefinedToNull(params[0]);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        const last = params.length - 1;\r\n                        if (cancellation_1.CancellationToken.is(params[last])) {\r\n                            token = params[last];\r\n                            if (params.length === 2) {\r\n                                messageParams = undefinedToNull(params[0]);\r\n                            }\r\n                            else {\r\n                                messageParams = params.slice(0, last).map(value => undefinedToNull(value));\r\n                            }\r\n                        }\r\n                        else {\r\n                            messageParams = params.map(value => undefinedToNull(value));\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                method = type.method;\r\n                messageParams = computeMessageParams(type, params);\r\n                let numberOfParams = type.numberOfParams;\r\n                token = cancellation_1.CancellationToken.is(params[numberOfParams]) ? params[numberOfParams] : undefined;\r\n            }\r\n            let id = sequenceNumber++;\r\n            let result = new Promise((resolve, reject) => {\r\n                let requestMessage = {\r\n                    jsonrpc: version,\r\n                    id: id,\r\n                    method: method,\r\n                    params: messageParams\r\n                };\r\n                let responsePromise = { method: method, timerStart: Date.now(), resolve, reject };\r\n                traceSendingRequest(requestMessage);\r\n                try {\r\n                    messageWriter.write(requestMessage);\r\n                }\r\n                catch (e) {\r\n                    // Writing the message failed. So we need to reject the promise.\r\n                    responsePromise.reject(new messages_1.ResponseError(messages_1.ErrorCodes.MessageWriteError, e.message ? e.message : 'Unknown reason'));\r\n                    responsePromise = null;\r\n                }\r\n                if (responsePromise) {\r\n                    responsePromises[String(id)] = responsePromise;\r\n                }\r\n            });\r\n            if (token) {\r\n                token.onCancellationRequested(() => {\r\n                    connection.sendNotification(CancelNotification.type, { id });\r\n                });\r\n            }\r\n            return result;\r\n        },\r\n        onRequest: (type, handler) => {\r\n            throwIfClosedOrDisposed();\r\n            if (Is.func(type)) {\r\n                starRequestHandler = type;\r\n            }\r\n            else if (handler) {\r\n                if (Is.string(type)) {\r\n                    requestHandlers[type] = { type: undefined, handler };\r\n                }\r\n                else {\r\n                    requestHandlers[type.method] = { type, handler };\r\n                }\r\n            }\r\n        },\r\n        trace: (_value, _tracer, sendNotificationOrTraceOptions) => {\r\n            let _sendNotification = false;\r\n            let _traceFormat = TraceFormat.Text;\r\n            if (sendNotificationOrTraceOptions !== void 0) {\r\n                if (Is.boolean(sendNotificationOrTraceOptions)) {\r\n                    _sendNotification = sendNotificationOrTraceOptions;\r\n                }\r\n                else {\r\n                    _sendNotification = sendNotificationOrTraceOptions.sendNotification || false;\r\n                    _traceFormat = sendNotificationOrTraceOptions.traceFormat || TraceFormat.Text;\r\n                }\r\n            }\r\n            trace = _value;\r\n            traceFormat = _traceFormat;\r\n            if (trace === Trace.Off) {\r\n                tracer = undefined;\r\n            }\r\n            else {\r\n                tracer = _tracer;\r\n            }\r\n            if (_sendNotification && !isClosed() && !isDisposed()) {\r\n                connection.sendNotification(SetTraceNotification.type, { value: Trace.toString(_value) });\r\n            }\r\n        },\r\n        onError: errorEmitter.event,\r\n        onClose: closeEmitter.event,\r\n        onUnhandledNotification: unhandledNotificationEmitter.event,\r\n        onDispose: disposeEmitter.event,\r\n        dispose: () => {\r\n            if (isDisposed()) {\r\n                return;\r\n            }\r\n            state = ConnectionState.Disposed;\r\n            disposeEmitter.fire(undefined);\r\n            let error = new Error('Connection got disposed.');\r\n            Object.keys(responsePromises).forEach((key) => {\r\n                responsePromises[key].reject(error);\r\n            });\r\n            responsePromises = Object.create(null);\r\n            requestTokens = Object.create(null);\r\n            messageQueue = new linkedMap_1.LinkedMap();\r\n            // Test for backwards compatibility\r\n            if (Is.func(messageWriter.dispose)) {\r\n                messageWriter.dispose();\r\n            }\r\n            if (Is.func(messageReader.dispose)) {\r\n                messageReader.dispose();\r\n            }\r\n        },\r\n        listen: () => {\r\n            throwIfClosedOrDisposed();\r\n            throwIfListening();\r\n            state = ConnectionState.Listening;\r\n            messageReader.listen(callback);\r\n        },\r\n        inspect: () => {\r\n            // eslint-disable-next-line no-console\r\n            console.log('inspect');\r\n        }\r\n    };\r\n    connection.onNotification(LogTraceNotification.type, (params) => {\r\n        if (trace === Trace.Off || !tracer) {\r\n            return;\r\n        }\r\n        tracer.log(params.message, trace === Trace.Verbose ? params.verbose : undefined);\r\n    });\r\n    connection.onNotification(ProgressNotification.type, (params) => {\r\n        const handler = progressHandlers.get(params.token);\r\n        if (handler) {\r\n            handler(params.value);\r\n        }\r\n        else {\r\n            unhandledProgressEmitter.fire(params);\r\n        }\r\n    });\r\n    return connection;\r\n}\r\nfunction isMessageReader(value) {\r\n    return value.listen !== void 0 && value.read === void 0;\r\n}\r\nfunction isMessageWriter(value) {\r\n    return value.write !== void 0 && value.end === void 0;\r\n}\r\nfunction createMessageConnection(input, output, logger, strategy) {\r\n    if (!logger) {\r\n        logger = exports.NullLogger;\r\n    }\r\n    let reader = isMessageReader(input) ? input : new messageReader_1.StreamMessageReader(input);\r\n    let writer = isMessageWriter(output) ? output : new messageWriter_1.StreamMessageWriter(output);\r\n    return _createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createMessageConnection = createMessageConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet DefaultSize = 8192;\r\nlet CR = Buffer.from('\\r', 'ascii')[0];\r\nlet LF = Buffer.from('\\n', 'ascii')[0];\r\nlet CRLF = '\\r\\n';\r\nclass MessageBuffer {\r\n    constructor(encoding = 'utf8') {\r\n        this.encoding = encoding;\r\n        this.index = 0;\r\n        this.buffer = Buffer.allocUnsafe(DefaultSize);\r\n    }\r\n    append(chunk) {\r\n        var toAppend = chunk;\r\n        if (typeof (chunk) === 'string') {\r\n            var str = chunk;\r\n            var bufferLen = Buffer.byteLength(str, this.encoding);\r\n            toAppend = Buffer.allocUnsafe(bufferLen);\r\n            toAppend.write(str, 0, bufferLen, this.encoding);\r\n        }\r\n        if (this.buffer.length - this.index >= toAppend.length) {\r\n            toAppend.copy(this.buffer, this.index, 0, toAppend.length);\r\n        }\r\n        else {\r\n            var newSize = (Math.ceil((this.index + toAppend.length) / DefaultSize) + 1) * DefaultSize;\r\n            if (this.index === 0) {\r\n                this.buffer = Buffer.allocUnsafe(newSize);\r\n                toAppend.copy(this.buffer, 0, 0, toAppend.length);\r\n            }\r\n            else {\r\n                this.buffer = Buffer.concat([this.buffer.slice(0, this.index), toAppend], newSize);\r\n            }\r\n        }\r\n        this.index += toAppend.length;\r\n    }\r\n    tryReadHeaders() {\r\n        let result = undefined;\r\n        let current = 0;\r\n        while (current + 3 < this.index && (this.buffer[current] !== CR || this.buffer[current + 1] !== LF || this.buffer[current + 2] !== CR || this.buffer[current + 3] !== LF)) {\r\n            current++;\r\n        }\r\n        // No header / body separator found (e.g CRLFCRLF)\r\n        if (current + 3 >= this.index) {\r\n            return result;\r\n        }\r\n        result = Object.create(null);\r\n        let headers = this.buffer.toString('ascii', 0, current).split(CRLF);\r\n        headers.forEach((header) => {\r\n            let index = header.indexOf(':');\r\n            if (index === -1) {\r\n                throw new Error('Message header must separate key and value using :');\r\n            }\r\n            let key = header.substr(0, index);\r\n            let value = header.substr(index + 1).trim();\r\n            result[key] = value;\r\n        });\r\n        let nextStart = current + 4;\r\n        this.buffer = this.buffer.slice(nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    tryReadContent(length) {\r\n        if (this.index < length) {\r\n            return null;\r\n        }\r\n        let result = this.buffer.toString(this.encoding, 0, length);\r\n        let nextStart = length;\r\n        this.buffer.copy(this.buffer, 0, nextStart);\r\n        this.index = this.index - nextStart;\r\n        return result;\r\n    }\r\n    get numberOfBytes() {\r\n        return this.index;\r\n    }\r\n}\r\nvar MessageReader;\r\n(function (MessageReader) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.listen) && Is.func(candidate.dispose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.onClose) && Is.func(candidate.onPartialMessage);\r\n    }\r\n    MessageReader.is = is;\r\n})(MessageReader = exports.MessageReader || (exports.MessageReader = {}));\r\nclass AbstractMessageReader {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n        this.partialMessageEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error) {\r\n        this.errorEmitter.fire(this.asError(error));\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    get onPartialMessage() {\r\n        return this.partialMessageEmitter.event;\r\n    }\r\n    firePartialMessage(info) {\r\n        this.partialMessageEmitter.fire(info);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Reader received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageReader = AbstractMessageReader;\r\nclass StreamMessageReader extends AbstractMessageReader {\r\n    constructor(readable, encoding = 'utf8') {\r\n        super();\r\n        this.readable = readable;\r\n        this.buffer = new MessageBuffer(encoding);\r\n        this._partialMessageTimeout = 10000;\r\n    }\r\n    set partialMessageTimeout(timeout) {\r\n        this._partialMessageTimeout = timeout;\r\n    }\r\n    get partialMessageTimeout() {\r\n        return this._partialMessageTimeout;\r\n    }\r\n    listen(callback) {\r\n        this.nextMessageLength = -1;\r\n        this.messageToken = 0;\r\n        this.partialMessageTimer = undefined;\r\n        this.callback = callback;\r\n        this.readable.on('data', (data) => {\r\n            this.onData(data);\r\n        });\r\n        this.readable.on('error', (error) => this.fireError(error));\r\n        this.readable.on('close', () => this.fireClose());\r\n    }\r\n    onData(data) {\r\n        this.buffer.append(data);\r\n        while (true) {\r\n            if (this.nextMessageLength === -1) {\r\n                let headers = this.buffer.tryReadHeaders();\r\n                if (!headers) {\r\n                    return;\r\n                }\r\n                let contentLength = headers['Content-Length'];\r\n                if (!contentLength) {\r\n                    throw new Error('Header must provide a Content-Length property.');\r\n                }\r\n                let length = parseInt(contentLength);\r\n                if (isNaN(length)) {\r\n                    throw new Error('Content-Length value must be a number.');\r\n                }\r\n                this.nextMessageLength = length;\r\n                // Take the encoding form the header. For compatibility\r\n                // treat both utf-8 and utf8 as node utf8\r\n            }\r\n            var msg = this.buffer.tryReadContent(this.nextMessageLength);\r\n            if (msg === null) {\r\n                /** We haven't received the full message yet. */\r\n                this.setPartialMessageTimer();\r\n                return;\r\n            }\r\n            this.clearPartialMessageTimer();\r\n            this.nextMessageLength = -1;\r\n            this.messageToken++;\r\n            var json = JSON.parse(msg);\r\n            this.callback(json);\r\n        }\r\n    }\r\n    clearPartialMessageTimer() {\r\n        if (this.partialMessageTimer) {\r\n            clearTimeout(this.partialMessageTimer);\r\n            this.partialMessageTimer = undefined;\r\n        }\r\n    }\r\n    setPartialMessageTimer() {\r\n        this.clearPartialMessageTimer();\r\n        if (this._partialMessageTimeout <= 0) {\r\n            return;\r\n        }\r\n        this.partialMessageTimer = setTimeout((token, timeout) => {\r\n            this.partialMessageTimer = undefined;\r\n            if (token === this.messageToken) {\r\n                this.firePartialMessage({ messageToken: token, waitingTime: timeout });\r\n                this.setPartialMessageTimer();\r\n            }\r\n        }, this._partialMessageTimeout, this.messageToken, this._partialMessageTimeout);\r\n    }\r\n}\r\nexports.StreamMessageReader = StreamMessageReader;\r\nclass IPCMessageReader extends AbstractMessageReader {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose());\r\n    }\r\n    listen(callback) {\r\n        this.process.on('message', callback);\r\n    }\r\n}\r\nexports.IPCMessageReader = IPCMessageReader;\r\nclass SocketMessageReader extends StreamMessageReader {\r\n    constructor(socket, encoding = 'utf-8') {\r\n        super(socket, encoding);\r\n    }\r\n}\r\nexports.SocketMessageReader = SocketMessageReader;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst events_1 = require(\"./events\");\r\nconst Is = require(\"./is\");\r\nlet ContentLength = 'Content-Length: ';\r\nlet CRLF = '\\r\\n';\r\nvar MessageWriter;\r\n(function (MessageWriter) {\r\n    function is(value) {\r\n        let candidate = value;\r\n        return candidate && Is.func(candidate.dispose) && Is.func(candidate.onClose) &&\r\n            Is.func(candidate.onError) && Is.func(candidate.write);\r\n    }\r\n    MessageWriter.is = is;\r\n})(MessageWriter = exports.MessageWriter || (exports.MessageWriter = {}));\r\nclass AbstractMessageWriter {\r\n    constructor() {\r\n        this.errorEmitter = new events_1.Emitter();\r\n        this.closeEmitter = new events_1.Emitter();\r\n    }\r\n    dispose() {\r\n        this.errorEmitter.dispose();\r\n        this.closeEmitter.dispose();\r\n    }\r\n    get onError() {\r\n        return this.errorEmitter.event;\r\n    }\r\n    fireError(error, message, count) {\r\n        this.errorEmitter.fire([this.asError(error), message, count]);\r\n    }\r\n    get onClose() {\r\n        return this.closeEmitter.event;\r\n    }\r\n    fireClose() {\r\n        this.closeEmitter.fire(undefined);\r\n    }\r\n    asError(error) {\r\n        if (error instanceof Error) {\r\n            return error;\r\n        }\r\n        else {\r\n            return new Error(`Writer received error. Reason: ${Is.string(error.message) ? error.message : 'unknown'}`);\r\n        }\r\n    }\r\n}\r\nexports.AbstractMessageWriter = AbstractMessageWriter;\r\nclass StreamMessageWriter extends AbstractMessageWriter {\r\n    constructor(writable, encoding = 'utf8') {\r\n        super();\r\n        this.writable = writable;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.writable.on('error', (error) => this.fireError(error));\r\n        this.writable.on('close', () => this.fireClose());\r\n    }\r\n    write(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.writable.write(headers.join(''), 'ascii');\r\n            // Now write the content. This can be written in any encoding\r\n            this.writable.write(json, this.encoding);\r\n            this.errorCount = 0;\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.StreamMessageWriter = StreamMessageWriter;\r\nclass IPCMessageWriter extends AbstractMessageWriter {\r\n    constructor(process) {\r\n        super();\r\n        this.process = process;\r\n        this.errorCount = 0;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        let eventEmitter = this.process;\r\n        eventEmitter.on('error', (error) => this.fireError(error));\r\n        eventEmitter.on('close', () => this.fireClose);\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        try {\r\n            if (this.process.send) {\r\n                this.sending = true;\r\n                this.process.send(msg, undefined, undefined, (error) => {\r\n                    this.sending = false;\r\n                    if (error) {\r\n                        this.errorCount++;\r\n                        this.fireError(error, msg, this.errorCount);\r\n                    }\r\n                    else {\r\n                        this.errorCount = 0;\r\n                    }\r\n                    if (this.queue.length > 0) {\r\n                        this.doWriteMessage(this.queue.shift());\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        catch (error) {\r\n            this.errorCount++;\r\n            this.fireError(error, msg, this.errorCount);\r\n        }\r\n    }\r\n}\r\nexports.IPCMessageWriter = IPCMessageWriter;\r\nclass SocketMessageWriter extends AbstractMessageWriter {\r\n    constructor(socket, encoding = 'utf8') {\r\n        super();\r\n        this.socket = socket;\r\n        this.queue = [];\r\n        this.sending = false;\r\n        this.encoding = encoding;\r\n        this.errorCount = 0;\r\n        this.socket.on('error', (error) => this.fireError(error));\r\n        this.socket.on('close', () => this.fireClose());\r\n    }\r\n    dispose() {\r\n        super.dispose();\r\n        this.socket.destroy();\r\n    }\r\n    write(msg) {\r\n        if (!this.sending && this.queue.length === 0) {\r\n            // See https://github.com/nodejs/node/issues/7657\r\n            this.doWriteMessage(msg);\r\n        }\r\n        else {\r\n            this.queue.push(msg);\r\n        }\r\n    }\r\n    doWriteMessage(msg) {\r\n        let json = JSON.stringify(msg);\r\n        let contentLength = Buffer.byteLength(json, this.encoding);\r\n        let headers = [\r\n            ContentLength, contentLength.toString(), CRLF,\r\n            CRLF\r\n        ];\r\n        try {\r\n            // Header must be written in ASCII encoding\r\n            this.sending = true;\r\n            this.socket.write(headers.join(''), 'ascii', (error) => {\r\n                if (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n                try {\r\n                    // Now write the content. This can be written in any encoding\r\n                    this.socket.write(json, this.encoding, (error) => {\r\n                        this.sending = false;\r\n                        if (error) {\r\n                            this.handleError(error, msg);\r\n                        }\r\n                        else {\r\n                            this.errorCount = 0;\r\n                        }\r\n                        if (this.queue.length > 0) {\r\n                            this.doWriteMessage(this.queue.shift());\r\n                        }\r\n                    });\r\n                }\r\n                catch (error) {\r\n                    this.handleError(error, msg);\r\n                }\r\n            });\r\n        }\r\n        catch (error) {\r\n            this.handleError(error, msg);\r\n        }\r\n    }\r\n    handleError(error, msg) {\r\n        this.errorCount++;\r\n        this.fireError(error, msg, this.errorCount);\r\n    }\r\n}\r\nexports.SocketMessageWriter = SocketMessageWriter;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst is = require(\"./is\");\r\n/**\r\n * Predefined error codes.\r\n */\r\nvar ErrorCodes;\r\n(function (ErrorCodes) {\r\n    // Defined by JSON RPC\r\n    ErrorCodes.ParseError = -32700;\r\n    ErrorCodes.InvalidRequest = -32600;\r\n    ErrorCodes.MethodNotFound = -32601;\r\n    ErrorCodes.InvalidParams = -32602;\r\n    ErrorCodes.InternalError = -32603;\r\n    ErrorCodes.serverErrorStart = -32099;\r\n    ErrorCodes.serverErrorEnd = -32000;\r\n    ErrorCodes.ServerNotInitialized = -32002;\r\n    ErrorCodes.UnknownErrorCode = -32001;\r\n    // Defined by the protocol.\r\n    ErrorCodes.RequestCancelled = -32800;\r\n    ErrorCodes.ContentModified = -32801;\r\n    // Defined by VSCode library.\r\n    ErrorCodes.MessageWriteError = 1;\r\n    ErrorCodes.MessageReadError = 2;\r\n})(ErrorCodes = exports.ErrorCodes || (exports.ErrorCodes = {}));\r\n/**\r\n * An error object return in a response in case a request\r\n * has failed.\r\n */\r\nclass ResponseError extends Error {\r\n    constructor(code, message, data) {\r\n        super(message);\r\n        this.code = is.number(code) ? code : ErrorCodes.UnknownErrorCode;\r\n        this.data = data;\r\n        Object.setPrototypeOf(this, ResponseError.prototype);\r\n    }\r\n    toJson() {\r\n        return {\r\n            code: this.code,\r\n            message: this.message,\r\n            data: this.data,\r\n        };\r\n    }\r\n}\r\nexports.ResponseError = ResponseError;\r\n/**\r\n * An abstract implementation of a MessageType.\r\n */\r\nclass AbstractMessageType {\r\n    constructor(_method, _numberOfParams) {\r\n        this._method = _method;\r\n        this._numberOfParams = _numberOfParams;\r\n    }\r\n    get method() {\r\n        return this._method;\r\n    }\r\n    get numberOfParams() {\r\n        return this._numberOfParams;\r\n    }\r\n}\r\nexports.AbstractMessageType = AbstractMessageType;\r\n/**\r\n * Classes to type request response pairs\r\n *\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass RequestType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.RequestType0 = RequestType0;\r\nclass RequestType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType = RequestType;\r\nclass RequestType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.RequestType1 = RequestType1;\r\nclass RequestType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.RequestType2 = RequestType2;\r\nclass RequestType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.RequestType3 = RequestType3;\r\nclass RequestType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.RequestType4 = RequestType4;\r\nclass RequestType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.RequestType5 = RequestType5;\r\nclass RequestType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.RequestType6 = RequestType6;\r\nclass RequestType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.RequestType7 = RequestType7;\r\nclass RequestType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.RequestType8 = RequestType8;\r\nclass RequestType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.RequestType9 = RequestType9;\r\n/**\r\n * The type parameter RO will be removed in the next major version\r\n * of the JSON RPC library since it is a LSP concept and doesn't\r\n * belong here. For now it is tagged as default never.\r\n */\r\nclass NotificationType extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n        this._ = undefined;\r\n    }\r\n}\r\nexports.NotificationType = NotificationType;\r\nclass NotificationType0 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 0);\r\n    }\r\n}\r\nexports.NotificationType0 = NotificationType0;\r\nclass NotificationType1 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 1);\r\n    }\r\n}\r\nexports.NotificationType1 = NotificationType1;\r\nclass NotificationType2 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 2);\r\n    }\r\n}\r\nexports.NotificationType2 = NotificationType2;\r\nclass NotificationType3 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 3);\r\n    }\r\n}\r\nexports.NotificationType3 = NotificationType3;\r\nclass NotificationType4 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 4);\r\n    }\r\n}\r\nexports.NotificationType4 = NotificationType4;\r\nclass NotificationType5 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 5);\r\n    }\r\n}\r\nexports.NotificationType5 = NotificationType5;\r\nclass NotificationType6 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 6);\r\n    }\r\n}\r\nexports.NotificationType6 = NotificationType6;\r\nclass NotificationType7 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 7);\r\n    }\r\n}\r\nexports.NotificationType7 = NotificationType7;\r\nclass NotificationType8 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 8);\r\n    }\r\n}\r\nexports.NotificationType8 = NotificationType8;\r\nclass NotificationType9 extends AbstractMessageType {\r\n    constructor(method) {\r\n        super(method, 9);\r\n    }\r\n}\r\nexports.NotificationType9 = NotificationType9;\r\n/**\r\n * Tests if the given message is a request message\r\n */\r\nfunction isRequestMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && (is.string(candidate.id) || is.number(candidate.id));\r\n}\r\nexports.isRequestMessage = isRequestMessage;\r\n/**\r\n * Tests if the given message is a notification message\r\n */\r\nfunction isNotificationMessage(message) {\r\n    let candidate = message;\r\n    return candidate && is.string(candidate.method) && message.id === void 0;\r\n}\r\nexports.isNotificationMessage = isNotificationMessage;\r\n/**\r\n * Tests if the given message is a response message\r\n */\r\nfunction isResponseMessage(message) {\r\n    let candidate = message;\r\n    return candidate && (candidate.result !== void 0 || !!candidate.error) && (is.string(candidate.id) || is.number(candidate.id) || candidate.id === null);\r\n}\r\nexports.isResponseMessage = isResponseMessage;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst path_1 = require(\"path\");\r\nconst os_1 = require(\"os\");\r\nconst crypto_1 = require(\"crypto\");\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction generateRandomPipeName() {\r\n    const randomSuffix = crypto_1.randomBytes(21).toString('hex');\r\n    if (process.platform === 'win32') {\r\n        return `\\\\\\\\.\\\\pipe\\\\vscode-jsonrpc-${randomSuffix}-sock`;\r\n    }\r\n    else {\r\n        // Mac/Unix: use socket file\r\n        return path_1.join(os_1.tmpdir(), `vscode-${randomSuffix}.sock`);\r\n    }\r\n}\r\nexports.generateRandomPipeName = generateRandomPipeName;\r\nfunction createClientPipeTransport(pipeName, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(pipeName, () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientPipeTransport = createClientPipeTransport;\r\nfunction createServerPipeTransport(pipeName, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(pipeName);\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerPipeTransport = createServerPipeTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst net_1 = require(\"net\");\r\nconst messageReader_1 = require(\"./messageReader\");\r\nconst messageWriter_1 = require(\"./messageWriter\");\r\nfunction createClientSocketTransport(port, encoding = 'utf-8') {\r\n    let connectResolve;\r\n    let connected = new Promise((resolve, _reject) => {\r\n        connectResolve = resolve;\r\n    });\r\n    return new Promise((resolve, reject) => {\r\n        let server = net_1.createServer((socket) => {\r\n            server.close();\r\n            connectResolve([\r\n                new messageReader_1.SocketMessageReader(socket, encoding),\r\n                new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n            ]);\r\n        });\r\n        server.on('error', reject);\r\n        server.listen(port, '127.0.0.1', () => {\r\n            server.removeListener('error', reject);\r\n            resolve({\r\n                onConnected: () => { return connected; }\r\n            });\r\n        });\r\n    });\r\n}\r\nexports.createClientSocketTransport = createClientSocketTransport;\r\nfunction createServerSocketTransport(port, encoding = 'utf-8') {\r\n    const socket = net_1.createConnection(port, '127.0.0.1');\r\n    return [\r\n        new messageReader_1.SocketMessageReader(socket, encoding),\r\n        new messageWriter_1.SocketMessageWriter(socket, encoding)\r\n    ];\r\n}\r\nexports.createServerSocketTransport = createServerSocketTransport;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nexports.ErrorCodes = vscode_jsonrpc_1.ErrorCodes;\r\nexports.ResponseError = vscode_jsonrpc_1.ResponseError;\r\nexports.CancellationToken = vscode_jsonrpc_1.CancellationToken;\r\nexports.CancellationTokenSource = vscode_jsonrpc_1.CancellationTokenSource;\r\nexports.Disposable = vscode_jsonrpc_1.Disposable;\r\nexports.Event = vscode_jsonrpc_1.Event;\r\nexports.Emitter = vscode_jsonrpc_1.Emitter;\r\nexports.Trace = vscode_jsonrpc_1.Trace;\r\nexports.TraceFormat = vscode_jsonrpc_1.TraceFormat;\r\nexports.SetTraceNotification = vscode_jsonrpc_1.SetTraceNotification;\r\nexports.LogTraceNotification = vscode_jsonrpc_1.LogTraceNotification;\r\nexports.RequestType = vscode_jsonrpc_1.RequestType;\r\nexports.RequestType0 = vscode_jsonrpc_1.RequestType0;\r\nexports.NotificationType = vscode_jsonrpc_1.NotificationType;\r\nexports.NotificationType0 = vscode_jsonrpc_1.NotificationType0;\r\nexports.MessageReader = vscode_jsonrpc_1.MessageReader;\r\nexports.MessageWriter = vscode_jsonrpc_1.MessageWriter;\r\nexports.ConnectionStrategy = vscode_jsonrpc_1.ConnectionStrategy;\r\nexports.StreamMessageReader = vscode_jsonrpc_1.StreamMessageReader;\r\nexports.StreamMessageWriter = vscode_jsonrpc_1.StreamMessageWriter;\r\nexports.IPCMessageReader = vscode_jsonrpc_1.IPCMessageReader;\r\nexports.IPCMessageWriter = vscode_jsonrpc_1.IPCMessageWriter;\r\nexports.createClientPipeTransport = vscode_jsonrpc_1.createClientPipeTransport;\r\nexports.createServerPipeTransport = vscode_jsonrpc_1.createServerPipeTransport;\r\nexports.generateRandomPipeName = vscode_jsonrpc_1.generateRandomPipeName;\r\nexports.createClientSocketTransport = vscode_jsonrpc_1.createClientSocketTransport;\r\nexports.createServerSocketTransport = vscode_jsonrpc_1.createServerSocketTransport;\r\nexports.ProgressType = vscode_jsonrpc_1.ProgressType;\r\n__export(require(\"vscode-languageserver-types\"));\r\n__export(require(\"./protocol\"));\r\nconst callHierarchy = require(\"./protocol.callHierarchy.proposed\");\r\nconst st = require(\"./protocol.sematicTokens.proposed\");\r\nvar Proposed;\r\n(function (Proposed) {\r\n    let CallHierarchyPrepareRequest;\r\n    (function (CallHierarchyPrepareRequest) {\r\n        CallHierarchyPrepareRequest.method = callHierarchy.CallHierarchyPrepareRequest.method;\r\n        CallHierarchyPrepareRequest.type = callHierarchy.CallHierarchyPrepareRequest.type;\r\n    })(CallHierarchyPrepareRequest = Proposed.CallHierarchyPrepareRequest || (Proposed.CallHierarchyPrepareRequest = {}));\r\n    let CallHierarchyIncomingCallsRequest;\r\n    (function (CallHierarchyIncomingCallsRequest) {\r\n        CallHierarchyIncomingCallsRequest.method = callHierarchy.CallHierarchyIncomingCallsRequest.method;\r\n        CallHierarchyIncomingCallsRequest.type = callHierarchy.CallHierarchyIncomingCallsRequest.type;\r\n    })(CallHierarchyIncomingCallsRequest = Proposed.CallHierarchyIncomingCallsRequest || (Proposed.CallHierarchyIncomingCallsRequest = {}));\r\n    let CallHierarchyOutgoingCallsRequest;\r\n    (function (CallHierarchyOutgoingCallsRequest) {\r\n        CallHierarchyOutgoingCallsRequest.method = callHierarchy.CallHierarchyOutgoingCallsRequest.method;\r\n        CallHierarchyOutgoingCallsRequest.type = callHierarchy.CallHierarchyOutgoingCallsRequest.type;\r\n    })(CallHierarchyOutgoingCallsRequest = Proposed.CallHierarchyOutgoingCallsRequest || (Proposed.CallHierarchyOutgoingCallsRequest = {}));\r\n    Proposed.SemanticTokenTypes = st.SemanticTokenTypes;\r\n    Proposed.SemanticTokenModifiers = st.SemanticTokenModifiers;\r\n    Proposed.SemanticTokens = st.SemanticTokens;\r\n    let SemanticTokensRequest;\r\n    (function (SemanticTokensRequest) {\r\n        SemanticTokensRequest.method = st.SemanticTokensRequest.method;\r\n        SemanticTokensRequest.type = st.SemanticTokensRequest.type;\r\n    })(SemanticTokensRequest = Proposed.SemanticTokensRequest || (Proposed.SemanticTokensRequest = {}));\r\n    let SemanticTokensEditsRequest;\r\n    (function (SemanticTokensEditsRequest) {\r\n        SemanticTokensEditsRequest.method = st.SemanticTokensEditsRequest.method;\r\n        SemanticTokensEditsRequest.type = st.SemanticTokensEditsRequest.type;\r\n    })(SemanticTokensEditsRequest = Proposed.SemanticTokensEditsRequest || (Proposed.SemanticTokensEditsRequest = {}));\r\n    let SemanticTokensRangeRequest;\r\n    (function (SemanticTokensRangeRequest) {\r\n        SemanticTokensRangeRequest.method = st.SemanticTokensRangeRequest.method;\r\n        SemanticTokensRangeRequest.type = st.SemanticTokensRangeRequest.type;\r\n    })(SemanticTokensRangeRequest = Proposed.SemanticTokensRangeRequest || (Proposed.SemanticTokensRangeRequest = {}));\r\n})(Proposed = exports.Proposed || (exports.Proposed = {}));\r\nfunction createProtocolConnection(reader, writer, logger, strategy) {\r\n    return vscode_jsonrpc_1.createMessageConnection(reader, writer, logger, strategy);\r\n}\r\nexports.createProtocolConnection = createProtocolConnection;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nclass ProtocolRequestType0 extends vscode_jsonrpc_1.RequestType0 {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolRequestType0 = ProtocolRequestType0;\r\nclass ProtocolRequestType extends vscode_jsonrpc_1.RequestType {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolRequestType = ProtocolRequestType;\r\nclass ProtocolNotificationType extends vscode_jsonrpc_1.NotificationType {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolNotificationType = ProtocolNotificationType;\r\nclass ProtocolNotificationType0 extends vscode_jsonrpc_1.NotificationType0 {\r\n    constructor(method) {\r\n        super(method);\r\n    }\r\n}\r\nexports.ProtocolNotificationType0 = ProtocolNotificationType0;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) TypeFox and others. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to result a `CallHierarchyItem` in a document at a given position.\r\n * Can be used as an input to a incoming or outgoing call hierarchy.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyPrepareRequest;\r\n(function (CallHierarchyPrepareRequest) {\r\n    CallHierarchyPrepareRequest.method = 'textDocument/prepareCallHierarchy';\r\n    CallHierarchyPrepareRequest.type = new messages_1.ProtocolRequestType(CallHierarchyPrepareRequest.method);\r\n})(CallHierarchyPrepareRequest = exports.CallHierarchyPrepareRequest || (exports.CallHierarchyPrepareRequest = {}));\r\n/**\r\n * A request to resolve the incoming calls for a given `CallHierarchyItem`.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyIncomingCallsRequest;\r\n(function (CallHierarchyIncomingCallsRequest) {\r\n    CallHierarchyIncomingCallsRequest.method = 'callHierarchy/incomingCalls';\r\n    CallHierarchyIncomingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyIncomingCallsRequest.method);\r\n})(CallHierarchyIncomingCallsRequest = exports.CallHierarchyIncomingCallsRequest || (exports.CallHierarchyIncomingCallsRequest = {}));\r\n/**\r\n * A request to resolve the outgoing calls for a given `CallHierarchyItem`.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar CallHierarchyOutgoingCallsRequest;\r\n(function (CallHierarchyOutgoingCallsRequest) {\r\n    CallHierarchyOutgoingCallsRequest.method = 'callHierarchy/outgoingCalls';\r\n    CallHierarchyOutgoingCallsRequest.type = new messages_1.ProtocolRequestType(CallHierarchyOutgoingCallsRequest.method);\r\n})(CallHierarchyOutgoingCallsRequest = exports.CallHierarchyOutgoingCallsRequest || (exports.CallHierarchyOutgoingCallsRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to list all color symbols found in a given text document. The request's\r\n * parameter is of type [DocumentColorParams](#DocumentColorParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentColorRequest;\r\n(function (DocumentColorRequest) {\r\n    DocumentColorRequest.method = 'textDocument/documentColor';\r\n    DocumentColorRequest.type = new messages_1.ProtocolRequestType(DocumentColorRequest.method);\r\n    /** @deprecated Use DocumentColorRequest.type */\r\n    DocumentColorRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentColorRequest = exports.DocumentColorRequest || (exports.DocumentColorRequest = {}));\r\n/**\r\n * A request to list all presentation for a color. The request's\r\n * parameter is of type [ColorPresentationParams](#ColorPresentationParams) the\r\n * response is of type [ColorInformation[]](#ColorInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar ColorPresentationRequest;\r\n(function (ColorPresentationRequest) {\r\n    ColorPresentationRequest.type = new messages_1.ProtocolRequestType('textDocument/colorPresentation');\r\n})(ColorPresentationRequest = exports.ColorPresentationRequest || (exports.ColorPresentationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * The 'workspace/configuration' request is sent from the server to the client to fetch a certain\r\n * configuration setting.\r\n *\r\n * This pull model replaces the old push model were the client signaled configuration change via an\r\n * event. If the server still needs to react to configuration changes (since the server caches the\r\n * result of `workspace/configuration` requests) the server should register for an empty configuration\r\n * change event and empty the cache if such an event is received.\r\n */\r\nvar ConfigurationRequest;\r\n(function (ConfigurationRequest) {\r\n    ConfigurationRequest.type = new messages_1.ProtocolRequestType('workspace/configuration');\r\n})(ConfigurationRequest = exports.ConfigurationRequest || (exports.ConfigurationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Declaration](#Declaration)\r\n * or a typed array of [DeclarationLink](#DeclarationLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DeclarationRequest;\r\n(function (DeclarationRequest) {\r\n    DeclarationRequest.method = 'textDocument/declaration';\r\n    DeclarationRequest.type = new messages_1.ProtocolRequestType(DeclarationRequest.method);\r\n    /** @deprecated Use DeclarationRequest.type */\r\n    DeclarationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DeclarationRequest = exports.DeclarationRequest || (exports.DeclarationRequest = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * Enum of known range kinds\r\n */\r\nvar FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind = exports.FoldingRangeKind || (exports.FoldingRangeKind = {}));\r\n/**\r\n * A request to provide folding ranges in a document. The request's\r\n * parameter is of type [FoldingRangeParams](#FoldingRangeParams), the\r\n * response is of type [FoldingRangeList](#FoldingRangeList) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar FoldingRangeRequest;\r\n(function (FoldingRangeRequest) {\r\n    FoldingRangeRequest.method = 'textDocument/foldingRange';\r\n    FoldingRangeRequest.type = new messages_1.ProtocolRequestType(FoldingRangeRequest.method);\r\n    /** @deprecated Use FoldingRangeRequest.type */\r\n    FoldingRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(FoldingRangeRequest = exports.FoldingRangeRequest || (exports.FoldingRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the implementation locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar ImplementationRequest;\r\n(function (ImplementationRequest) {\r\n    ImplementationRequest.method = 'textDocument/implementation';\r\n    ImplementationRequest.type = new messages_1.ProtocolRequestType(ImplementationRequest.method);\r\n    /** @deprecated Use ImplementationRequest.type */\r\n    ImplementationRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(ImplementationRequest = exports.ImplementationRequest || (exports.ImplementationRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Is = require(\"./utils/is\");\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\nconst protocol_implementation_1 = require(\"./protocol.implementation\");\r\nexports.ImplementationRequest = protocol_implementation_1.ImplementationRequest;\r\nconst protocol_typeDefinition_1 = require(\"./protocol.typeDefinition\");\r\nexports.TypeDefinitionRequest = protocol_typeDefinition_1.TypeDefinitionRequest;\r\nconst protocol_workspaceFolders_1 = require(\"./protocol.workspaceFolders\");\r\nexports.WorkspaceFoldersRequest = protocol_workspaceFolders_1.WorkspaceFoldersRequest;\r\nexports.DidChangeWorkspaceFoldersNotification = protocol_workspaceFolders_1.DidChangeWorkspaceFoldersNotification;\r\nconst protocol_configuration_1 = require(\"./protocol.configuration\");\r\nexports.ConfigurationRequest = protocol_configuration_1.ConfigurationRequest;\r\nconst protocol_colorProvider_1 = require(\"./protocol.colorProvider\");\r\nexports.DocumentColorRequest = protocol_colorProvider_1.DocumentColorRequest;\r\nexports.ColorPresentationRequest = protocol_colorProvider_1.ColorPresentationRequest;\r\nconst protocol_foldingRange_1 = require(\"./protocol.foldingRange\");\r\nexports.FoldingRangeRequest = protocol_foldingRange_1.FoldingRangeRequest;\r\nconst protocol_declaration_1 = require(\"./protocol.declaration\");\r\nexports.DeclarationRequest = protocol_declaration_1.DeclarationRequest;\r\nconst protocol_selectionRange_1 = require(\"./protocol.selectionRange\");\r\nexports.SelectionRangeRequest = protocol_selectionRange_1.SelectionRangeRequest;\r\nconst protocol_progress_1 = require(\"./protocol.progress\");\r\nexports.WorkDoneProgress = protocol_progress_1.WorkDoneProgress;\r\nexports.WorkDoneProgressCreateRequest = protocol_progress_1.WorkDoneProgressCreateRequest;\r\nexports.WorkDoneProgressCancelNotification = protocol_progress_1.WorkDoneProgressCancelNotification;\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * The DocumentFilter namespace provides helper functions to work with\r\n * [DocumentFilter](#DocumentFilter) literals.\r\n */\r\nvar DocumentFilter;\r\n(function (DocumentFilter) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return Is.string(candidate.language) || Is.string(candidate.scheme) || Is.string(candidate.pattern);\r\n    }\r\n    DocumentFilter.is = is;\r\n})(DocumentFilter = exports.DocumentFilter || (exports.DocumentFilter = {}));\r\n/**\r\n * The DocumentSelector namespace provides helper functions to work with\r\n * [DocumentSelector](#DocumentSelector)s.\r\n */\r\nvar DocumentSelector;\r\n(function (DocumentSelector) {\r\n    function is(value) {\r\n        if (!Array.isArray(value)) {\r\n            return false;\r\n        }\r\n        for (let elem of value) {\r\n            if (!Is.string(elem) && !DocumentFilter.is(elem)) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    DocumentSelector.is = is;\r\n})(DocumentSelector = exports.DocumentSelector || (exports.DocumentSelector = {}));\r\n/**\r\n * The `client/registerCapability` request is sent from the server to the client to register a new capability\r\n * handler on the client side.\r\n */\r\nvar RegistrationRequest;\r\n(function (RegistrationRequest) {\r\n    RegistrationRequest.type = new messages_1.ProtocolRequestType('client/registerCapability');\r\n})(RegistrationRequest = exports.RegistrationRequest || (exports.RegistrationRequest = {}));\r\n/**\r\n * The `client/unregisterCapability` request is sent from the server to the client to unregister a previously registered capability\r\n * handler on the client side.\r\n */\r\nvar UnregistrationRequest;\r\n(function (UnregistrationRequest) {\r\n    UnregistrationRequest.type = new messages_1.ProtocolRequestType('client/unregisterCapability');\r\n})(UnregistrationRequest = exports.UnregistrationRequest || (exports.UnregistrationRequest = {}));\r\nvar ResourceOperationKind;\r\n(function (ResourceOperationKind) {\r\n    /**\r\n     * Supports creating new files and folders.\r\n     */\r\n    ResourceOperationKind.Create = 'create';\r\n    /**\r\n     * Supports renaming existing files and folders.\r\n     */\r\n    ResourceOperationKind.Rename = 'rename';\r\n    /**\r\n     * Supports deleting existing files and folders.\r\n     */\r\n    ResourceOperationKind.Delete = 'delete';\r\n})(ResourceOperationKind = exports.ResourceOperationKind || (exports.ResourceOperationKind = {}));\r\nvar FailureHandlingKind;\r\n(function (FailureHandlingKind) {\r\n    /**\r\n     * Applying the workspace change is simply aborted if one of the changes provided\r\n     * fails. All operations executed before the failing operation stay executed.\r\n     */\r\n    FailureHandlingKind.Abort = 'abort';\r\n    /**\r\n     * All operations are executed transactional. That means they either all\r\n     * succeed or no changes at all are applied to the workspace.\r\n     */\r\n    FailureHandlingKind.Transactional = 'transactional';\r\n    /**\r\n     * If the workspace edit contains only textual file changes they are executed transactional.\r\n     * If resource changes (create, rename or delete file) are part of the change the failure\r\n     * handling startegy is abort.\r\n     */\r\n    FailureHandlingKind.TextOnlyTransactional = 'textOnlyTransactional';\r\n    /**\r\n     * The client tries to undo the operations already executed. But there is no\r\n     * guarantee that this is succeeding.\r\n     */\r\n    FailureHandlingKind.Undo = 'undo';\r\n})(FailureHandlingKind = exports.FailureHandlingKind || (exports.FailureHandlingKind = {}));\r\n/**\r\n * The StaticRegistrationOptions namespace provides helper functions to work with\r\n * [StaticRegistrationOptions](#StaticRegistrationOptions) literals.\r\n */\r\nvar StaticRegistrationOptions;\r\n(function (StaticRegistrationOptions) {\r\n    function hasId(value) {\r\n        const candidate = value;\r\n        return candidate && Is.string(candidate.id) && candidate.id.length > 0;\r\n    }\r\n    StaticRegistrationOptions.hasId = hasId;\r\n})(StaticRegistrationOptions = exports.StaticRegistrationOptions || (exports.StaticRegistrationOptions = {}));\r\n/**\r\n * The TextDocumentRegistrationOptions namespace provides helper functions to work with\r\n * [TextDocumentRegistrationOptions](#TextDocumentRegistrationOptions) literals.\r\n */\r\nvar TextDocumentRegistrationOptions;\r\n(function (TextDocumentRegistrationOptions) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return candidate && (candidate.documentSelector === null || DocumentSelector.is(candidate.documentSelector));\r\n    }\r\n    TextDocumentRegistrationOptions.is = is;\r\n})(TextDocumentRegistrationOptions = exports.TextDocumentRegistrationOptions || (exports.TextDocumentRegistrationOptions = {}));\r\n/**\r\n * The WorkDoneProgressOptions namespace provides helper functions to work with\r\n * [WorkDoneProgressOptions](#WorkDoneProgressOptions) literals.\r\n */\r\nvar WorkDoneProgressOptions;\r\n(function (WorkDoneProgressOptions) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return Is.objectLiteral(candidate) && (candidate.workDoneProgress === undefined || Is.boolean(candidate.workDoneProgress));\r\n    }\r\n    WorkDoneProgressOptions.is = is;\r\n    function hasWorkDoneProgress(value) {\r\n        const candidate = value;\r\n        return candidate && Is.boolean(candidate.workDoneProgress);\r\n    }\r\n    WorkDoneProgressOptions.hasWorkDoneProgress = hasWorkDoneProgress;\r\n})(WorkDoneProgressOptions = exports.WorkDoneProgressOptions || (exports.WorkDoneProgressOptions = {}));\r\n/**\r\n * The initialize request is sent from the client to the server.\r\n * It is sent once as the request after starting up the server.\r\n * The requests parameter is of type [InitializeParams](#InitializeParams)\r\n * the response if of type [InitializeResult](#InitializeResult) of a Thenable that\r\n * resolves to such.\r\n */\r\nvar InitializeRequest;\r\n(function (InitializeRequest) {\r\n    InitializeRequest.type = new messages_1.ProtocolRequestType('initialize');\r\n})(InitializeRequest = exports.InitializeRequest || (exports.InitializeRequest = {}));\r\n/**\r\n * Known error codes for an `InitializeError`;\r\n */\r\nvar InitializeError;\r\n(function (InitializeError) {\r\n    /**\r\n     * If the protocol version provided by the client can't be handled by the server.\r\n     * @deprecated This initialize error got replaced by client capabilities. There is\r\n     * no version handshake in version 3.0x\r\n     */\r\n    InitializeError.unknownProtocolVersion = 1;\r\n})(InitializeError = exports.InitializeError || (exports.InitializeError = {}));\r\n/**\r\n * The intialized notification is sent from the client to the\r\n * server after the client is fully initialized and the server\r\n * is allowed to send requests from the server to the client.\r\n */\r\nvar InitializedNotification;\r\n(function (InitializedNotification) {\r\n    InitializedNotification.type = new messages_1.ProtocolNotificationType('initialized');\r\n})(InitializedNotification = exports.InitializedNotification || (exports.InitializedNotification = {}));\r\n//---- Shutdown Method ----\r\n/**\r\n * A shutdown request is sent from the client to the server.\r\n * It is sent once when the client decides to shutdown the\r\n * server. The only notification that is sent after a shutdown request\r\n * is the exit event.\r\n */\r\nvar ShutdownRequest;\r\n(function (ShutdownRequest) {\r\n    ShutdownRequest.type = new messages_1.ProtocolRequestType0('shutdown');\r\n})(ShutdownRequest = exports.ShutdownRequest || (exports.ShutdownRequest = {}));\r\n//---- Exit Notification ----\r\n/**\r\n * The exit event is sent from the client to the server to\r\n * ask the server to exit its process.\r\n */\r\nvar ExitNotification;\r\n(function (ExitNotification) {\r\n    ExitNotification.type = new messages_1.ProtocolNotificationType0('exit');\r\n})(ExitNotification = exports.ExitNotification || (exports.ExitNotification = {}));\r\n/**\r\n * The configuration change notification is sent from the client to the server\r\n * when the client's configuration has changed. The notification contains\r\n * the changed configuration as defined by the language client.\r\n */\r\nvar DidChangeConfigurationNotification;\r\n(function (DidChangeConfigurationNotification) {\r\n    DidChangeConfigurationNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeConfiguration');\r\n})(DidChangeConfigurationNotification = exports.DidChangeConfigurationNotification || (exports.DidChangeConfigurationNotification = {}));\r\n//---- Message show and log notifications ----\r\n/**\r\n * The message type\r\n */\r\nvar MessageType;\r\n(function (MessageType) {\r\n    /**\r\n     * An error message.\r\n     */\r\n    MessageType.Error = 1;\r\n    /**\r\n     * A warning message.\r\n     */\r\n    MessageType.Warning = 2;\r\n    /**\r\n     * An information message.\r\n     */\r\n    MessageType.Info = 3;\r\n    /**\r\n     * A log message.\r\n     */\r\n    MessageType.Log = 4;\r\n})(MessageType = exports.MessageType || (exports.MessageType = {}));\r\n/**\r\n * The show message notification is sent from a server to a client to ask\r\n * the client to display a particular message in the user interface.\r\n */\r\nvar ShowMessageNotification;\r\n(function (ShowMessageNotification) {\r\n    ShowMessageNotification.type = new messages_1.ProtocolNotificationType('window/showMessage');\r\n})(ShowMessageNotification = exports.ShowMessageNotification || (exports.ShowMessageNotification = {}));\r\n/**\r\n * The show message request is sent from the server to the client to show a message\r\n * and a set of options actions to the user.\r\n */\r\nvar ShowMessageRequest;\r\n(function (ShowMessageRequest) {\r\n    ShowMessageRequest.type = new messages_1.ProtocolRequestType('window/showMessageRequest');\r\n})(ShowMessageRequest = exports.ShowMessageRequest || (exports.ShowMessageRequest = {}));\r\n/**\r\n * The log message notification is sent from the server to the client to ask\r\n * the client to log a particular message.\r\n */\r\nvar LogMessageNotification;\r\n(function (LogMessageNotification) {\r\n    LogMessageNotification.type = new messages_1.ProtocolNotificationType('window/logMessage');\r\n})(LogMessageNotification = exports.LogMessageNotification || (exports.LogMessageNotification = {}));\r\n//---- Telemetry notification\r\n/**\r\n * The telemetry event notification is sent from the server to the client to ask\r\n * the client to log telemetry data.\r\n */\r\nvar TelemetryEventNotification;\r\n(function (TelemetryEventNotification) {\r\n    TelemetryEventNotification.type = new messages_1.ProtocolNotificationType('telemetry/event');\r\n})(TelemetryEventNotification = exports.TelemetryEventNotification || (exports.TelemetryEventNotification = {}));\r\n/**\r\n * Defines how the host (editor) should sync\r\n * document changes to the language server.\r\n */\r\nvar TextDocumentSyncKind;\r\n(function (TextDocumentSyncKind) {\r\n    /**\r\n     * Documents should not be synced at all.\r\n     */\r\n    TextDocumentSyncKind.None = 0;\r\n    /**\r\n     * Documents are synced by always sending the full content\r\n     * of the document.\r\n     */\r\n    TextDocumentSyncKind.Full = 1;\r\n    /**\r\n     * Documents are synced by sending the full content on open.\r\n     * After that only incremental updates to the document are\r\n     * send.\r\n     */\r\n    TextDocumentSyncKind.Incremental = 2;\r\n})(TextDocumentSyncKind = exports.TextDocumentSyncKind || (exports.TextDocumentSyncKind = {}));\r\n/**\r\n * The document open notification is sent from the client to the server to signal\r\n * newly opened text documents. The document's truth is now managed by the client\r\n * and the server must not try to read the document's truth using the document's\r\n * uri. Open in this sense means it is managed by the client. It doesn't necessarily\r\n * mean that its content is presented in an editor. An open notification must not\r\n * be sent more than once without a corresponding close notification send before.\r\n * This means open and close notification must be balanced and the max open count\r\n * is one.\r\n */\r\nvar DidOpenTextDocumentNotification;\r\n(function (DidOpenTextDocumentNotification) {\r\n    DidOpenTextDocumentNotification.method = 'textDocument/didOpen';\r\n    DidOpenTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidOpenTextDocumentNotification.method);\r\n})(DidOpenTextDocumentNotification = exports.DidOpenTextDocumentNotification || (exports.DidOpenTextDocumentNotification = {}));\r\n/**\r\n * The document change notification is sent from the client to the server to signal\r\n * changes to a text document.\r\n */\r\nvar DidChangeTextDocumentNotification;\r\n(function (DidChangeTextDocumentNotification) {\r\n    DidChangeTextDocumentNotification.method = 'textDocument/didChange';\r\n    DidChangeTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidChangeTextDocumentNotification.method);\r\n})(DidChangeTextDocumentNotification = exports.DidChangeTextDocumentNotification || (exports.DidChangeTextDocumentNotification = {}));\r\n/**\r\n * The document close notification is sent from the client to the server when\r\n * the document got closed in the client. The document's truth now exists where\r\n * the document's uri points to (e.g. if the document's uri is a file uri the\r\n * truth now exists on disk). As with the open notification the close notification\r\n * is about managing the document's content. Receiving a close notification\r\n * doesn't mean that the document was open in an editor before. A close\r\n * notification requires a previous open notification to be sent.\r\n */\r\nvar DidCloseTextDocumentNotification;\r\n(function (DidCloseTextDocumentNotification) {\r\n    DidCloseTextDocumentNotification.method = 'textDocument/didClose';\r\n    DidCloseTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidCloseTextDocumentNotification.method);\r\n})(DidCloseTextDocumentNotification = exports.DidCloseTextDocumentNotification || (exports.DidCloseTextDocumentNotification = {}));\r\n/**\r\n * The document save notification is sent from the client to the server when\r\n * the document got saved in the client.\r\n */\r\nvar DidSaveTextDocumentNotification;\r\n(function (DidSaveTextDocumentNotification) {\r\n    DidSaveTextDocumentNotification.method = 'textDocument/didSave';\r\n    DidSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(DidSaveTextDocumentNotification.method);\r\n})(DidSaveTextDocumentNotification = exports.DidSaveTextDocumentNotification || (exports.DidSaveTextDocumentNotification = {}));\r\n/**\r\n * Represents reasons why a text document is saved.\r\n */\r\nvar TextDocumentSaveReason;\r\n(function (TextDocumentSaveReason) {\r\n    /**\r\n     * Manually triggered, e.g. by the user pressing save, by starting debugging,\r\n     * or by an API call.\r\n     */\r\n    TextDocumentSaveReason.Manual = 1;\r\n    /**\r\n     * Automatic after a delay.\r\n     */\r\n    TextDocumentSaveReason.AfterDelay = 2;\r\n    /**\r\n     * When the editor lost focus.\r\n     */\r\n    TextDocumentSaveReason.FocusOut = 3;\r\n})(TextDocumentSaveReason = exports.TextDocumentSaveReason || (exports.TextDocumentSaveReason = {}));\r\n/**\r\n * A document will save notification is sent from the client to the server before\r\n * the document is actually saved.\r\n */\r\nvar WillSaveTextDocumentNotification;\r\n(function (WillSaveTextDocumentNotification) {\r\n    WillSaveTextDocumentNotification.method = 'textDocument/willSave';\r\n    WillSaveTextDocumentNotification.type = new messages_1.ProtocolNotificationType(WillSaveTextDocumentNotification.method);\r\n})(WillSaveTextDocumentNotification = exports.WillSaveTextDocumentNotification || (exports.WillSaveTextDocumentNotification = {}));\r\n/**\r\n * A document will save request is sent from the client to the server before\r\n * the document is actually saved. The request can return an array of TextEdits\r\n * which will be applied to the text document before it is saved. Please note that\r\n * clients might drop results if computing the text edits took too long or if a\r\n * server constantly fails on this request. This is done to keep the save fast and\r\n * reliable.\r\n */\r\nvar WillSaveTextDocumentWaitUntilRequest;\r\n(function (WillSaveTextDocumentWaitUntilRequest) {\r\n    WillSaveTextDocumentWaitUntilRequest.method = 'textDocument/willSaveWaitUntil';\r\n    WillSaveTextDocumentWaitUntilRequest.type = new messages_1.ProtocolRequestType(WillSaveTextDocumentWaitUntilRequest.method);\r\n})(WillSaveTextDocumentWaitUntilRequest = exports.WillSaveTextDocumentWaitUntilRequest || (exports.WillSaveTextDocumentWaitUntilRequest = {}));\r\n/**\r\n * The watched files notification is sent from the client to the server when\r\n * the client detects changes to file watched by the language client.\r\n */\r\nvar DidChangeWatchedFilesNotification;\r\n(function (DidChangeWatchedFilesNotification) {\r\n    DidChangeWatchedFilesNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWatchedFiles');\r\n})(DidChangeWatchedFilesNotification = exports.DidChangeWatchedFilesNotification || (exports.DidChangeWatchedFilesNotification = {}));\r\n/**\r\n * The file event type\r\n */\r\nvar FileChangeType;\r\n(function (FileChangeType) {\r\n    /**\r\n     * The file got created.\r\n     */\r\n    FileChangeType.Created = 1;\r\n    /**\r\n     * The file got changed.\r\n     */\r\n    FileChangeType.Changed = 2;\r\n    /**\r\n     * The file got deleted.\r\n     */\r\n    FileChangeType.Deleted = 3;\r\n})(FileChangeType = exports.FileChangeType || (exports.FileChangeType = {}));\r\nvar WatchKind;\r\n(function (WatchKind) {\r\n    /**\r\n     * Interested in create events.\r\n     */\r\n    WatchKind.Create = 1;\r\n    /**\r\n     * Interested in change events\r\n     */\r\n    WatchKind.Change = 2;\r\n    /**\r\n     * Interested in delete events\r\n     */\r\n    WatchKind.Delete = 4;\r\n})(WatchKind = exports.WatchKind || (exports.WatchKind = {}));\r\n/**\r\n * Diagnostics notification are sent from the server to the client to signal\r\n * results of validation runs.\r\n */\r\nvar PublishDiagnosticsNotification;\r\n(function (PublishDiagnosticsNotification) {\r\n    PublishDiagnosticsNotification.type = new messages_1.ProtocolNotificationType('textDocument/publishDiagnostics');\r\n})(PublishDiagnosticsNotification = exports.PublishDiagnosticsNotification || (exports.PublishDiagnosticsNotification = {}));\r\n/**\r\n * How a completion was triggered\r\n */\r\nvar CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    /**\r\n     * Completion was triggered by typing an identifier (24x7 code\r\n     * complete), manual invocation (e.g Ctrl+Space) or via API.\r\n     */\r\n    CompletionTriggerKind.Invoked = 1;\r\n    /**\r\n     * Completion was triggered by a trigger character specified by\r\n     * the `triggerCharacters` properties of the `CompletionRegistrationOptions`.\r\n     */\r\n    CompletionTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Completion was re-triggered as current completion list is incomplete\r\n     */\r\n    CompletionTriggerKind.TriggerForIncompleteCompletions = 3;\r\n})(CompletionTriggerKind = exports.CompletionTriggerKind || (exports.CompletionTriggerKind = {}));\r\n/**\r\n * Request to request completion at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response\r\n * is of type [CompletionItem[]](#CompletionItem) or [CompletionList](#CompletionList)\r\n * or a Thenable that resolves to such.\r\n *\r\n * The request can delay the computation of the [`detail`](#CompletionItem.detail)\r\n * and [`documentation`](#CompletionItem.documentation) properties to the `completionItem/resolve`\r\n * request. However, properties that are needed for the initial sorting and filtering, like `sortText`,\r\n * `filterText`, `insertText`, and `textEdit`, must not be changed during resolve.\r\n */\r\nvar CompletionRequest;\r\n(function (CompletionRequest) {\r\n    CompletionRequest.method = 'textDocument/completion';\r\n    CompletionRequest.type = new messages_1.ProtocolRequestType(CompletionRequest.method);\r\n    /** @deprecated Use CompletionRequest.type */\r\n    CompletionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CompletionRequest = exports.CompletionRequest || (exports.CompletionRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given completion item.The request's\r\n * parameter is of type [CompletionItem](#CompletionItem) the response\r\n * is of type [CompletionItem](#CompletionItem) or a Thenable that resolves to such.\r\n */\r\nvar CompletionResolveRequest;\r\n(function (CompletionResolveRequest) {\r\n    CompletionResolveRequest.method = 'completionItem/resolve';\r\n    CompletionResolveRequest.type = new messages_1.ProtocolRequestType(CompletionResolveRequest.method);\r\n})(CompletionResolveRequest = exports.CompletionResolveRequest || (exports.CompletionResolveRequest = {}));\r\n/**\r\n * Request to request hover information at a given text document position. The request's\r\n * parameter is of type [TextDocumentPosition](#TextDocumentPosition) the response is of\r\n * type [Hover](#Hover) or a Thenable that resolves to such.\r\n */\r\nvar HoverRequest;\r\n(function (HoverRequest) {\r\n    HoverRequest.method = 'textDocument/hover';\r\n    HoverRequest.type = new messages_1.ProtocolRequestType(HoverRequest.method);\r\n})(HoverRequest = exports.HoverRequest || (exports.HoverRequest = {}));\r\n/**\r\n * How a signature help was triggered.\r\n *\r\n * @since 3.15.0\r\n */\r\nvar SignatureHelpTriggerKind;\r\n(function (SignatureHelpTriggerKind) {\r\n    /**\r\n     * Signature help was invoked manually by the user or by a command.\r\n     */\r\n    SignatureHelpTriggerKind.Invoked = 1;\r\n    /**\r\n     * Signature help was triggered by a trigger character.\r\n     */\r\n    SignatureHelpTriggerKind.TriggerCharacter = 2;\r\n    /**\r\n     * Signature help was triggered by the cursor moving or by the document content changing.\r\n     */\r\n    SignatureHelpTriggerKind.ContentChange = 3;\r\n})(SignatureHelpTriggerKind = exports.SignatureHelpTriggerKind || (exports.SignatureHelpTriggerKind = {}));\r\nvar SignatureHelpRequest;\r\n(function (SignatureHelpRequest) {\r\n    SignatureHelpRequest.method = 'textDocument/signatureHelp';\r\n    SignatureHelpRequest.type = new messages_1.ProtocolRequestType(SignatureHelpRequest.method);\r\n})(SignatureHelpRequest = exports.SignatureHelpRequest || (exports.SignatureHelpRequest = {}));\r\n/**\r\n * A request to resolve the definition location of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the response is of either type [Definition](#Definition)\r\n * or a typed array of [DefinitionLink](#DefinitionLink) or a Thenable that resolves\r\n * to such.\r\n */\r\nvar DefinitionRequest;\r\n(function (DefinitionRequest) {\r\n    DefinitionRequest.method = 'textDocument/definition';\r\n    DefinitionRequest.type = new messages_1.ProtocolRequestType(DefinitionRequest.method);\r\n    /** @deprecated Use DefinitionRequest.type */\r\n    DefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DefinitionRequest = exports.DefinitionRequest || (exports.DefinitionRequest = {}));\r\n/**\r\n * A request to resolve project-wide references for the symbol denoted\r\n * by the given text document position. The request's parameter is of\r\n * type [ReferenceParams](#ReferenceParams) the response is of type\r\n * [Location[]](#Location) or a Thenable that resolves to such.\r\n */\r\nvar ReferencesRequest;\r\n(function (ReferencesRequest) {\r\n    ReferencesRequest.method = 'textDocument/references';\r\n    ReferencesRequest.type = new messages_1.ProtocolRequestType(ReferencesRequest.method);\r\n    /** @deprecated Use ReferencesRequest.type */\r\n    ReferencesRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(ReferencesRequest = exports.ReferencesRequest || (exports.ReferencesRequest = {}));\r\n/**\r\n * Request to resolve a [DocumentHighlight](#DocumentHighlight) for a given\r\n * text document position. The request's parameter is of type [TextDocumentPosition]\r\n * (#TextDocumentPosition) the request response is of type [DocumentHighlight[]]\r\n * (#DocumentHighlight) or a Thenable that resolves to such.\r\n */\r\nvar DocumentHighlightRequest;\r\n(function (DocumentHighlightRequest) {\r\n    DocumentHighlightRequest.method = 'textDocument/documentHighlight';\r\n    DocumentHighlightRequest.type = new messages_1.ProtocolRequestType(DocumentHighlightRequest.method);\r\n    /** @deprecated Use DocumentHighlightRequest.type */\r\n    DocumentHighlightRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentHighlightRequest = exports.DocumentHighlightRequest || (exports.DocumentHighlightRequest = {}));\r\n/**\r\n * A request to list all symbols found in a given text document. The request's\r\n * parameter is of type [TextDocumentIdentifier](#TextDocumentIdentifier) the\r\n * response is of type [SymbolInformation[]](#SymbolInformation) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar DocumentSymbolRequest;\r\n(function (DocumentSymbolRequest) {\r\n    DocumentSymbolRequest.method = 'textDocument/documentSymbol';\r\n    DocumentSymbolRequest.type = new messages_1.ProtocolRequestType(DocumentSymbolRequest.method);\r\n    /** @deprecated Use DocumentSymbolRequest.type */\r\n    DocumentSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentSymbolRequest = exports.DocumentSymbolRequest || (exports.DocumentSymbolRequest = {}));\r\n/**\r\n * A request to provide commands for the given text document and range.\r\n */\r\nvar CodeActionRequest;\r\n(function (CodeActionRequest) {\r\n    CodeActionRequest.method = 'textDocument/codeAction';\r\n    CodeActionRequest.type = new messages_1.ProtocolRequestType(CodeActionRequest.method);\r\n    /** @deprecated Use CodeActionRequest.type */\r\n    CodeActionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CodeActionRequest = exports.CodeActionRequest || (exports.CodeActionRequest = {}));\r\n/**\r\n * A request to list project-wide symbols matching the query string given\r\n * by the [WorkspaceSymbolParams](#WorkspaceSymbolParams). The response is\r\n * of type [SymbolInformation[]](#SymbolInformation) or a Thenable that\r\n * resolves to such.\r\n */\r\nvar WorkspaceSymbolRequest;\r\n(function (WorkspaceSymbolRequest) {\r\n    WorkspaceSymbolRequest.method = 'workspace/symbol';\r\n    WorkspaceSymbolRequest.type = new messages_1.ProtocolRequestType(WorkspaceSymbolRequest.method);\r\n    /** @deprecated Use WorkspaceSymbolRequest.type */\r\n    WorkspaceSymbolRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(WorkspaceSymbolRequest = exports.WorkspaceSymbolRequest || (exports.WorkspaceSymbolRequest = {}));\r\n/**\r\n * A request to provide code lens for the given text document.\r\n */\r\nvar CodeLensRequest;\r\n(function (CodeLensRequest) {\r\n    CodeLensRequest.type = new messages_1.ProtocolRequestType('textDocument/codeLens');\r\n    /** @deprecated Use CodeLensRequest.type */\r\n    CodeLensRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(CodeLensRequest = exports.CodeLensRequest || (exports.CodeLensRequest = {}));\r\n/**\r\n * A request to resolve a command for a given code lens.\r\n */\r\nvar CodeLensResolveRequest;\r\n(function (CodeLensResolveRequest) {\r\n    CodeLensResolveRequest.type = new messages_1.ProtocolRequestType('codeLens/resolve');\r\n})(CodeLensResolveRequest = exports.CodeLensResolveRequest || (exports.CodeLensResolveRequest = {}));\r\n/**\r\n * A request to provide document links\r\n */\r\nvar DocumentLinkRequest;\r\n(function (DocumentLinkRequest) {\r\n    DocumentLinkRequest.method = 'textDocument/documentLink';\r\n    DocumentLinkRequest.type = new messages_1.ProtocolRequestType(DocumentLinkRequest.method);\r\n    /** @deprecated Use DocumentLinkRequest.type */\r\n    DocumentLinkRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(DocumentLinkRequest = exports.DocumentLinkRequest || (exports.DocumentLinkRequest = {}));\r\n/**\r\n * Request to resolve additional information for a given document link. The request's\r\n * parameter is of type [DocumentLink](#DocumentLink) the response\r\n * is of type [DocumentLink](#DocumentLink) or a Thenable that resolves to such.\r\n */\r\nvar DocumentLinkResolveRequest;\r\n(function (DocumentLinkResolveRequest) {\r\n    DocumentLinkResolveRequest.type = new messages_1.ProtocolRequestType('documentLink/resolve');\r\n})(DocumentLinkResolveRequest = exports.DocumentLinkResolveRequest || (exports.DocumentLinkResolveRequest = {}));\r\n/**\r\n * A request to to format a whole document.\r\n */\r\nvar DocumentFormattingRequest;\r\n(function (DocumentFormattingRequest) {\r\n    DocumentFormattingRequest.method = 'textDocument/formatting';\r\n    DocumentFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentFormattingRequest.method);\r\n})(DocumentFormattingRequest = exports.DocumentFormattingRequest || (exports.DocumentFormattingRequest = {}));\r\n/**\r\n * A request to to format a range in a document.\r\n */\r\nvar DocumentRangeFormattingRequest;\r\n(function (DocumentRangeFormattingRequest) {\r\n    DocumentRangeFormattingRequest.method = 'textDocument/rangeFormatting';\r\n    DocumentRangeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentRangeFormattingRequest.method);\r\n})(DocumentRangeFormattingRequest = exports.DocumentRangeFormattingRequest || (exports.DocumentRangeFormattingRequest = {}));\r\n/**\r\n * A request to format a document on type.\r\n */\r\nvar DocumentOnTypeFormattingRequest;\r\n(function (DocumentOnTypeFormattingRequest) {\r\n    DocumentOnTypeFormattingRequest.method = 'textDocument/onTypeFormatting';\r\n    DocumentOnTypeFormattingRequest.type = new messages_1.ProtocolRequestType(DocumentOnTypeFormattingRequest.method);\r\n})(DocumentOnTypeFormattingRequest = exports.DocumentOnTypeFormattingRequest || (exports.DocumentOnTypeFormattingRequest = {}));\r\n/**\r\n * A request to rename a symbol.\r\n */\r\nvar RenameRequest;\r\n(function (RenameRequest) {\r\n    RenameRequest.method = 'textDocument/rename';\r\n    RenameRequest.type = new messages_1.ProtocolRequestType(RenameRequest.method);\r\n})(RenameRequest = exports.RenameRequest || (exports.RenameRequest = {}));\r\n/**\r\n * A request to test and perform the setup necessary for a rename.\r\n */\r\nvar PrepareRenameRequest;\r\n(function (PrepareRenameRequest) {\r\n    PrepareRenameRequest.method = 'textDocument/prepareRename';\r\n    PrepareRenameRequest.type = new messages_1.ProtocolRequestType(PrepareRenameRequest.method);\r\n})(PrepareRenameRequest = exports.PrepareRenameRequest || (exports.PrepareRenameRequest = {}));\r\n/**\r\n * A request send from the client to the server to execute a command. The request might return\r\n * a workspace edit which the client will apply to the workspace.\r\n */\r\nvar ExecuteCommandRequest;\r\n(function (ExecuteCommandRequest) {\r\n    ExecuteCommandRequest.type = new messages_1.ProtocolRequestType('workspace/executeCommand');\r\n})(ExecuteCommandRequest = exports.ExecuteCommandRequest || (exports.ExecuteCommandRequest = {}));\r\n/**\r\n * A request sent from the server to the client to modified certain resources.\r\n */\r\nvar ApplyWorkspaceEditRequest;\r\n(function (ApplyWorkspaceEditRequest) {\r\n    ApplyWorkspaceEditRequest.type = new messages_1.ProtocolRequestType('workspace/applyEdit');\r\n})(ApplyWorkspaceEditRequest = exports.ApplyWorkspaceEditRequest || (exports.ApplyWorkspaceEditRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\nvar WorkDoneProgress;\r\n(function (WorkDoneProgress) {\r\n    WorkDoneProgress.type = new vscode_jsonrpc_1.ProgressType();\r\n})(WorkDoneProgress = exports.WorkDoneProgress || (exports.WorkDoneProgress = {}));\r\n/**\r\n * The `window/workDoneProgress/create` request is sent from the server to the client to initiate progress\r\n * reporting from the server.\r\n */\r\nvar WorkDoneProgressCreateRequest;\r\n(function (WorkDoneProgressCreateRequest) {\r\n    WorkDoneProgressCreateRequest.type = new messages_1.ProtocolRequestType('window/workDoneProgress/create');\r\n})(WorkDoneProgressCreateRequest = exports.WorkDoneProgressCreateRequest || (exports.WorkDoneProgressCreateRequest = {}));\r\n/**\r\n * The `window/workDoneProgress/cancel` notification is sent from  the client to the server to cancel a progress\r\n * initiated on the server side.\r\n */\r\nvar WorkDoneProgressCancelNotification;\r\n(function (WorkDoneProgressCancelNotification) {\r\n    WorkDoneProgressCancelNotification.type = new messages_1.ProtocolNotificationType('window/workDoneProgress/cancel');\r\n})(WorkDoneProgressCancelNotification = exports.WorkDoneProgressCancelNotification || (exports.WorkDoneProgressCancelNotification = {}));\r\n","\"use strict\";\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A request to provide selection ranges in a document. The request's\r\n * parameter is of type [SelectionRangeParams](#SelectionRangeParams), the\r\n * response is of type [SelectionRange[]](#SelectionRange[]) or a Thenable\r\n * that resolves to such.\r\n */\r\nvar SelectionRangeRequest;\r\n(function (SelectionRangeRequest) {\r\n    SelectionRangeRequest.method = 'textDocument/selectionRange';\r\n    SelectionRangeRequest.type = new messages_1.ProtocolRequestType(SelectionRangeRequest.method);\r\n    /** @deprecated  Use SelectionRangeRequest.type */\r\n    SelectionRangeRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(SelectionRangeRequest = exports.SelectionRangeRequest || (exports.SelectionRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * A set of predefined token types. This set is not fixed\r\n * an clients can specify additional token types via the\r\n * corresponding client capabilities.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokenTypes;\r\n(function (SemanticTokenTypes) {\r\n    SemanticTokenTypes[\"comment\"] = \"comment\";\r\n    SemanticTokenTypes[\"keyword\"] = \"keyword\";\r\n    SemanticTokenTypes[\"string\"] = \"string\";\r\n    SemanticTokenTypes[\"number\"] = \"number\";\r\n    SemanticTokenTypes[\"regexp\"] = \"regexp\";\r\n    SemanticTokenTypes[\"operator\"] = \"operator\";\r\n    SemanticTokenTypes[\"namespace\"] = \"namespace\";\r\n    SemanticTokenTypes[\"type\"] = \"type\";\r\n    SemanticTokenTypes[\"struct\"] = \"struct\";\r\n    SemanticTokenTypes[\"class\"] = \"class\";\r\n    SemanticTokenTypes[\"interface\"] = \"interface\";\r\n    SemanticTokenTypes[\"enum\"] = \"enum\";\r\n    SemanticTokenTypes[\"typeParameter\"] = \"typeParameter\";\r\n    SemanticTokenTypes[\"function\"] = \"function\";\r\n    SemanticTokenTypes[\"member\"] = \"member\";\r\n    SemanticTokenTypes[\"property\"] = \"property\";\r\n    SemanticTokenTypes[\"macro\"] = \"macro\";\r\n    SemanticTokenTypes[\"variable\"] = \"variable\";\r\n    SemanticTokenTypes[\"parameter\"] = \"parameter\";\r\n    SemanticTokenTypes[\"label\"] = \"label\";\r\n})(SemanticTokenTypes = exports.SemanticTokenTypes || (exports.SemanticTokenTypes = {}));\r\n/**\r\n * A set of predefined token modifiers. This set is not fixed\r\n * an clients can specify additional token types via the\r\n * corresponding client capabilities.\r\n *\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokenModifiers;\r\n(function (SemanticTokenModifiers) {\r\n    SemanticTokenModifiers[\"documentation\"] = \"documentation\";\r\n    SemanticTokenModifiers[\"declaration\"] = \"declaration\";\r\n    SemanticTokenModifiers[\"definition\"] = \"definition\";\r\n    SemanticTokenModifiers[\"reference\"] = \"reference\";\r\n    SemanticTokenModifiers[\"static\"] = \"static\";\r\n    SemanticTokenModifiers[\"abstract\"] = \"abstract\";\r\n    SemanticTokenModifiers[\"deprecated\"] = \"deprecated\";\r\n    SemanticTokenModifiers[\"async\"] = \"async\";\r\n    SemanticTokenModifiers[\"volatile\"] = \"volatile\";\r\n    SemanticTokenModifiers[\"readonly\"] = \"readonly\";\r\n})(SemanticTokenModifiers = exports.SemanticTokenModifiers || (exports.SemanticTokenModifiers = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokens;\r\n(function (SemanticTokens) {\r\n    function is(value) {\r\n        const candidate = value;\r\n        return candidate !== undefined && (candidate.resultId === undefined || typeof candidate.resultId === 'string') &&\r\n            Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === 'number');\r\n    }\r\n    SemanticTokens.is = is;\r\n})(SemanticTokens = exports.SemanticTokens || (exports.SemanticTokens = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensRequest;\r\n(function (SemanticTokensRequest) {\r\n    SemanticTokensRequest.method = 'textDocument/semanticTokens';\r\n    SemanticTokensRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRequest.method);\r\n})(SemanticTokensRequest = exports.SemanticTokensRequest || (exports.SemanticTokensRequest = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensEditsRequest;\r\n(function (SemanticTokensEditsRequest) {\r\n    SemanticTokensEditsRequest.method = 'textDocument/semanticTokens/edits';\r\n    SemanticTokensEditsRequest.type = new messages_1.ProtocolRequestType(SemanticTokensEditsRequest.method);\r\n})(SemanticTokensEditsRequest = exports.SemanticTokensEditsRequest || (exports.SemanticTokensEditsRequest = {}));\r\n/**\r\n * @since 3.16.0 - Proposed state\r\n */\r\nvar SemanticTokensRangeRequest;\r\n(function (SemanticTokensRangeRequest) {\r\n    SemanticTokensRangeRequest.method = 'textDocument/semanticTokens/range';\r\n    SemanticTokensRangeRequest.type = new messages_1.ProtocolRequestType(SemanticTokensRangeRequest.method);\r\n})(SemanticTokensRangeRequest = exports.SemanticTokensRangeRequest || (exports.SemanticTokensRangeRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_jsonrpc_1 = require(\"vscode-jsonrpc\");\r\nconst messages_1 = require(\"./messages\");\r\n// @ts-ignore: to avoid inlining LocatioLink as dynamic import\r\nlet __noDynamicImport;\r\n/**\r\n * A request to resolve the type definition locations of a symbol at a given text\r\n * document position. The request's parameter is of type [TextDocumentPositioParams]\r\n * (#TextDocumentPositionParams) the response is of type [Definition](#Definition) or a\r\n * Thenable that resolves to such.\r\n */\r\nvar TypeDefinitionRequest;\r\n(function (TypeDefinitionRequest) {\r\n    TypeDefinitionRequest.method = 'textDocument/typeDefinition';\r\n    TypeDefinitionRequest.type = new messages_1.ProtocolRequestType(TypeDefinitionRequest.method);\r\n    /** @deprecated Use TypeDefinitionRequest.type */\r\n    TypeDefinitionRequest.resultType = new vscode_jsonrpc_1.ProgressType();\r\n})(TypeDefinitionRequest = exports.TypeDefinitionRequest || (exports.TypeDefinitionRequest = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst messages_1 = require(\"./messages\");\r\n/**\r\n * The `workspace/workspaceFolders` is sent from the server to the client to fetch the open workspace folders.\r\n */\r\nvar WorkspaceFoldersRequest;\r\n(function (WorkspaceFoldersRequest) {\r\n    WorkspaceFoldersRequest.type = new messages_1.ProtocolRequestType0('workspace/workspaceFolders');\r\n})(WorkspaceFoldersRequest = exports.WorkspaceFoldersRequest || (exports.WorkspaceFoldersRequest = {}));\r\n/**\r\n * The `workspace/didChangeWorkspaceFolders` notification is sent from the client to the server when the workspace\r\n * folder configuration changes.\r\n */\r\nvar DidChangeWorkspaceFoldersNotification;\r\n(function (DidChangeWorkspaceFoldersNotification) {\r\n    DidChangeWorkspaceFoldersNotification.type = new messages_1.ProtocolNotificationType('workspace/didChangeWorkspaceFolders');\r\n})(DidChangeWorkspaceFoldersNotification = exports.DidChangeWorkspaceFoldersNotification || (exports.DidChangeWorkspaceFoldersNotification = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction objectLiteral(value) {\r\n    // Strictly speaking class instances pass this check as well. Since the LSP\r\n    // doesn't use classes we ignore this for now. If we do we need to add something\r\n    // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n    return value !== null && typeof value === 'object';\r\n}\r\nexports.objectLiteral = objectLiteral;\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = undefined;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (changes, version) {\r\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\r\n            var change = changes_1[_i];\r\n            if (FullTextDocument.isIncremental(change)) {\r\n                // makes sure start is before end\r\n                var range = getWellformedRange(change.range);\r\n                // update content\r\n                var startOffset = this.offsetAt(range.start);\r\n                var endOffset = this.offsetAt(range.end);\r\n                this._content = this._content.substring(0, startOffset) + change.text + this._content.substring(endOffset, this._content.length);\r\n                // update the offsets\r\n                var startLine = Math.max(range.start.line, 0);\r\n                var endLine = Math.max(range.end.line, 0);\r\n                var lineOffsets = this._lineOffsets;\r\n                var addedLineOffsets = computeLineOffsets(change.text, false, startOffset);\r\n                if (endLine - startLine === addedLineOffsets.length) {\r\n                    for (var i = 0, len = addedLineOffsets.length; i < len; i++) {\r\n                        lineOffsets[i + startLine + 1] = addedLineOffsets[i];\r\n                    }\r\n                }\r\n                else {\r\n                    if (addedLineOffsets.length < 10000) {\r\n                        lineOffsets.splice.apply(lineOffsets, [startLine + 1, endLine - startLine].concat(addedLineOffsets));\r\n                    }\r\n                    else { // avoid too many arguments for splice\r\n                        this._lineOffsets = lineOffsets = lineOffsets.slice(0, startLine + 1).concat(addedLineOffsets, lineOffsets.slice(endLine + 1));\r\n                    }\r\n                }\r\n                var diff = change.text.length - (endOffset - startOffset);\r\n                if (diff !== 0) {\r\n                    for (var i = startLine + 1 + addedLineOffsets.length, len = lineOffsets.length; i < len; i++) {\r\n                        lineOffsets[i] = lineOffsets[i] + diff;\r\n                    }\r\n                }\r\n            }\r\n            else if (FullTextDocument.isFull(change)) {\r\n                this._content = change.text;\r\n                this._lineOffsets = undefined;\r\n            }\r\n            else {\r\n                throw new Error('Unknown change event received');\r\n            }\r\n        }\r\n        this._version = version;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === undefined) {\r\n            this._lineOffsets = computeLineOffsets(this._content, true);\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return { line: 0, character: offset };\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return { line: line, character: offset - lineOffsets[line] };\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.isIncremental = function (event) {\r\n        var candidate = event;\r\n        return candidate !== undefined && candidate !== null &&\r\n            typeof candidate.text === 'string' && candidate.range !== undefined &&\r\n            (candidate.rangeLength === undefined || typeof candidate.rangeLength === 'number');\r\n    };\r\n    FullTextDocument.isFull = function (event) {\r\n        var candidate = event;\r\n        return candidate !== undefined && candidate !== null &&\r\n            typeof candidate.text === 'string' && candidate.range === undefined && candidate.rangeLength === undefined;\r\n    };\r\n    return FullTextDocument;\r\n}());\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new text document.\r\n     *\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param version The document's initial version number.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Updates a TextDocument by modifing its content.\r\n     *\r\n     * @param document the document to update. Only documents created by TextDocument.create are valid inputs.\r\n     * @param changes the changes to apply to the document.\r\n     * @returns The updated TextDocument. Note: That's the same document instance passed in as first parameter.\r\n     *\r\n     */\r\n    function update(document, changes, version) {\r\n        if (document instanceof FullTextDocument) {\r\n            document.update(changes, version);\r\n            return document;\r\n        }\r\n        else {\r\n            throw new Error('TextDocument.update: document must be created by TextDocument.create');\r\n        }\r\n    }\r\n    TextDocument.update = update;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits.map(getWellformedEdit), function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n})(TextDocument || (TextDocument = {}));\r\nfunction mergeSort(data, compare) {\r\n    if (data.length <= 1) {\r\n        // sorted\r\n        return data;\r\n    }\r\n    var p = (data.length / 2) | 0;\r\n    var left = data.slice(0, p);\r\n    var right = data.slice(p);\r\n    mergeSort(left, compare);\r\n    mergeSort(right, compare);\r\n    var leftIdx = 0;\r\n    var rightIdx = 0;\r\n    var i = 0;\r\n    while (leftIdx < left.length && rightIdx < right.length) {\r\n        var ret = compare(left[leftIdx], right[rightIdx]);\r\n        if (ret <= 0) {\r\n            // smaller_equal -> take left to preserve order\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        else {\r\n            // greater -> take right\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n    }\r\n    while (leftIdx < left.length) {\r\n        data[i++] = left[leftIdx++];\r\n    }\r\n    while (rightIdx < right.length) {\r\n        data[i++] = right[rightIdx++];\r\n    }\r\n    return data;\r\n}\r\nfunction computeLineOffsets(text, isAtLineStart, textOffset) {\r\n    if (textOffset === void 0) { textOffset = 0; }\r\n    var result = isAtLineStart ? [textOffset] : [];\r\n    for (var i = 0; i < text.length; i++) {\r\n        var ch = text.charCodeAt(i);\r\n        if (ch === 13 /* CarriageReturn */ || ch === 10 /* LineFeed */) {\r\n            if (ch === 13 /* CarriageReturn */ && i + 1 < text.length && text.charCodeAt(i + 1) === 10 /* LineFeed */) {\r\n                i++;\r\n            }\r\n            result.push(textOffset + i + 1);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction getWellformedRange(range) {\r\n    var start = range.start;\r\n    var end = range.end;\r\n    if (start.line > end.line || (start.line === end.line && start.character > end.character)) {\r\n        return { start: end, end: start };\r\n    }\r\n    return range;\r\n}\r\nfunction getWellformedEdit(textEdit) {\r\n    var range = getWellformedRange(textEdit.range);\r\n    if (range !== textEdit.range) {\r\n        return { newText: textEdit.newText, range: range };\r\n    }\r\n    return textEdit;\r\n}\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\n/**\r\n * The Position namespace provides helper functions to work with\r\n * [Position](#Position) literals.\r\n */\r\nexport var Position;\r\n(function (Position) {\r\n    /**\r\n     * Creates a new Position literal from the given line and character.\r\n     * @param line The position's line.\r\n     * @param character The position's character.\r\n     */\r\n    function create(line, character) {\r\n        return { line: line, character: character };\r\n    }\r\n    Position.create = create;\r\n    /**\r\n     * Checks whether the given liternal conforms to the [Position](#Position) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Is.number(candidate.line) && Is.number(candidate.character);\r\n    }\r\n    Position.is = is;\r\n})(Position || (Position = {}));\r\n/**\r\n * The Range namespace provides helper functions to work with\r\n * [Range](#Range) literals.\r\n */\r\nexport var Range;\r\n(function (Range) {\r\n    function create(one, two, three, four) {\r\n        if (Is.number(one) && Is.number(two) && Is.number(three) && Is.number(four)) {\r\n            return { start: Position.create(one, two), end: Position.create(three, four) };\r\n        }\r\n        else if (Position.is(one) && Position.is(two)) {\r\n            return { start: one, end: two };\r\n        }\r\n        else {\r\n            throw new Error(\"Range#create called with invalid arguments[\" + one + \", \" + two + \", \" + three + \", \" + four + \"]\");\r\n        }\r\n    }\r\n    Range.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Range](#Range) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n    }\r\n    Range.is = is;\r\n})(Range || (Range = {}));\r\n/**\r\n * The Location namespace provides helper functions to work with\r\n * [Location](#Location) literals.\r\n */\r\nexport var Location;\r\n(function (Location) {\r\n    /**\r\n     * Creates a Location literal.\r\n     * @param uri The location's uri.\r\n     * @param range The location's range.\r\n     */\r\n    function create(uri, range) {\r\n        return { uri: uri, range: range };\r\n    }\r\n    Location.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Location](#Location) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n    }\r\n    Location.is = is;\r\n})(Location || (Location = {}));\r\n/**\r\n * The LocationLink namespace provides helper functions to work with\r\n * [LocationLink](#LocationLink) literals.\r\n */\r\nexport var LocationLink;\r\n(function (LocationLink) {\r\n    /**\r\n     * Creates a LocationLink literal.\r\n     * @param targetUri The definition's uri.\r\n     * @param targetRange The full range of the definition.\r\n     * @param targetSelectionRange The span of the symbol definition at the target.\r\n     * @param originSelectionRange The span of the symbol being defined in the originating source file.\r\n     */\r\n    function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n        return { targetUri: targetUri, targetRange: targetRange, targetSelectionRange: targetSelectionRange, originSelectionRange: originSelectionRange };\r\n    }\r\n    LocationLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [LocationLink](#LocationLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri)\r\n            && (Range.is(candidate.targetSelectionRange) || Is.undefined(candidate.targetSelectionRange))\r\n            && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n    }\r\n    LocationLink.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [Color](#Color) literals.\r\n */\r\nexport var Color;\r\n(function (Color) {\r\n    /**\r\n     * Creates a new Color literal.\r\n     */\r\n    function create(red, green, blue, alpha) {\r\n        return {\r\n            red: red,\r\n            green: green,\r\n            blue: blue,\r\n            alpha: alpha,\r\n        };\r\n    }\r\n    Color.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Color](#Color) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.red)\r\n            && Is.number(candidate.green)\r\n            && Is.number(candidate.blue)\r\n            && Is.number(candidate.alpha);\r\n    }\r\n    Color.is = is;\r\n})(Color || (Color = {}));\r\n/**\r\n * The ColorInformation namespace provides helper functions to work with\r\n * [ColorInformation](#ColorInformation) literals.\r\n */\r\nexport var ColorInformation;\r\n(function (ColorInformation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(range, color) {\r\n        return {\r\n            range: range,\r\n            color: color,\r\n        };\r\n    }\r\n    ColorInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Range.is(candidate.range) && Color.is(candidate.color);\r\n    }\r\n    ColorInformation.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\n/**\r\n * The Color namespace provides helper functions to work with\r\n * [ColorPresentation](#ColorPresentation) literals.\r\n */\r\nexport var ColorPresentation;\r\n(function (ColorPresentation) {\r\n    /**\r\n     * Creates a new ColorInformation literal.\r\n     */\r\n    function create(label, textEdit, additionalTextEdits) {\r\n        return {\r\n            label: label,\r\n            textEdit: textEdit,\r\n            additionalTextEdits: additionalTextEdits,\r\n        };\r\n    }\r\n    ColorPresentation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ColorInformation](#ColorInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate.label)\r\n            && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate))\r\n            && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n    }\r\n    ColorPresentation.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\n/**\r\n * Enum of known range kinds\r\n */\r\nexport var FoldingRangeKind;\r\n(function (FoldingRangeKind) {\r\n    /**\r\n     * Folding range for a comment\r\n     */\r\n    FoldingRangeKind[\"Comment\"] = \"comment\";\r\n    /**\r\n     * Folding range for a imports or includes\r\n     */\r\n    FoldingRangeKind[\"Imports\"] = \"imports\";\r\n    /**\r\n     * Folding range for a region (e.g. `#region`)\r\n     */\r\n    FoldingRangeKind[\"Region\"] = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\n/**\r\n * The folding range namespace provides helper functions to work with\r\n * [FoldingRange](#FoldingRange) literals.\r\n */\r\nexport var FoldingRange;\r\n(function (FoldingRange) {\r\n    /**\r\n     * Creates a new FoldingRange literal.\r\n     */\r\n    function create(startLine, endLine, startCharacter, endCharacter, kind) {\r\n        var result = {\r\n            startLine: startLine,\r\n            endLine: endLine\r\n        };\r\n        if (Is.defined(startCharacter)) {\r\n            result.startCharacter = startCharacter;\r\n        }\r\n        if (Is.defined(endCharacter)) {\r\n            result.endCharacter = endCharacter;\r\n        }\r\n        if (Is.defined(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    FoldingRange.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FoldingRange](#FoldingRange) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.number(candidate.startLine) && Is.number(candidate.startLine)\r\n            && (Is.undefined(candidate.startCharacter) || Is.number(candidate.startCharacter))\r\n            && (Is.undefined(candidate.endCharacter) || Is.number(candidate.endCharacter))\r\n            && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n    }\r\n    FoldingRange.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\n/**\r\n * The DiagnosticRelatedInformation namespace provides helper functions to work with\r\n * [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) literals.\r\n */\r\nexport var DiagnosticRelatedInformation;\r\n(function (DiagnosticRelatedInformation) {\r\n    /**\r\n     * Creates a new DiagnosticRelatedInformation literal.\r\n     */\r\n    function create(location, message) {\r\n        return {\r\n            location: location,\r\n            message: message\r\n        };\r\n    }\r\n    DiagnosticRelatedInformation.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DiagnosticRelatedInformation](#DiagnosticRelatedInformation) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n    }\r\n    DiagnosticRelatedInformation.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\n/**\r\n * The diagnostic's severity.\r\n */\r\nexport var DiagnosticSeverity;\r\n(function (DiagnosticSeverity) {\r\n    /**\r\n     * Reports an error.\r\n     */\r\n    DiagnosticSeverity.Error = 1;\r\n    /**\r\n     * Reports a warning.\r\n     */\r\n    DiagnosticSeverity.Warning = 2;\r\n    /**\r\n     * Reports an information.\r\n     */\r\n    DiagnosticSeverity.Information = 3;\r\n    /**\r\n     * Reports a hint.\r\n     */\r\n    DiagnosticSeverity.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\n/**\r\n * The diagnostic tags.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var DiagnosticTag;\r\n(function (DiagnosticTag) {\r\n    /**\r\n     * Unused or unnecessary code.\r\n     *\r\n     * Clients are allowed to render diagnostics with this tag faded out instead of having\r\n     * an error squiggle.\r\n     */\r\n    DiagnosticTag.Unnecessary = 1;\r\n    /**\r\n     * Deprecated or obsolete code.\r\n     *\r\n     * Clients are allowed to rendered diagnostics with this tag strike through.\r\n     */\r\n    DiagnosticTag.Deprecated = 2;\r\n})(DiagnosticTag || (DiagnosticTag = {}));\r\n/**\r\n * The Diagnostic namespace provides helper functions to work with\r\n * [Diagnostic](#Diagnostic) literals.\r\n */\r\nexport var Diagnostic;\r\n(function (Diagnostic) {\r\n    /**\r\n     * Creates a new Diagnostic literal.\r\n     */\r\n    function create(range, message, severity, code, source, relatedInformation) {\r\n        var result = { range: range, message: message };\r\n        if (Is.defined(severity)) {\r\n            result.severity = severity;\r\n        }\r\n        if (Is.defined(code)) {\r\n            result.code = code;\r\n        }\r\n        if (Is.defined(source)) {\r\n            result.source = source;\r\n        }\r\n        if (Is.defined(relatedInformation)) {\r\n            result.relatedInformation = relatedInformation;\r\n        }\r\n        return result;\r\n    }\r\n    Diagnostic.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Diagnostic](#Diagnostic) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && Range.is(candidate.range)\r\n            && Is.string(candidate.message)\r\n            && (Is.number(candidate.severity) || Is.undefined(candidate.severity))\r\n            && (Is.number(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code))\r\n            && (Is.string(candidate.source) || Is.undefined(candidate.source))\r\n            && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n    }\r\n    Diagnostic.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\n/**\r\n * The Command namespace provides helper functions to work with\r\n * [Command](#Command) literals.\r\n */\r\nexport var Command;\r\n(function (Command) {\r\n    /**\r\n     * Creates a new Command literal.\r\n     */\r\n    function create(title, command) {\r\n        var args = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            args[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { title: title, command: command };\r\n        if (Is.defined(args) && args.length > 0) {\r\n            result.arguments = args;\r\n        }\r\n        return result;\r\n    }\r\n    Command.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [Command](#Command) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n    }\r\n    Command.is = is;\r\n})(Command || (Command = {}));\r\n/**\r\n * The TextEdit namespace provides helper function to create replace,\r\n * insert and delete edits more easily.\r\n */\r\nexport var TextEdit;\r\n(function (TextEdit) {\r\n    /**\r\n     * Creates a replace text edit.\r\n     * @param range The range of text to be replaced.\r\n     * @param newText The new text.\r\n     */\r\n    function replace(range, newText) {\r\n        return { range: range, newText: newText };\r\n    }\r\n    TextEdit.replace = replace;\r\n    /**\r\n     * Creates a insert text edit.\r\n     * @param position The position to insert the text at.\r\n     * @param newText The text to be inserted.\r\n     */\r\n    function insert(position, newText) {\r\n        return { range: { start: position, end: position }, newText: newText };\r\n    }\r\n    TextEdit.insert = insert;\r\n    /**\r\n     * Creates a delete text edit.\r\n     * @param range The range of text to be deleted.\r\n     */\r\n    function del(range) {\r\n        return { range: range, newText: '' };\r\n    }\r\n    TextEdit.del = del;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(candidate)\r\n            && Is.string(candidate.newText)\r\n            && Range.is(candidate.range);\r\n    }\r\n    TextEdit.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\n/**\r\n * The TextDocumentEdit namespace provides helper function to create\r\n * an edit that manipulates a text document.\r\n */\r\nexport var TextDocumentEdit;\r\n(function (TextDocumentEdit) {\r\n    /**\r\n     * Creates a new `TextDocumentEdit`\r\n     */\r\n    function create(textDocument, edits) {\r\n        return { textDocument: textDocument, edits: edits };\r\n    }\r\n    TextDocumentEdit.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate)\r\n            && VersionedTextDocumentIdentifier.is(candidate.textDocument)\r\n            && Array.isArray(candidate.edits);\r\n    }\r\n    TextDocumentEdit.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nexport var CreateFile;\r\n(function (CreateFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'create',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    CreateFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'create' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    CreateFile.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nexport var RenameFile;\r\n(function (RenameFile) {\r\n    function create(oldUri, newUri, options) {\r\n        var result = {\r\n            kind: 'rename',\r\n            oldUri: oldUri,\r\n            newUri: newUri\r\n        };\r\n        if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    RenameFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'rename' && Is.string(candidate.oldUri) && Is.string(candidate.newUri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))));\r\n    }\r\n    RenameFile.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nexport var DeleteFile;\r\n(function (DeleteFile) {\r\n    function create(uri, options) {\r\n        var result = {\r\n            kind: 'delete',\r\n            uri: uri\r\n        };\r\n        if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n            result.options = options;\r\n        }\r\n        return result;\r\n    }\r\n    DeleteFile.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && candidate.kind === 'delete' && Is.string(candidate.uri) &&\r\n            (candidate.options === void 0 ||\r\n                ((candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))));\r\n    }\r\n    DeleteFile.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nexport var WorkspaceEdit;\r\n(function (WorkspaceEdit) {\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            (candidate.changes !== void 0 || candidate.documentChanges !== void 0) &&\r\n            (candidate.documentChanges === void 0 || candidate.documentChanges.every(function (change) {\r\n                if (Is.string(change.kind)) {\r\n                    return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n                }\r\n                else {\r\n                    return TextDocumentEdit.is(change);\r\n                }\r\n            }));\r\n    }\r\n    WorkspaceEdit.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextEditChangeImpl = /** @class */ (function () {\r\n    function TextEditChangeImpl(edits) {\r\n        this.edits = edits;\r\n    }\r\n    TextEditChangeImpl.prototype.insert = function (position, newText) {\r\n        this.edits.push(TextEdit.insert(position, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.replace = function (range, newText) {\r\n        this.edits.push(TextEdit.replace(range, newText));\r\n    };\r\n    TextEditChangeImpl.prototype.delete = function (range) {\r\n        this.edits.push(TextEdit.del(range));\r\n    };\r\n    TextEditChangeImpl.prototype.add = function (edit) {\r\n        this.edits.push(edit);\r\n    };\r\n    TextEditChangeImpl.prototype.all = function () {\r\n        return this.edits;\r\n    };\r\n    TextEditChangeImpl.prototype.clear = function () {\r\n        this.edits.splice(0, this.edits.length);\r\n    };\r\n    return TextEditChangeImpl;\r\n}());\r\n/**\r\n * A workspace change helps constructing changes to a workspace.\r\n */\r\nvar WorkspaceChange = /** @class */ (function () {\r\n    function WorkspaceChange(workspaceEdit) {\r\n        var _this = this;\r\n        this._textEditChanges = Object.create(null);\r\n        if (workspaceEdit) {\r\n            this._workspaceEdit = workspaceEdit;\r\n            if (workspaceEdit.documentChanges) {\r\n                workspaceEdit.documentChanges.forEach(function (change) {\r\n                    if (TextDocumentEdit.is(change)) {\r\n                        var textEditChange = new TextEditChangeImpl(change.edits);\r\n                        _this._textEditChanges[change.textDocument.uri] = textEditChange;\r\n                    }\r\n                });\r\n            }\r\n            else if (workspaceEdit.changes) {\r\n                Object.keys(workspaceEdit.changes).forEach(function (key) {\r\n                    var textEditChange = new TextEditChangeImpl(workspaceEdit.changes[key]);\r\n                    _this._textEditChanges[key] = textEditChange;\r\n                });\r\n            }\r\n        }\r\n    }\r\n    Object.defineProperty(WorkspaceChange.prototype, \"edit\", {\r\n        /**\r\n         * Returns the underlying [WorkspaceEdit](#WorkspaceEdit) literal\r\n         * use to be returned from a workspace edit operation like rename.\r\n         */\r\n        get: function () {\r\n            return this._workspaceEdit;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    WorkspaceChange.prototype.getTextEditChange = function (key) {\r\n        if (VersionedTextDocumentIdentifier.is(key)) {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    documentChanges: []\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.documentChanges) {\r\n                throw new Error('Workspace edit is not configured for document changes.');\r\n            }\r\n            var textDocument = key;\r\n            var result = this._textEditChanges[textDocument.uri];\r\n            if (!result) {\r\n                var edits = [];\r\n                var textDocumentEdit = {\r\n                    textDocument: textDocument,\r\n                    edits: edits\r\n                };\r\n                this._workspaceEdit.documentChanges.push(textDocumentEdit);\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[textDocument.uri] = result;\r\n            }\r\n            return result;\r\n        }\r\n        else {\r\n            if (!this._workspaceEdit) {\r\n                this._workspaceEdit = {\r\n                    changes: Object.create(null)\r\n                };\r\n            }\r\n            if (!this._workspaceEdit.changes) {\r\n                throw new Error('Workspace edit is not configured for normal text edit changes.');\r\n            }\r\n            var result = this._textEditChanges[key];\r\n            if (!result) {\r\n                var edits = [];\r\n                this._workspaceEdit.changes[key] = edits;\r\n                result = new TextEditChangeImpl(edits);\r\n                this._textEditChanges[key] = result;\r\n            }\r\n            return result;\r\n        }\r\n    };\r\n    WorkspaceChange.prototype.createFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(CreateFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.renameFile = function (oldUri, newUri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(RenameFile.create(oldUri, newUri, options));\r\n    };\r\n    WorkspaceChange.prototype.deleteFile = function (uri, options) {\r\n        this.checkDocumentChanges();\r\n        this._workspaceEdit.documentChanges.push(DeleteFile.create(uri, options));\r\n    };\r\n    WorkspaceChange.prototype.checkDocumentChanges = function () {\r\n        if (!this._workspaceEdit || !this._workspaceEdit.documentChanges) {\r\n            throw new Error('Workspace edit is not configured for document changes.');\r\n        }\r\n    };\r\n    return WorkspaceChange;\r\n}());\r\nexport { WorkspaceChange };\r\n/**\r\n * The TextDocumentIdentifier namespace provides helper functions to work with\r\n * [TextDocumentIdentifier](#TextDocumentIdentifier) literals.\r\n */\r\nexport var TextDocumentIdentifier;\r\n(function (TextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new TextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     */\r\n    function create(uri) {\r\n        return { uri: uri };\r\n    }\r\n    TextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentIdentifier](#TextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri);\r\n    }\r\n    TextDocumentIdentifier.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\n/**\r\n * The VersionedTextDocumentIdentifier namespace provides helper functions to work with\r\n * [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) literals.\r\n */\r\nexport var VersionedTextDocumentIdentifier;\r\n(function (VersionedTextDocumentIdentifier) {\r\n    /**\r\n     * Creates a new VersionedTextDocumentIdentifier literal.\r\n     * @param uri The document's uri.\r\n     * @param uri The document's text.\r\n     */\r\n    function create(uri, version) {\r\n        return { uri: uri, version: version };\r\n    }\r\n    VersionedTextDocumentIdentifier.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [VersionedTextDocumentIdentifier](#VersionedTextDocumentIdentifier) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.number(candidate.version));\r\n    }\r\n    VersionedTextDocumentIdentifier.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\n/**\r\n * The TextDocumentItem namespace provides helper functions to work with\r\n * [TextDocumentItem](#TextDocumentItem) literals.\r\n */\r\nexport var TextDocumentItem;\r\n(function (TextDocumentItem) {\r\n    /**\r\n     * Creates a new TextDocumentItem literal.\r\n     * @param uri The document's uri.\r\n     * @param languageId The document's language identifier.\r\n     * @param version The document's version number.\r\n     * @param text The document's text.\r\n     */\r\n    function create(uri, languageId, version, text) {\r\n        return { uri: uri, languageId: languageId, version: version, text: text };\r\n    }\r\n    TextDocumentItem.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [TextDocumentItem](#TextDocumentItem) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.number(candidate.version) && Is.string(candidate.text);\r\n    }\r\n    TextDocumentItem.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\n/**\r\n * Describes the content type that a client supports in various\r\n * result literals like `Hover`, `ParameterInfo` or `CompletionItem`.\r\n *\r\n * Please note that `MarkupKinds` must not start with a `$`. This kinds\r\n * are reserved for internal usage.\r\n */\r\nexport var MarkupKind;\r\n(function (MarkupKind) {\r\n    /**\r\n     * Plain text is supported as a content format\r\n     */\r\n    MarkupKind.PlainText = 'plaintext';\r\n    /**\r\n     * Markdown is supported as a content format\r\n     */\r\n    MarkupKind.Markdown = 'markdown';\r\n})(MarkupKind || (MarkupKind = {}));\r\n(function (MarkupKind) {\r\n    /**\r\n     * Checks whether the given value is a value of the [MarkupKind](#MarkupKind) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate === MarkupKind.PlainText || candidate === MarkupKind.Markdown;\r\n    }\r\n    MarkupKind.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nexport var MarkupContent;\r\n(function (MarkupContent) {\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkupContent](#MarkupContent) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n    }\r\n    MarkupContent.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\n/**\r\n * The kind of a completion entry.\r\n */\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind.Text = 1;\r\n    CompletionItemKind.Method = 2;\r\n    CompletionItemKind.Function = 3;\r\n    CompletionItemKind.Constructor = 4;\r\n    CompletionItemKind.Field = 5;\r\n    CompletionItemKind.Variable = 6;\r\n    CompletionItemKind.Class = 7;\r\n    CompletionItemKind.Interface = 8;\r\n    CompletionItemKind.Module = 9;\r\n    CompletionItemKind.Property = 10;\r\n    CompletionItemKind.Unit = 11;\r\n    CompletionItemKind.Value = 12;\r\n    CompletionItemKind.Enum = 13;\r\n    CompletionItemKind.Keyword = 14;\r\n    CompletionItemKind.Snippet = 15;\r\n    CompletionItemKind.Color = 16;\r\n    CompletionItemKind.File = 17;\r\n    CompletionItemKind.Reference = 18;\r\n    CompletionItemKind.Folder = 19;\r\n    CompletionItemKind.EnumMember = 20;\r\n    CompletionItemKind.Constant = 21;\r\n    CompletionItemKind.Struct = 22;\r\n    CompletionItemKind.Event = 23;\r\n    CompletionItemKind.Operator = 24;\r\n    CompletionItemKind.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\n/**\r\n * Defines whether the insert text in a completion item should be interpreted as\r\n * plain text or a snippet.\r\n */\r\nexport var InsertTextFormat;\r\n(function (InsertTextFormat) {\r\n    /**\r\n     * The primary text to be inserted is treated as a plain string.\r\n     */\r\n    InsertTextFormat.PlainText = 1;\r\n    /**\r\n     * The primary text to be inserted is treated as a snippet.\r\n     *\r\n     * A snippet can define tab stops and placeholders with `$1`, `$2`\r\n     * and `${3:foo}`. `$0` defines the final tab stop, it defaults to\r\n     * the end of the snippet. Placeholders with equal identifiers are linked,\r\n     * that is typing in one will update others too.\r\n     *\r\n     * See also: https://github.com/Microsoft/vscode/blob/master/src/vs/editor/contrib/snippet/common/snippet.md\r\n     */\r\n    InsertTextFormat.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\n/**\r\n * Completion item tags are extra annotations that tweak the rendering of a completion\r\n * item.\r\n *\r\n * @since 3.15.0\r\n */\r\nexport var CompletionItemTag;\r\n(function (CompletionItemTag) {\r\n    /**\r\n     * Render a completion as obsolete, usually using a strike-out.\r\n     */\r\n    CompletionItemTag.Deprecated = 1;\r\n})(CompletionItemTag || (CompletionItemTag = {}));\r\n/**\r\n * The CompletionItem namespace provides functions to deal with\r\n * completion items.\r\n */\r\nexport var CompletionItem;\r\n(function (CompletionItem) {\r\n    /**\r\n     * Create a completion item and seed it with a label.\r\n     * @param label The completion item's label\r\n     */\r\n    function create(label) {\r\n        return { label: label };\r\n    }\r\n    CompletionItem.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\n/**\r\n * The CompletionList namespace provides functions to deal with\r\n * completion lists.\r\n */\r\nexport var CompletionList;\r\n(function (CompletionList) {\r\n    /**\r\n     * Creates a new completion list.\r\n     *\r\n     * @param items The completion items.\r\n     * @param isIncomplete The list is not complete.\r\n     */\r\n    function create(items, isIncomplete) {\r\n        return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n    }\r\n    CompletionList.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nexport var MarkedString;\r\n(function (MarkedString) {\r\n    /**\r\n     * Creates a marked string from plain text.\r\n     *\r\n     * @param plainText The plain text.\r\n     */\r\n    function fromPlainText(plainText) {\r\n        return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, '\\\\$&'); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\r\n    }\r\n    MarkedString.fromPlainText = fromPlainText;\r\n    /**\r\n     * Checks whether the given value conforms to the [MarkedString](#MarkedString) type.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.string(candidate) || (Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value));\r\n    }\r\n    MarkedString.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nexport var Hover;\r\n(function (Hover) {\r\n    /**\r\n     * Checks whether the given value conforms to the [Hover](#Hover) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) ||\r\n            MarkedString.is(candidate.contents) ||\r\n            Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n    }\r\n    Hover.is = is;\r\n})(Hover || (Hover = {}));\r\n/**\r\n * The ParameterInformation namespace provides helper functions to work with\r\n * [ParameterInformation](#ParameterInformation) literals.\r\n */\r\nexport var ParameterInformation;\r\n(function (ParameterInformation) {\r\n    /**\r\n     * Creates a new parameter information literal.\r\n     *\r\n     * @param label A label string.\r\n     * @param documentation A doc string.\r\n     */\r\n    function create(label, documentation) {\r\n        return documentation ? { label: label, documentation: documentation } : { label: label };\r\n    }\r\n    ParameterInformation.create = create;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\n/**\r\n * The SignatureInformation namespace provides helper functions to work with\r\n * [SignatureInformation](#SignatureInformation) literals.\r\n */\r\nexport var SignatureInformation;\r\n(function (SignatureInformation) {\r\n    function create(label, documentation) {\r\n        var parameters = [];\r\n        for (var _i = 2; _i < arguments.length; _i++) {\r\n            parameters[_i - 2] = arguments[_i];\r\n        }\r\n        var result = { label: label };\r\n        if (Is.defined(documentation)) {\r\n            result.documentation = documentation;\r\n        }\r\n        if (Is.defined(parameters)) {\r\n            result.parameters = parameters;\r\n        }\r\n        else {\r\n            result.parameters = [];\r\n        }\r\n        return result;\r\n    }\r\n    SignatureInformation.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind.Text = 1;\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind.Read = 2;\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * DocumentHighlight namespace to provide helper functions to work with\r\n * [DocumentHighlight](#DocumentHighlight) literals.\r\n */\r\nexport var DocumentHighlight;\r\n(function (DocumentHighlight) {\r\n    /**\r\n     * Create a DocumentHighlight object.\r\n     * @param range The range the highlight applies to.\r\n     */\r\n    function create(range, kind) {\r\n        var result = { range: range };\r\n        if (Is.number(kind)) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentHighlight.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind.File = 1;\r\n    SymbolKind.Module = 2;\r\n    SymbolKind.Namespace = 3;\r\n    SymbolKind.Package = 4;\r\n    SymbolKind.Class = 5;\r\n    SymbolKind.Method = 6;\r\n    SymbolKind.Property = 7;\r\n    SymbolKind.Field = 8;\r\n    SymbolKind.Constructor = 9;\r\n    SymbolKind.Enum = 10;\r\n    SymbolKind.Interface = 11;\r\n    SymbolKind.Function = 12;\r\n    SymbolKind.Variable = 13;\r\n    SymbolKind.Constant = 14;\r\n    SymbolKind.String = 15;\r\n    SymbolKind.Number = 16;\r\n    SymbolKind.Boolean = 17;\r\n    SymbolKind.Array = 18;\r\n    SymbolKind.Object = 19;\r\n    SymbolKind.Key = 20;\r\n    SymbolKind.Null = 21;\r\n    SymbolKind.EnumMember = 22;\r\n    SymbolKind.Struct = 23;\r\n    SymbolKind.Event = 24;\r\n    SymbolKind.Operator = 25;\r\n    SymbolKind.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\n/**\r\n * Symbol tags are extra annotations that tweak the rendering of a symbol.\r\n * @since 3.15\r\n */\r\nexport var SymbolTag;\r\n(function (SymbolTag) {\r\n    /**\r\n     * Render a symbol as obsolete, usually using a strike-out.\r\n     */\r\n    SymbolTag.Deprecated = 1;\r\n})(SymbolTag || (SymbolTag = {}));\r\nexport var SymbolInformation;\r\n(function (SymbolInformation) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the location of the symbol.\r\n     * @param uri The resource of the location of symbol, defaults to the current document.\r\n     * @param containerName The name of the symbol containing the symbol.\r\n     */\r\n    function create(name, kind, range, uri, containerName) {\r\n        var result = {\r\n            name: name,\r\n            kind: kind,\r\n            location: { uri: uri, range: range }\r\n        };\r\n        if (containerName) {\r\n            result.containerName = containerName;\r\n        }\r\n        return result;\r\n    }\r\n    SymbolInformation.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\nexport var DocumentSymbol;\r\n(function (DocumentSymbol) {\r\n    /**\r\n     * Creates a new symbol information literal.\r\n     *\r\n     * @param name The name of the symbol.\r\n     * @param detail The detail of the symbol.\r\n     * @param kind The kind of the symbol.\r\n     * @param range The range of the symbol.\r\n     * @param selectionRange The selectionRange of the symbol.\r\n     * @param children Children of the symbol.\r\n     */\r\n    function create(name, detail, kind, range, selectionRange, children) {\r\n        var result = {\r\n            name: name,\r\n            detail: detail,\r\n            kind: kind,\r\n            range: range,\r\n            selectionRange: selectionRange\r\n        };\r\n        if (children !== void 0) {\r\n            result.children = children;\r\n        }\r\n        return result;\r\n    }\r\n    DocumentSymbol.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentSymbol](#DocumentSymbol) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate &&\r\n            Is.string(candidate.name) && Is.number(candidate.kind) &&\r\n            Range.is(candidate.range) && Range.is(candidate.selectionRange) &&\r\n            (candidate.detail === void 0 || Is.string(candidate.detail)) &&\r\n            (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) &&\r\n            (candidate.children === void 0 || Array.isArray(candidate.children));\r\n    }\r\n    DocumentSymbol.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\n/**\r\n * A set of predefined code action kinds\r\n */\r\nexport var CodeActionKind;\r\n(function (CodeActionKind) {\r\n    /**\r\n     * Empty kind.\r\n     */\r\n    CodeActionKind.Empty = '';\r\n    /**\r\n     * Base kind for quickfix actions: 'quickfix'\r\n     */\r\n    CodeActionKind.QuickFix = 'quickfix';\r\n    /**\r\n     * Base kind for refactoring actions: 'refactor'\r\n     */\r\n    CodeActionKind.Refactor = 'refactor';\r\n    /**\r\n     * Base kind for refactoring extraction actions: 'refactor.extract'\r\n     *\r\n     * Example extract actions:\r\n     *\r\n     * - Extract method\r\n     * - Extract function\r\n     * - Extract variable\r\n     * - Extract interface from class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorExtract = 'refactor.extract';\r\n    /**\r\n     * Base kind for refactoring inline actions: 'refactor.inline'\r\n     *\r\n     * Example inline actions:\r\n     *\r\n     * - Inline function\r\n     * - Inline variable\r\n     * - Inline constant\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorInline = 'refactor.inline';\r\n    /**\r\n     * Base kind for refactoring rewrite actions: 'refactor.rewrite'\r\n     *\r\n     * Example rewrite actions:\r\n     *\r\n     * - Convert JavaScript function to class\r\n     * - Add or remove parameter\r\n     * - Encapsulate field\r\n     * - Make method static\r\n     * - Move method to base class\r\n     * - ...\r\n     */\r\n    CodeActionKind.RefactorRewrite = 'refactor.rewrite';\r\n    /**\r\n     * Base kind for source actions: `source`\r\n     *\r\n     * Source code actions apply to the entire file.\r\n     */\r\n    CodeActionKind.Source = 'source';\r\n    /**\r\n     * Base kind for an organize imports source action: `source.organizeImports`\r\n     */\r\n    CodeActionKind.SourceOrganizeImports = 'source.organizeImports';\r\n    /**\r\n     * Base kind for auto-fix source actions: `source.fixAll`.\r\n     *\r\n     * Fix all actions automatically fix errors that have a clear fix that do not require user input.\r\n     * They should not suppress errors or perform unsafe fixes such as generating new types or classes.\r\n     *\r\n     * @since 3.15.0\r\n     */\r\n    CodeActionKind.SourceFixAll = 'source.fixAll';\r\n})(CodeActionKind || (CodeActionKind = {}));\r\n/**\r\n * The CodeActionContext namespace provides helper functions to work with\r\n * [CodeActionContext](#CodeActionContext) literals.\r\n */\r\nexport var CodeActionContext;\r\n(function (CodeActionContext) {\r\n    /**\r\n     * Creates a new CodeActionContext literal.\r\n     */\r\n    function create(diagnostics, only) {\r\n        var result = { diagnostics: diagnostics };\r\n        if (only !== void 0 && only !== null) {\r\n            result.only = only;\r\n        }\r\n        return result;\r\n    }\r\n    CodeActionContext.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeActionContext](#CodeActionContext) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string));\r\n    }\r\n    CodeActionContext.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nexport var CodeAction;\r\n(function (CodeAction) {\r\n    function create(title, commandOrEdit, kind) {\r\n        var result = { title: title };\r\n        if (Command.is(commandOrEdit)) {\r\n            result.command = commandOrEdit;\r\n        }\r\n        else {\r\n            result.edit = commandOrEdit;\r\n        }\r\n        if (kind !== void 0) {\r\n            result.kind = kind;\r\n        }\r\n        return result;\r\n    }\r\n    CodeAction.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate && Is.string(candidate.title) &&\r\n            (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) &&\r\n            (candidate.kind === void 0 || Is.string(candidate.kind)) &&\r\n            (candidate.edit !== void 0 || candidate.command !== void 0) &&\r\n            (candidate.command === void 0 || Command.is(candidate.command)) &&\r\n            (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) &&\r\n            (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n    }\r\n    CodeAction.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\n/**\r\n * The CodeLens namespace provides helper functions to work with\r\n * [CodeLens](#CodeLens) literals.\r\n */\r\nexport var CodeLens;\r\n(function (CodeLens) {\r\n    /**\r\n     * Creates a new CodeLens literal.\r\n     */\r\n    function create(range, data) {\r\n        var result = { range: range };\r\n        if (Is.defined(data)) {\r\n            result.data = data;\r\n        }\r\n        return result;\r\n    }\r\n    CodeLens.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [CodeLens](#CodeLens) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n    }\r\n    CodeLens.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\n/**\r\n * The FormattingOptions namespace provides helper functions to work with\r\n * [FormattingOptions](#FormattingOptions) literals.\r\n */\r\nexport var FormattingOptions;\r\n(function (FormattingOptions) {\r\n    /**\r\n     * Creates a new FormattingOptions literal.\r\n     */\r\n    function create(tabSize, insertSpaces) {\r\n        return { tabSize: tabSize, insertSpaces: insertSpaces };\r\n    }\r\n    FormattingOptions.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [FormattingOptions](#FormattingOptions) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.number(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n    }\r\n    FormattingOptions.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\n/**\r\n * The DocumentLink namespace provides helper functions to work with\r\n * [DocumentLink](#DocumentLink) literals.\r\n */\r\nexport var DocumentLink;\r\n(function (DocumentLink) {\r\n    /**\r\n     * Creates a new DocumentLink literal.\r\n     */\r\n    function create(range, target, data) {\r\n        return { range: range, target: target, data: data };\r\n    }\r\n    DocumentLink.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [DocumentLink](#DocumentLink) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n    }\r\n    DocumentLink.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\n/**\r\n * The SelectionRange namespace provides helper function to work with\r\n * SelectionRange literals.\r\n */\r\nexport var SelectionRange;\r\n(function (SelectionRange) {\r\n    /**\r\n     * Creates a new SelectionRange\r\n     * @param range the range.\r\n     * @param parent an optional parent.\r\n     */\r\n    function create(range, parent) {\r\n        return { range: range, parent: parent };\r\n    }\r\n    SelectionRange.create = create;\r\n    function is(value) {\r\n        var candidate = value;\r\n        return candidate !== undefined && Range.is(candidate.range) && (candidate.parent === undefined || SelectionRange.is(candidate.parent));\r\n    }\r\n    SelectionRange.is = is;\r\n})(SelectionRange || (SelectionRange = {}));\r\nexport var EOL = ['\\n', '\\r\\n', '\\r'];\r\n/**\r\n * @deprecated Use the text document from the new vscode-languageserver-textdocument package.\r\n */\r\nexport var TextDocument;\r\n(function (TextDocument) {\r\n    /**\r\n     * Creates a new ITextDocument literal from the given uri and content.\r\n     * @param uri The document's uri.\r\n     * @param languageId  The document's language Id.\r\n     * @param content The document's content.\r\n     */\r\n    function create(uri, languageId, version, content) {\r\n        return new FullTextDocument(uri, languageId, version, content);\r\n    }\r\n    TextDocument.create = create;\r\n    /**\r\n     * Checks whether the given literal conforms to the [ITextDocument](#ITextDocument) interface.\r\n     */\r\n    function is(value) {\r\n        var candidate = value;\r\n        return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.number(candidate.lineCount)\r\n            && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n    }\r\n    TextDocument.is = is;\r\n    function applyEdits(document, edits) {\r\n        var text = document.getText();\r\n        var sortedEdits = mergeSort(edits, function (a, b) {\r\n            var diff = a.range.start.line - b.range.start.line;\r\n            if (diff === 0) {\r\n                return a.range.start.character - b.range.start.character;\r\n            }\r\n            return diff;\r\n        });\r\n        var lastModifiedOffset = text.length;\r\n        for (var i = sortedEdits.length - 1; i >= 0; i--) {\r\n            var e = sortedEdits[i];\r\n            var startOffset = document.offsetAt(e.range.start);\r\n            var endOffset = document.offsetAt(e.range.end);\r\n            if (endOffset <= lastModifiedOffset) {\r\n                text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n            }\r\n            else {\r\n                throw new Error('Overlapping edit');\r\n            }\r\n            lastModifiedOffset = startOffset;\r\n        }\r\n        return text;\r\n    }\r\n    TextDocument.applyEdits = applyEdits;\r\n    function mergeSort(data, compare) {\r\n        if (data.length <= 1) {\r\n            // sorted\r\n            return data;\r\n        }\r\n        var p = (data.length / 2) | 0;\r\n        var left = data.slice(0, p);\r\n        var right = data.slice(p);\r\n        mergeSort(left, compare);\r\n        mergeSort(right, compare);\r\n        var leftIdx = 0;\r\n        var rightIdx = 0;\r\n        var i = 0;\r\n        while (leftIdx < left.length && rightIdx < right.length) {\r\n            var ret = compare(left[leftIdx], right[rightIdx]);\r\n            if (ret <= 0) {\r\n                // smaller_equal -> take left to preserve order\r\n                data[i++] = left[leftIdx++];\r\n            }\r\n            else {\r\n                // greater -> take right\r\n                data[i++] = right[rightIdx++];\r\n            }\r\n        }\r\n        while (leftIdx < left.length) {\r\n            data[i++] = left[leftIdx++];\r\n        }\r\n        while (rightIdx < right.length) {\r\n            data[i++] = right[rightIdx++];\r\n        }\r\n        return data;\r\n    }\r\n})(TextDocument || (TextDocument = {}));\r\nvar FullTextDocument = /** @class */ (function () {\r\n    function FullTextDocument(uri, languageId, version, content) {\r\n        this._uri = uri;\r\n        this._languageId = languageId;\r\n        this._version = version;\r\n        this._content = content;\r\n        this._lineOffsets = undefined;\r\n    }\r\n    Object.defineProperty(FullTextDocument.prototype, \"uri\", {\r\n        get: function () {\r\n            return this._uri;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"languageId\", {\r\n        get: function () {\r\n            return this._languageId;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(FullTextDocument.prototype, \"version\", {\r\n        get: function () {\r\n            return this._version;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    FullTextDocument.prototype.getText = function (range) {\r\n        if (range) {\r\n            var start = this.offsetAt(range.start);\r\n            var end = this.offsetAt(range.end);\r\n            return this._content.substring(start, end);\r\n        }\r\n        return this._content;\r\n    };\r\n    FullTextDocument.prototype.update = function (event, version) {\r\n        this._content = event.text;\r\n        this._version = version;\r\n        this._lineOffsets = undefined;\r\n    };\r\n    FullTextDocument.prototype.getLineOffsets = function () {\r\n        if (this._lineOffsets === undefined) {\r\n            var lineOffsets = [];\r\n            var text = this._content;\r\n            var isLineStart = true;\r\n            for (var i = 0; i < text.length; i++) {\r\n                if (isLineStart) {\r\n                    lineOffsets.push(i);\r\n                    isLineStart = false;\r\n                }\r\n                var ch = text.charAt(i);\r\n                isLineStart = (ch === '\\r' || ch === '\\n');\r\n                if (ch === '\\r' && i + 1 < text.length && text.charAt(i + 1) === '\\n') {\r\n                    i++;\r\n                }\r\n            }\r\n            if (isLineStart && text.length > 0) {\r\n                lineOffsets.push(text.length);\r\n            }\r\n            this._lineOffsets = lineOffsets;\r\n        }\r\n        return this._lineOffsets;\r\n    };\r\n    FullTextDocument.prototype.positionAt = function (offset) {\r\n        offset = Math.max(Math.min(offset, this._content.length), 0);\r\n        var lineOffsets = this.getLineOffsets();\r\n        var low = 0, high = lineOffsets.length;\r\n        if (high === 0) {\r\n            return Position.create(0, offset);\r\n        }\r\n        while (low < high) {\r\n            var mid = Math.floor((low + high) / 2);\r\n            if (lineOffsets[mid] > offset) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        // low is the least x for which the line offset is larger than the current offset\r\n        // or array.length if no line offset is larger than the current offset\r\n        var line = low - 1;\r\n        return Position.create(line, offset - lineOffsets[line]);\r\n    };\r\n    FullTextDocument.prototype.offsetAt = function (position) {\r\n        var lineOffsets = this.getLineOffsets();\r\n        if (position.line >= lineOffsets.length) {\r\n            return this._content.length;\r\n        }\r\n        else if (position.line < 0) {\r\n            return 0;\r\n        }\r\n        var lineOffset = lineOffsets[position.line];\r\n        var nextLineOffset = (position.line + 1 < lineOffsets.length) ? lineOffsets[position.line + 1] : this._content.length;\r\n        return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n    };\r\n    Object.defineProperty(FullTextDocument.prototype, \"lineCount\", {\r\n        get: function () {\r\n            return this.getLineOffsets().length;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    return FullTextDocument;\r\n}());\r\nvar Is;\r\n(function (Is) {\r\n    var toString = Object.prototype.toString;\r\n    function defined(value) {\r\n        return typeof value !== 'undefined';\r\n    }\r\n    Is.defined = defined;\r\n    function undefined(value) {\r\n        return typeof value === 'undefined';\r\n    }\r\n    Is.undefined = undefined;\r\n    function boolean(value) {\r\n        return value === true || value === false;\r\n    }\r\n    Is.boolean = boolean;\r\n    function string(value) {\r\n        return toString.call(value) === '[object String]';\r\n    }\r\n    Is.string = string;\r\n    function number(value) {\r\n        return toString.call(value) === '[object Number]';\r\n    }\r\n    Is.number = number;\r\n    function func(value) {\r\n        return toString.call(value) === '[object Function]';\r\n    }\r\n    Is.func = func;\r\n    function objectLiteral(value) {\r\n        // Strictly speaking class instances pass this check as well. Since the LSP\r\n        // doesn't use classes we ignore this for now. If we do we need to add something\r\n        // like this: `Object.getPrototypeOf(Object.getPrototypeOf(x)) === null`\r\n        return value !== null && typeof value === 'object';\r\n    }\r\n    Is.objectLiteral = objectLiteral;\r\n    function typedArray(value, check) {\r\n        return Array.isArray(value) && value.every(check);\r\n    }\r\n    Is.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst Is = require(\"./utils/is\");\r\nexports.ConfigurationFeature = (Base) => {\r\n    return class extends Base {\r\n        getConfiguration(arg) {\r\n            if (!arg) {\r\n                return this._getConfiguration({});\r\n            }\r\n            else if (Is.string(arg)) {\r\n                return this._getConfiguration({ section: arg });\r\n            }\r\n            else {\r\n                return this._getConfiguration(arg);\r\n            }\r\n        }\r\n        _getConfiguration(arg) {\r\n            let params = {\r\n                items: Array.isArray(arg) ? arg : [arg]\r\n            };\r\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.ConfigurationRequest.type, params).then((result) => {\r\n                return Array.isArray(arg) ? result : result[0];\r\n            });\r\n        }\r\n    };\r\n};\r\n//# sourceMappingURL=configuration.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst url = require(\"url\");\r\nconst path = require(\"path\");\r\nconst fs = require(\"fs\");\r\nconst child_process_1 = require(\"child_process\");\r\n/**\r\n * @deprecated Use the `vscode-uri` npm module which provides a more\r\n * complete implementation of handling VS Code URIs.\r\n */\r\nfunction uriToFilePath(uri) {\r\n    let parsed = url.parse(uri);\r\n    if (parsed.protocol !== 'file:' || !parsed.path) {\r\n        return undefined;\r\n    }\r\n    let segments = parsed.path.split('/');\r\n    for (var i = 0, len = segments.length; i < len; i++) {\r\n        segments[i] = decodeURIComponent(segments[i]);\r\n    }\r\n    if (process.platform === 'win32' && segments.length > 1) {\r\n        let first = segments[0];\r\n        let second = segments[1];\r\n        // Do we have a drive letter and we started with a / which is the\r\n        // case if the first segement is empty (see split above)\r\n        if (first.length === 0 && second.length > 1 && second[1] === ':') {\r\n            // Remove first slash\r\n            segments.shift();\r\n        }\r\n    }\r\n    return path.normalize(segments.join('/'));\r\n}\r\nexports.uriToFilePath = uriToFilePath;\r\nfunction isWindows() {\r\n    return process.platform === 'win32';\r\n}\r\nfunction resolve(moduleName, nodePath, cwd, tracer) {\r\n    const nodePathKey = 'NODE_PATH';\r\n    const app = [\r\n        'var p = process;',\r\n        'p.on(\\'message\\',function(m){',\r\n        'if(m.c===\\'e\\'){',\r\n        'p.exit(0);',\r\n        '}',\r\n        'else if(m.c===\\'rs\\'){',\r\n        'try{',\r\n        'var r=require.resolve(m.a);',\r\n        'p.send({c:\\'r\\',s:true,r:r});',\r\n        '}',\r\n        'catch(err){',\r\n        'p.send({c:\\'r\\',s:false});',\r\n        '}',\r\n        '}',\r\n        '});'\r\n    ].join('');\r\n    return new Promise((resolve, reject) => {\r\n        let env = process.env;\r\n        let newEnv = Object.create(null);\r\n        Object.keys(env).forEach(key => newEnv[key] = env[key]);\r\n        if (nodePath && fs.existsSync(nodePath) /* see issue 545 */) {\r\n            if (newEnv[nodePathKey]) {\r\n                newEnv[nodePathKey] = nodePath + path.delimiter + newEnv[nodePathKey];\r\n            }\r\n            else {\r\n                newEnv[nodePathKey] = nodePath;\r\n            }\r\n            if (tracer) {\r\n                tracer(`NODE_PATH value is: ${newEnv[nodePathKey]}`);\r\n            }\r\n        }\r\n        newEnv['ELECTRON_RUN_AS_NODE'] = '1';\r\n        try {\r\n            let cp = child_process_1.fork('', [], {\r\n                cwd: cwd,\r\n                env: newEnv,\r\n                execArgv: ['-e', app]\r\n            });\r\n            if (cp.pid === void 0) {\r\n                reject(new Error(`Starting process to resolve node module  ${moduleName} failed`));\r\n                return;\r\n            }\r\n            cp.on('error', (error) => {\r\n                reject(error);\r\n            });\r\n            cp.on('message', (message) => {\r\n                if (message.c === 'r') {\r\n                    cp.send({ c: 'e' });\r\n                    if (message.s) {\r\n                        resolve(message.r);\r\n                    }\r\n                    else {\r\n                        reject(new Error(`Failed to resolve module: ${moduleName}`));\r\n                    }\r\n                }\r\n            });\r\n            let message = {\r\n                c: 'rs',\r\n                a: moduleName\r\n            };\r\n            cp.send(message);\r\n        }\r\n        catch (error) {\r\n            reject(error);\r\n        }\r\n    });\r\n}\r\nexports.resolve = resolve;\r\n/**\r\n * Resolve the global npm package path.\r\n * @deprecated Since this depends on the used package manager and their version the best is that servers\r\n * implement this themselves since they know best what kind of package managers to support.\r\n * @param tracer the tracer to use\r\n */\r\nfunction resolveGlobalNodePath(tracer) {\r\n    let npmCommand = 'npm';\r\n    let options = {\r\n        encoding: 'utf8'\r\n    };\r\n    if (isWindows()) {\r\n        npmCommand = 'npm.cmd';\r\n        options.shell = true;\r\n    }\r\n    let handler = () => { };\r\n    try {\r\n        process.on('SIGPIPE', handler);\r\n        let stdout = child_process_1.spawnSync(npmCommand, ['config', 'get', 'prefix'], options).stdout;\r\n        if (!stdout) {\r\n            if (tracer) {\r\n                tracer(`'npm config get prefix' didn't return a value.`);\r\n            }\r\n            return undefined;\r\n        }\r\n        let prefix = stdout.trim();\r\n        if (tracer) {\r\n            tracer(`'npm config get prefix' value is: ${prefix}`);\r\n        }\r\n        if (prefix.length > 0) {\r\n            if (isWindows()) {\r\n                return path.join(prefix, 'node_modules');\r\n            }\r\n            else {\r\n                return path.join(prefix, 'lib', 'node_modules');\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n    finally {\r\n        process.removeListener('SIGPIPE', handler);\r\n    }\r\n}\r\nexports.resolveGlobalNodePath = resolveGlobalNodePath;\r\n/*\r\n * Resolve the global yarn pakage path.\r\n * @deprecated Since this depends on the used package manager and their version the best is that servers\r\n * implement this themselves since they know best what kind of package managers to support.\r\n * @param tracer the tracer to use\r\n */\r\nfunction resolveGlobalYarnPath(tracer) {\r\n    let yarnCommand = 'yarn';\r\n    let options = {\r\n        encoding: 'utf8'\r\n    };\r\n    if (isWindows()) {\r\n        yarnCommand = 'yarn.cmd';\r\n        options.shell = true;\r\n    }\r\n    let handler = () => { };\r\n    try {\r\n        process.on('SIGPIPE', handler);\r\n        let results = child_process_1.spawnSync(yarnCommand, ['global', 'dir', '--json'], options);\r\n        let stdout = results.stdout;\r\n        if (!stdout) {\r\n            if (tracer) {\r\n                tracer(`'yarn global dir' didn't return a value.`);\r\n                if (results.stderr) {\r\n                    tracer(results.stderr);\r\n                }\r\n            }\r\n            return undefined;\r\n        }\r\n        let lines = stdout.trim().split(/\\r?\\n/);\r\n        for (let line of lines) {\r\n            try {\r\n                let yarn = JSON.parse(line);\r\n                if (yarn.type === 'log') {\r\n                    return path.join(yarn.data, 'node_modules');\r\n                }\r\n            }\r\n            catch (e) {\r\n                // Do nothing. Ignore the line\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n    catch (err) {\r\n        return undefined;\r\n    }\r\n    finally {\r\n        process.removeListener('SIGPIPE', handler);\r\n    }\r\n}\r\nexports.resolveGlobalYarnPath = resolveGlobalYarnPath;\r\nvar FileSystem;\r\n(function (FileSystem) {\r\n    let _isCaseSensitive = undefined;\r\n    function isCaseSensitive() {\r\n        if (_isCaseSensitive !== void 0) {\r\n            return _isCaseSensitive;\r\n        }\r\n        if (process.platform === 'win32') {\r\n            _isCaseSensitive = false;\r\n        }\r\n        else {\r\n            // convert current file name to upper case / lower case and check if file exists\r\n            // (guards against cases when name is already all uppercase or lowercase)\r\n            _isCaseSensitive = !fs.existsSync(__filename.toUpperCase()) || !fs.existsSync(__filename.toLowerCase());\r\n        }\r\n        return _isCaseSensitive;\r\n    }\r\n    FileSystem.isCaseSensitive = isCaseSensitive;\r\n    function isParent(parent, child) {\r\n        if (isCaseSensitive()) {\r\n            return path.normalize(child).indexOf(path.normalize(parent)) === 0;\r\n        }\r\n        else {\r\n            return path.normalize(child).toLowerCase().indexOf(path.normalize(parent).toLowerCase()) === 0;\r\n        }\r\n    }\r\n    FileSystem.isParent = isParent;\r\n})(FileSystem = exports.FileSystem || (exports.FileSystem = {}));\r\nfunction resolveModulePath(workspaceRoot, moduleName, nodePath, tracer) {\r\n    if (nodePath) {\r\n        if (!path.isAbsolute(nodePath)) {\r\n            nodePath = path.join(workspaceRoot, nodePath);\r\n        }\r\n        return resolve(moduleName, nodePath, nodePath, tracer).then((value) => {\r\n            if (FileSystem.isParent(nodePath, value)) {\r\n                return value;\r\n            }\r\n            else {\r\n                return Promise.reject(new Error(`Failed to load ${moduleName} from node path location.`));\r\n            }\r\n        }).then(undefined, (_error) => {\r\n            return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\r\n        });\r\n    }\r\n    else {\r\n        return resolve(moduleName, resolveGlobalNodePath(tracer), workspaceRoot, tracer);\r\n    }\r\n}\r\nexports.resolveModulePath = resolveModulePath;\r\n//# sourceMappingURL=files.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n/// <reference path=\"../typings/thenable.d.ts\" />\r\n'use strict';\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.Event = vscode_languageserver_protocol_1.Event;\r\nconst configuration_1 = require(\"./configuration\");\r\nconst workspaceFolders_1 = require(\"./workspaceFolders\");\r\nconst Is = require(\"./utils/is\");\r\nconst UUID = require(\"./utils/uuid\");\r\n// ------------- Reexport the API surface of the language worker API ----------------------\r\n__export(require(\"vscode-languageserver-protocol\"));\r\nconst fm = require(\"./files\");\r\nvar Files;\r\n(function (Files) {\r\n    Files.uriToFilePath = fm.uriToFilePath;\r\n    Files.resolveGlobalNodePath = fm.resolveGlobalNodePath;\r\n    Files.resolveGlobalYarnPath = fm.resolveGlobalYarnPath;\r\n    Files.resolve = fm.resolve;\r\n    Files.resolveModulePath = fm.resolveModulePath;\r\n})(Files = exports.Files || (exports.Files = {}));\r\nlet shutdownReceived = false;\r\nlet exitTimer = undefined;\r\nfunction setupExitTimer() {\r\n    const argName = '--clientProcessId';\r\n    function runTimer(value) {\r\n        try {\r\n            let processId = parseInt(value);\r\n            if (!isNaN(processId)) {\r\n                exitTimer = setInterval(() => {\r\n                    try {\r\n                        process.kill(processId, 0);\r\n                    }\r\n                    catch (ex) {\r\n                        // Parent process doesn't exist anymore. Exit the server.\r\n                        process.exit(shutdownReceived ? 0 : 1);\r\n                    }\r\n                }, 3000);\r\n            }\r\n        }\r\n        catch (e) {\r\n            // Ignore errors;\r\n        }\r\n    }\r\n    for (let i = 2; i < process.argv.length; i++) {\r\n        let arg = process.argv[i];\r\n        if (arg === argName && i + 1 < process.argv.length) {\r\n            runTimer(process.argv[i + 1]);\r\n            return;\r\n        }\r\n        else {\r\n            let args = arg.split('=');\r\n            if (args[0] === argName) {\r\n                runTimer(args[1]);\r\n            }\r\n        }\r\n    }\r\n}\r\nsetupExitTimer();\r\nfunction null2Undefined(value) {\r\n    if (value === null) {\r\n        return void 0;\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * A manager for simple text documents\r\n */\r\nclass TextDocuments {\r\n    /**\r\n     * Create a new text document manager.\r\n     */\r\n    constructor(configuration) {\r\n        this._documents = Object.create(null);\r\n        this._configuration = configuration;\r\n        this._onDidChangeContent = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidOpen = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidClose = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onDidSave = new vscode_languageserver_protocol_1.Emitter();\r\n        this._onWillSave = new vscode_languageserver_protocol_1.Emitter();\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been opened or the content changes.\r\n     */\r\n    get onDidChangeContent() {\r\n        return this._onDidChangeContent.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been opened.\r\n     */\r\n    get onDidOpen() {\r\n        return this._onDidOpen.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * will be saved.\r\n     */\r\n    get onWillSave() {\r\n        return this._onWillSave.event;\r\n    }\r\n    /**\r\n     * Sets a handler that will be called if a participant wants to provide\r\n     * edits during a text document save.\r\n     */\r\n    onWillSaveWaitUntil(handler) {\r\n        this._willSaveWaitUntil = handler;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been saved.\r\n     */\r\n    get onDidSave() {\r\n        return this._onDidSave.event;\r\n    }\r\n    /**\r\n     * An event that fires when a text document managed by this manager\r\n     * has been closed.\r\n     */\r\n    get onDidClose() {\r\n        return this._onDidClose.event;\r\n    }\r\n    /**\r\n     * Returns the document for the given URI. Returns undefined if\r\n     * the document is not mananged by this instance.\r\n     *\r\n     * @param uri The text document's URI to retrieve.\r\n     * @return the text document or `undefined`.\r\n     */\r\n    get(uri) {\r\n        return this._documents[uri];\r\n    }\r\n    /**\r\n     * Returns all text documents managed by this instance.\r\n     *\r\n     * @return all text documents.\r\n     */\r\n    all() {\r\n        return Object.keys(this._documents).map(key => this._documents[key]);\r\n    }\r\n    /**\r\n     * Returns the URIs of all text documents managed by this instance.\r\n     *\r\n     * @return the URI's of all text documents.\r\n     */\r\n    keys() {\r\n        return Object.keys(this._documents);\r\n    }\r\n    /**\r\n     * Listens for `low level` notification on the given connection to\r\n     * update the text documents managed by this instance.\r\n     *\r\n     * @param connection The connection to listen on.\r\n     */\r\n    listen(connection) {\r\n        connection.__textDocumentSync = vscode_languageserver_protocol_1.TextDocumentSyncKind.Full;\r\n        connection.onDidOpenTextDocument((event) => {\r\n            let td = event.textDocument;\r\n            let document = this._configuration.create(td.uri, td.languageId, td.version, td.text);\r\n            this._documents[td.uri] = document;\r\n            let toFire = Object.freeze({ document });\r\n            this._onDidOpen.fire(toFire);\r\n            this._onDidChangeContent.fire(toFire);\r\n        });\r\n        connection.onDidChangeTextDocument((event) => {\r\n            let td = event.textDocument;\r\n            let changes = event.contentChanges;\r\n            if (changes.length === 0) {\r\n                return;\r\n            }\r\n            let document = this._documents[td.uri];\r\n            const { version } = td;\r\n            if (version === null || version === void 0) {\r\n                throw new Error(`Received document change event for ${td.uri} without valid version identifier`);\r\n            }\r\n            document = this._configuration.update(document, changes, version);\r\n            this._documents[td.uri] = document;\r\n            this._onDidChangeContent.fire(Object.freeze({ document }));\r\n        });\r\n        connection.onDidCloseTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                delete this._documents[event.textDocument.uri];\r\n                this._onDidClose.fire(Object.freeze({ document }));\r\n            }\r\n        });\r\n        connection.onWillSaveTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                this._onWillSave.fire(Object.freeze({ document, reason: event.reason }));\r\n            }\r\n        });\r\n        connection.onWillSaveTextDocumentWaitUntil((event, token) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document && this._willSaveWaitUntil) {\r\n                return this._willSaveWaitUntil(Object.freeze({ document, reason: event.reason }), token);\r\n            }\r\n            else {\r\n                return [];\r\n            }\r\n        });\r\n        connection.onDidSaveTextDocument((event) => {\r\n            let document = this._documents[event.textDocument.uri];\r\n            if (document) {\r\n                this._onDidSave.fire(Object.freeze({ document }));\r\n            }\r\n        });\r\n    }\r\n}\r\nexports.TextDocuments = TextDocuments;\r\n/**\r\n * Helps tracking error message. Equal occurences of the same\r\n * message are only stored once. This class is for example\r\n * useful if text documents are validated in a loop and equal\r\n * error message should be folded into one.\r\n */\r\nclass ErrorMessageTracker {\r\n    constructor() {\r\n        this._messages = Object.create(null);\r\n    }\r\n    /**\r\n     * Add a message to the tracker.\r\n     *\r\n     * @param message The message to add.\r\n     */\r\n    add(message) {\r\n        let count = this._messages[message];\r\n        if (!count) {\r\n            count = 0;\r\n        }\r\n        count++;\r\n        this._messages[message] = count;\r\n    }\r\n    /**\r\n     * Send all tracked messages to the connection's window.\r\n     *\r\n     * @param connection The connection established between client and server.\r\n     */\r\n    sendErrors(connection) {\r\n        Object.keys(this._messages).forEach(message => {\r\n            connection.window.showErrorMessage(message);\r\n        });\r\n    }\r\n}\r\nexports.ErrorMessageTracker = ErrorMessageTracker;\r\nvar BulkRegistration;\r\n(function (BulkRegistration) {\r\n    /**\r\n     * Creates a new bulk registration.\r\n     * @return an empty bulk registration.\r\n     */\r\n    function create() {\r\n        return new BulkRegistrationImpl();\r\n    }\r\n    BulkRegistration.create = create;\r\n})(BulkRegistration = exports.BulkRegistration || (exports.BulkRegistration = {}));\r\nclass BulkRegistrationImpl {\r\n    constructor() {\r\n        this._registrations = [];\r\n        this._registered = new Set();\r\n    }\r\n    add(type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        if (this._registered.has(method)) {\r\n            throw new Error(`${method} is already added to this registration`);\r\n        }\r\n        const id = UUID.generateUuid();\r\n        this._registrations.push({\r\n            id: id,\r\n            method: method,\r\n            registerOptions: registerOptions || {}\r\n        });\r\n        this._registered.add(method);\r\n    }\r\n    asRegistrationParams() {\r\n        return {\r\n            registrations: this._registrations\r\n        };\r\n    }\r\n}\r\nvar BulkUnregistration;\r\n(function (BulkUnregistration) {\r\n    function create() {\r\n        return new BulkUnregistrationImpl(undefined, []);\r\n    }\r\n    BulkUnregistration.create = create;\r\n})(BulkUnregistration = exports.BulkUnregistration || (exports.BulkUnregistration = {}));\r\nclass BulkUnregistrationImpl {\r\n    constructor(_connection, unregistrations) {\r\n        this._connection = _connection;\r\n        this._unregistrations = new Map();\r\n        unregistrations.forEach(unregistration => {\r\n            this._unregistrations.set(unregistration.method, unregistration);\r\n        });\r\n    }\r\n    get isAttached() {\r\n        return !!this._connection;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    add(unregistration) {\r\n        this._unregistrations.set(unregistration.method, unregistration);\r\n    }\r\n    dispose() {\r\n        let unregistrations = [];\r\n        for (let unregistration of this._unregistrations.values()) {\r\n            unregistrations.push(unregistration);\r\n        }\r\n        let params = {\r\n            unregisterations: unregistrations\r\n        };\r\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\r\n            this._connection.console.info(`Bulk unregistration failed.`);\r\n        });\r\n    }\r\n    disposeSingle(arg) {\r\n        const method = Is.string(arg) ? arg : arg.method;\r\n        const unregistration = this._unregistrations.get(method);\r\n        if (!unregistration) {\r\n            return false;\r\n        }\r\n        let params = {\r\n            unregisterations: [unregistration]\r\n        };\r\n        this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(() => {\r\n            this._unregistrations.delete(method);\r\n        }, (_error) => {\r\n            this._connection.console.info(`Unregistering request handler for ${unregistration.id} failed.`);\r\n        });\r\n        return true;\r\n    }\r\n}\r\nclass ConnectionLogger {\r\n    constructor() {\r\n    }\r\n    rawAttach(connection) {\r\n        this._rawConnection = connection;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    error(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Error, message);\r\n    }\r\n    warn(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Warning, message);\r\n    }\r\n    info(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Info, message);\r\n    }\r\n    log(message) {\r\n        this.send(vscode_languageserver_protocol_1.MessageType.Log, message);\r\n    }\r\n    send(type, message) {\r\n        if (this._rawConnection) {\r\n            this._rawConnection.sendNotification(vscode_languageserver_protocol_1.LogMessageNotification.type, { type, message });\r\n        }\r\n    }\r\n}\r\nclass RemoteWindowImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    showErrorMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Error, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n    showWarningMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Warning, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n    showInformationMessage(message, ...actions) {\r\n        let params = { type: vscode_languageserver_protocol_1.MessageType.Info, message, actions };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ShowMessageRequest.type, params).then(null2Undefined);\r\n    }\r\n}\r\nclass RemoteClientImpl {\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    register(typeOrRegistrations, registerOptionsOrType, registerOptions) {\r\n        if (typeOrRegistrations instanceof BulkRegistrationImpl) {\r\n            return this.registerMany(typeOrRegistrations);\r\n        }\r\n        else if (typeOrRegistrations instanceof BulkUnregistrationImpl) {\r\n            return this.registerSingle1(typeOrRegistrations, registerOptionsOrType, registerOptions);\r\n        }\r\n        else {\r\n            return this.registerSingle2(typeOrRegistrations, registerOptionsOrType);\r\n        }\r\n    }\r\n    registerSingle1(unregistration, type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        const id = UUID.generateUuid();\r\n        let params = {\r\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\r\n        };\r\n        if (!unregistration.isAttached) {\r\n            unregistration.attach(this._connection);\r\n        }\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\r\n            unregistration.add({ id: id, method: method });\r\n            return unregistration;\r\n        }, (_error) => {\r\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n    registerSingle2(type, registerOptions) {\r\n        const method = Is.string(type) ? type : type.method;\r\n        const id = UUID.generateUuid();\r\n        let params = {\r\n            registrations: [{ id, method, registerOptions: registerOptions || {} }]\r\n        };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then((_result) => {\r\n            return vscode_languageserver_protocol_1.Disposable.create(() => {\r\n                this.unregisterSingle(id, method);\r\n            });\r\n        }, (_error) => {\r\n            this.connection.console.info(`Registering request handler for ${method} failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n    unregisterSingle(id, method) {\r\n        let params = {\r\n            unregisterations: [{ id, method }]\r\n        };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.UnregistrationRequest.type, params).then(undefined, (_error) => {\r\n            this.connection.console.info(`Unregistering request handler for ${id} failed.`);\r\n        });\r\n    }\r\n    registerMany(registrations) {\r\n        let params = registrations.asRegistrationParams();\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.RegistrationRequest.type, params).then(() => {\r\n            return new BulkUnregistrationImpl(this._connection, params.registrations.map(registration => { return { id: registration.id, method: registration.method }; }));\r\n        }, (_error) => {\r\n            this.connection.console.info(`Bulk registration failed.`);\r\n            return Promise.reject(_error);\r\n        });\r\n    }\r\n}\r\nclass _RemoteWorkspaceImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    applyEdit(paramOrEdit) {\r\n        function isApplyWorkspaceEditParams(value) {\r\n            return value && !!value.edit;\r\n        }\r\n        let params = isApplyWorkspaceEditParams(paramOrEdit) ? paramOrEdit : { edit: paramOrEdit };\r\n        return this._connection.sendRequest(vscode_languageserver_protocol_1.ApplyWorkspaceEditRequest.type, params);\r\n    }\r\n}\r\nconst RemoteWorkspaceImpl = workspaceFolders_1.WorkspaceFoldersFeature(configuration_1.ConfigurationFeature(_RemoteWorkspaceImpl));\r\nclass TracerImpl {\r\n    constructor() {\r\n        this._trace = vscode_languageserver_protocol_1.Trace.Off;\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    set trace(value) {\r\n        this._trace = value;\r\n    }\r\n    log(message, verbose) {\r\n        if (this._trace === vscode_languageserver_protocol_1.Trace.Off) {\r\n            return;\r\n        }\r\n        this._connection.sendNotification(vscode_languageserver_protocol_1.LogTraceNotification.type, {\r\n            message: message,\r\n            verbose: this._trace === vscode_languageserver_protocol_1.Trace.Verbose ? verbose : undefined\r\n        });\r\n    }\r\n}\r\nclass TelemetryImpl {\r\n    constructor() {\r\n    }\r\n    attach(connection) {\r\n        this._connection = connection;\r\n    }\r\n    get connection() {\r\n        if (!this._connection) {\r\n            throw new Error('Remote is not attached to a connection yet.');\r\n        }\r\n        return this._connection;\r\n    }\r\n    initialize(_capabilities) {\r\n    }\r\n    fillServerCapabilities(_capabilities) {\r\n    }\r\n    logEvent(data) {\r\n        this._connection.sendNotification(vscode_languageserver_protocol_1.TelemetryEventNotification.type, data);\r\n    }\r\n}\r\nfunction combineConsoleFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineConsoleFeatures = combineConsoleFeatures;\r\nfunction combineTelemetryFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineTelemetryFeatures = combineTelemetryFeatures;\r\nfunction combineTracerFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineTracerFeatures = combineTracerFeatures;\r\nfunction combineClientFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineClientFeatures = combineClientFeatures;\r\nfunction combineWindowFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineWindowFeatures = combineWindowFeatures;\r\nfunction combineWorkspaceFeatures(one, two) {\r\n    return function (Base) {\r\n        return two(one(Base));\r\n    };\r\n}\r\nexports.combineWorkspaceFeatures = combineWorkspaceFeatures;\r\nfunction combineFeatures(one, two) {\r\n    function combine(one, two, func) {\r\n        if (one && two) {\r\n            return func(one, two);\r\n        }\r\n        else if (one) {\r\n            return one;\r\n        }\r\n        else {\r\n            return two;\r\n        }\r\n    }\r\n    let result = {\r\n        __brand: 'features',\r\n        console: combine(one.console, two.console, combineConsoleFeatures),\r\n        tracer: combine(one.tracer, two.tracer, combineTracerFeatures),\r\n        telemetry: combine(one.telemetry, two.telemetry, combineTelemetryFeatures),\r\n        client: combine(one.client, two.client, combineClientFeatures),\r\n        window: combine(one.window, two.window, combineWindowFeatures),\r\n        workspace: combine(one.workspace, two.workspace, combineWorkspaceFeatures)\r\n    };\r\n    return result;\r\n}\r\nexports.combineFeatures = combineFeatures;\r\nfunction createConnection(arg1, arg2, arg3, arg4) {\r\n    let factories;\r\n    let input;\r\n    let output;\r\n    let strategy;\r\n    if (arg1 !== void 0 && arg1.__brand === 'features') {\r\n        factories = arg1;\r\n        arg1 = arg2;\r\n        arg2 = arg3;\r\n        arg3 = arg4;\r\n    }\r\n    if (vscode_languageserver_protocol_1.ConnectionStrategy.is(arg1)) {\r\n        strategy = arg1;\r\n    }\r\n    else {\r\n        input = arg1;\r\n        output = arg2;\r\n        strategy = arg3;\r\n    }\r\n    return _createConnection(input, output, strategy, factories);\r\n}\r\nexports.createConnection = createConnection;\r\nfunction _createConnection(input, output, strategy, factories) {\r\n    if (!input && !output && process.argv.length > 2) {\r\n        let port = void 0;\r\n        let pipeName = void 0;\r\n        let argv = process.argv.slice(2);\r\n        for (let i = 0; i < argv.length; i++) {\r\n            let arg = argv[i];\r\n            if (arg === '--node-ipc') {\r\n                input = new vscode_languageserver_protocol_1.IPCMessageReader(process);\r\n                output = new vscode_languageserver_protocol_1.IPCMessageWriter(process);\r\n                break;\r\n            }\r\n            else if (arg === '--stdio') {\r\n                input = process.stdin;\r\n                output = process.stdout;\r\n                break;\r\n            }\r\n            else if (arg === '--socket') {\r\n                port = parseInt(argv[i + 1]);\r\n                break;\r\n            }\r\n            else if (arg === '--pipe') {\r\n                pipeName = argv[i + 1];\r\n                break;\r\n            }\r\n            else {\r\n                var args = arg.split('=');\r\n                if (args[0] === '--socket') {\r\n                    port = parseInt(args[1]);\r\n                    break;\r\n                }\r\n                else if (args[0] === '--pipe') {\r\n                    pipeName = args[1];\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (port) {\r\n            let transport = vscode_languageserver_protocol_1.createServerSocketTransport(port);\r\n            input = transport[0];\r\n            output = transport[1];\r\n        }\r\n        else if (pipeName) {\r\n            let transport = vscode_languageserver_protocol_1.createServerPipeTransport(pipeName);\r\n            input = transport[0];\r\n            output = transport[1];\r\n        }\r\n    }\r\n    var commandLineMessage = 'Use arguments of createConnection or set command line parameters: \\'--node-ipc\\', \\'--stdio\\' or \\'--socket={number}\\'';\r\n    if (!input) {\r\n        throw new Error('Connection input stream is not set. ' + commandLineMessage);\r\n    }\r\n    if (!output) {\r\n        throw new Error('Connection output stream is not set. ' + commandLineMessage);\r\n    }\r\n    // Backwards compatibility\r\n    if (Is.func(input.read) && Is.func(input.on)) {\r\n        let inputStream = input;\r\n        inputStream.on('end', () => {\r\n            process.exit(shutdownReceived ? 0 : 1);\r\n        });\r\n        inputStream.on('close', () => {\r\n            process.exit(shutdownReceived ? 0 : 1);\r\n        });\r\n    }\r\n    const logger = (factories && factories.console ? new (factories.console(ConnectionLogger))() : new ConnectionLogger());\r\n    const connection = vscode_languageserver_protocol_1.createProtocolConnection(input, output, logger, strategy);\r\n    logger.rawAttach(connection);\r\n    const tracer = (factories && factories.tracer ? new (factories.tracer(TracerImpl))() : new TracerImpl());\r\n    const telemetry = (factories && factories.telemetry ? new (factories.telemetry(TelemetryImpl))() : new TelemetryImpl());\r\n    const client = (factories && factories.client ? new (factories.client(RemoteClientImpl))() : new RemoteClientImpl());\r\n    const remoteWindow = (factories && factories.window ? new (factories.window(RemoteWindowImpl))() : new RemoteWindowImpl());\r\n    const workspace = (factories && factories.workspace ? new (factories.workspace(RemoteWorkspaceImpl))() : new RemoteWorkspaceImpl());\r\n    const allRemotes = [logger, tracer, telemetry, client, remoteWindow, workspace];\r\n    function asPromise(value) {\r\n        if (value instanceof Promise) {\r\n            return value;\r\n        }\r\n        else if (Is.thenable(value)) {\r\n            return new Promise((resolve, reject) => {\r\n                value.then((resolved) => resolve(resolved), (error) => reject(error));\r\n            });\r\n        }\r\n        else {\r\n            return Promise.resolve(value);\r\n        }\r\n    }\r\n    let shutdownHandler = undefined;\r\n    let initializeHandler = undefined;\r\n    let exitHandler = undefined;\r\n    let protocolConnection = {\r\n        listen: () => connection.listen(),\r\n        sendRequest: (type, ...params) => connection.sendRequest(Is.string(type) ? type : type.method, ...params),\r\n        onRequest: (type, handler) => connection.onRequest(type, handler),\r\n        sendNotification: (type, param) => {\r\n            const method = Is.string(type) ? type : type.method;\r\n            if (arguments.length === 1) {\r\n                connection.sendNotification(method);\r\n            }\r\n            else {\r\n                connection.sendNotification(method, param);\r\n            }\r\n        },\r\n        onNotification: (type, handler) => connection.onNotification(type, handler),\r\n        onProgress: connection.onProgress,\r\n        sendProgress: connection.sendProgress,\r\n        onInitialize: (handler) => initializeHandler = handler,\r\n        onInitialized: (handler) => connection.onNotification(vscode_languageserver_protocol_1.InitializedNotification.type, handler),\r\n        onShutdown: (handler) => shutdownHandler = handler,\r\n        onExit: (handler) => exitHandler = handler,\r\n        get console() { return logger; },\r\n        get telemetry() { return telemetry; },\r\n        get tracer() { return tracer; },\r\n        get client() { return client; },\r\n        get window() { return remoteWindow; },\r\n        get workspace() { return workspace; },\r\n        onDidChangeConfiguration: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeConfigurationNotification.type, handler),\r\n        onDidChangeWatchedFiles: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeWatchedFilesNotification.type, handler),\r\n        __textDocumentSync: undefined,\r\n        onDidOpenTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidOpenTextDocumentNotification.type, handler),\r\n        onDidChangeTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidChangeTextDocumentNotification.type, handler),\r\n        onDidCloseTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidCloseTextDocumentNotification.type, handler),\r\n        onWillSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.WillSaveTextDocumentNotification.type, handler),\r\n        onWillSaveTextDocumentWaitUntil: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WillSaveTextDocumentWaitUntilRequest.type, handler),\r\n        onDidSaveTextDocument: (handler) => connection.onNotification(vscode_languageserver_protocol_1.DidSaveTextDocumentNotification.type, handler),\r\n        sendDiagnostics: (params) => connection.sendNotification(vscode_languageserver_protocol_1.PublishDiagnosticsNotification.type, params),\r\n        onHover: (handler) => connection.onRequest(vscode_languageserver_protocol_1.HoverRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onCompletion: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCompletionResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CompletionResolveRequest.type, handler),\r\n        onSignatureHelp: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SignatureHelpRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onDeclaration: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DeclarationRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DefinitionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onTypeDefinition: (handler) => connection.onRequest(vscode_languageserver_protocol_1.TypeDefinitionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onImplementation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ImplementationRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onReferences: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ReferencesRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDocumentHighlight: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentHighlightRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDocumentSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentSymbolRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onWorkspaceSymbol: (handler) => connection.onRequest(vscode_languageserver_protocol_1.WorkspaceSymbolRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCodeAction: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeActionRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCodeLens: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onCodeLensResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.CodeLensResolveRequest.type, handler),\r\n        onDocumentFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentFormattingRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onDocumentRangeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentRangeFormattingRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onDocumentOnTypeFormatting: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentOnTypeFormattingRequest.type, handler),\r\n        onRenameRequest: (handler) => connection.onRequest(vscode_languageserver_protocol_1.RenameRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onPrepareRename: (handler) => connection.onRequest(vscode_languageserver_protocol_1.PrepareRenameRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        onDocumentLinks: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onDocumentLinkResolve: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentLinkResolveRequest.type, handler),\r\n        onDocumentColor: (handler) => connection.onRequest(vscode_languageserver_protocol_1.DocumentColorRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onColorPresentation: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ColorPresentationRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onFoldingRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.FoldingRangeRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onSelectionRanges: (handler) => connection.onRequest(vscode_languageserver_protocol_1.SelectionRangeRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), proposed_progress_1.attachPartialResult(connection, params));\r\n        }),\r\n        onExecuteCommand: (handler) => connection.onRequest(vscode_languageserver_protocol_1.ExecuteCommandRequest.type, (params, cancel) => {\r\n            return handler(params, cancel, proposed_progress_1.attachWorkDone(connection, params), undefined);\r\n        }),\r\n        dispose: () => connection.dispose()\r\n    };\r\n    for (let remote of allRemotes) {\r\n        remote.attach(protocolConnection);\r\n    }\r\n    connection.onRequest(vscode_languageserver_protocol_1.InitializeRequest.type, (params) => {\r\n        const processId = params.processId;\r\n        if (Is.number(processId) && exitTimer === void 0) {\r\n            // We received a parent process id. Set up a timer to periodically check\r\n            // if the parent is still alive.\r\n            setInterval(() => {\r\n                try {\r\n                    process.kill(processId, 0);\r\n                }\r\n                catch (ex) {\r\n                    // Parent process doesn't exist anymore. Exit the server.\r\n                    process.exit(shutdownReceived ? 0 : 1);\r\n                }\r\n            }, 3000);\r\n        }\r\n        if (Is.string(params.trace)) {\r\n            tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.trace);\r\n        }\r\n        for (let remote of allRemotes) {\r\n            remote.initialize(params.capabilities);\r\n        }\r\n        if (initializeHandler) {\r\n            let result = initializeHandler(params, new vscode_languageserver_protocol_1.CancellationTokenSource().token, proposed_progress_1.attachWorkDone(connection, params), undefined);\r\n            return asPromise(result).then((value) => {\r\n                if (value instanceof vscode_languageserver_protocol_1.ResponseError) {\r\n                    return value;\r\n                }\r\n                let result = value;\r\n                if (!result) {\r\n                    result = { capabilities: {} };\r\n                }\r\n                let capabilities = result.capabilities;\r\n                if (!capabilities) {\r\n                    capabilities = {};\r\n                    result.capabilities = capabilities;\r\n                }\r\n                if (capabilities.textDocumentSync === void 0 || capabilities.textDocumentSync === null) {\r\n                    capabilities.textDocumentSync = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\r\n                }\r\n                else if (!Is.number(capabilities.textDocumentSync) && !Is.number(capabilities.textDocumentSync.change)) {\r\n                    capabilities.textDocumentSync.change = Is.number(protocolConnection.__textDocumentSync) ? protocolConnection.__textDocumentSync : vscode_languageserver_protocol_1.TextDocumentSyncKind.None;\r\n                }\r\n                for (let remote of allRemotes) {\r\n                    remote.fillServerCapabilities(capabilities);\r\n                }\r\n                return result;\r\n            });\r\n        }\r\n        else {\r\n            let result = { capabilities: { textDocumentSync: vscode_languageserver_protocol_1.TextDocumentSyncKind.None } };\r\n            for (let remote of allRemotes) {\r\n                remote.fillServerCapabilities(result.capabilities);\r\n            }\r\n            return result;\r\n        }\r\n    });\r\n    connection.onRequest(vscode_languageserver_protocol_1.ShutdownRequest.type, () => {\r\n        shutdownReceived = true;\r\n        if (shutdownHandler) {\r\n            return shutdownHandler(new vscode_languageserver_protocol_1.CancellationTokenSource().token);\r\n        }\r\n        else {\r\n            return undefined;\r\n        }\r\n    });\r\n    connection.onNotification(vscode_languageserver_protocol_1.ExitNotification.type, () => {\r\n        try {\r\n            if (exitHandler) {\r\n                exitHandler();\r\n            }\r\n        }\r\n        finally {\r\n            if (shutdownReceived) {\r\n                process.exit(0);\r\n            }\r\n            else {\r\n                process.exit(1);\r\n            }\r\n        }\r\n    });\r\n    connection.onNotification(vscode_languageserver_protocol_1.SetTraceNotification.type, (params) => {\r\n        tracer.trace = vscode_languageserver_protocol_1.Trace.fromString(params.value);\r\n    });\r\n    return protocolConnection;\r\n}\r\n// Export the protocol currently in proposed state.\r\nconst proposed_progress_1 = require(\"./proposed.progress\");\r\nvar ProposedFeatures;\r\n(function (ProposedFeatures) {\r\n    ProposedFeatures.all = {\r\n        __brand: 'features',\r\n        window: proposed_progress_1.ProgressFeature\r\n    };\r\n})(ProposedFeatures = exports.ProposedFeatures || (exports.ProposedFeatures = {}));\r\n//# sourceMappingURL=main.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nconst uuid_1 = require(\"./utils/uuid\");\r\nclass WorkDoneProgressImpl {\r\n    constructor(_connection, _token) {\r\n        this._connection = _connection;\r\n        this._token = _token;\r\n        WorkDoneProgressImpl.Instances.set(this._token, this);\r\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\r\n    }\r\n    get token() {\r\n        return this._source.token;\r\n    }\r\n    begin(title, percentage, message, cancellable) {\r\n        let param = {\r\n            kind: 'begin',\r\n            title,\r\n            percentage,\r\n            message,\r\n            cancellable\r\n        };\r\n        this._connection.sendProgress(vscode_languageserver_protocol_1.Proposed.WorkDoneProgress.type, this._token, param);\r\n    }\r\n    report(arg0, arg1) {\r\n        let param = {\r\n            kind: 'report'\r\n        };\r\n        if (typeof arg0 === 'number') {\r\n            param.percentage = arg0;\r\n            if (arg1 !== undefined) {\r\n                param.message = arg1;\r\n            }\r\n        }\r\n        else {\r\n            param.message = arg0;\r\n        }\r\n        this._connection.sendProgress(vscode_languageserver_protocol_1.Proposed.WorkDoneProgress.type, this._token, param);\r\n    }\r\n    done() {\r\n        WorkDoneProgressImpl.Instances.delete(this._token);\r\n        this._source.dispose();\r\n        this._connection.sendProgress(vscode_languageserver_protocol_1.Proposed.WorkDoneProgress.type, this._token, { kind: 'end' });\r\n    }\r\n    cancel() {\r\n        this._source.cancel();\r\n    }\r\n}\r\nWorkDoneProgressImpl.Instances = new Map();\r\nclass NullProgress {\r\n    constructor() {\r\n        this._source = new vscode_languageserver_protocol_1.CancellationTokenSource();\r\n    }\r\n    get token() {\r\n        return this._source.token;\r\n    }\r\n    begin() {\r\n    }\r\n    report() {\r\n    }\r\n    done() {\r\n    }\r\n}\r\nfunction attachWorkDone(connection, params) {\r\n    if (params === undefined || params.workDoneToken === undefined) {\r\n        return new NullProgress();\r\n    }\r\n    const token = params.workDoneToken;\r\n    delete params.workDoneToken;\r\n    return new WorkDoneProgressImpl(connection, token);\r\n}\r\nexports.attachWorkDone = attachWorkDone;\r\nexports.ProgressFeature = (Base) => {\r\n    return class extends Base {\r\n        initialize(cap) {\r\n            const capabilities = cap;\r\n            if (capabilities.window && capabilities.window.workDoneProgress) {\r\n                this._progressSupported = true;\r\n                this.connection.onNotification(vscode_languageserver_protocol_1.Proposed.WorkDoneProgressCancelNotification.type, (params) => {\r\n                    let progress = WorkDoneProgressImpl.Instances.get(params.token);\r\n                    if (progress !== undefined) {\r\n                        progress.cancel();\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        attachWorkDoneProgress(token) {\r\n            if (token === undefined) {\r\n                return new NullProgress();\r\n            }\r\n            else {\r\n                return new WorkDoneProgressImpl(this.connection, token);\r\n            }\r\n        }\r\n        createWorkDoneProgress() {\r\n            if (this._progressSupported) {\r\n                const token = uuid_1.generateUuid();\r\n                return this.connection.sendRequest(vscode_languageserver_protocol_1.Proposed.WorkDoneProgressCreateRequest.type, { token }).then(() => {\r\n                    const result = new WorkDoneProgressImpl(this.connection, token);\r\n                    return result;\r\n                });\r\n            }\r\n            else {\r\n                return Promise.resolve(new NullProgress());\r\n            }\r\n        }\r\n    };\r\n};\r\nvar ResultProgress;\r\n(function (ResultProgress) {\r\n    ResultProgress.type = new vscode_languageserver_protocol_1.ProgressType();\r\n})(ResultProgress || (ResultProgress = {}));\r\nclass ResultProgressImpl {\r\n    constructor(_connection, _token) {\r\n        this._connection = _connection;\r\n        this._token = _token;\r\n    }\r\n    report(data) {\r\n        this._connection.sendProgress(ResultProgress.type, this._token, data);\r\n    }\r\n}\r\nfunction attachPartialResult(connection, params) {\r\n    if (params === undefined || params.partialResultToken === undefined) {\r\n        return undefined;\r\n    }\r\n    const token = params.partialResultToken;\r\n    delete params.partialResultToken;\r\n    return new ResultProgressImpl(connection, token);\r\n}\r\nexports.attachPartialResult = attachPartialResult;\r\n//# sourceMappingURL=proposed.progress.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction boolean(value) {\r\n    return value === true || value === false;\r\n}\r\nexports.boolean = boolean;\r\nfunction string(value) {\r\n    return typeof value === 'string' || value instanceof String;\r\n}\r\nexports.string = string;\r\nfunction number(value) {\r\n    return typeof value === 'number' || value instanceof Number;\r\n}\r\nexports.number = number;\r\nfunction error(value) {\r\n    return value instanceof Error;\r\n}\r\nexports.error = error;\r\nfunction func(value) {\r\n    return typeof value === 'function';\r\n}\r\nexports.func = func;\r\nfunction array(value) {\r\n    return Array.isArray(value);\r\n}\r\nexports.array = array;\r\nfunction stringArray(value) {\r\n    return array(value) && value.every(elem => string(elem));\r\n}\r\nexports.stringArray = stringArray;\r\nfunction typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n}\r\nexports.typedArray = typedArray;\r\nfunction thenable(value) {\r\n    return value && func(value.then);\r\n}\r\nexports.thenable = thenable;\r\n//# sourceMappingURL=is.js.map","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass ValueUUID {\r\n    constructor(_value) {\r\n        this._value = _value;\r\n        // empty\r\n    }\r\n    asHex() {\r\n        return this._value;\r\n    }\r\n    equals(other) {\r\n        return this.asHex() === other.asHex();\r\n    }\r\n}\r\nclass V4UUID extends ValueUUID {\r\n    constructor() {\r\n        super([\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            '4',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._oneOf(V4UUID._timeHighBits),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            '-',\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n            V4UUID._randomHex(),\r\n        ].join(''));\r\n    }\r\n    static _oneOf(array) {\r\n        return array[Math.floor(array.length * Math.random())];\r\n    }\r\n    static _randomHex() {\r\n        return V4UUID._oneOf(V4UUID._chars);\r\n    }\r\n}\r\nV4UUID._chars = ['0', '1', '2', '3', '4', '5', '6', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\r\nV4UUID._timeHighBits = ['8', '9', 'a', 'b'];\r\n/**\r\n * An empty UUID that contains only zeros.\r\n */\r\nexports.empty = new ValueUUID('00000000-0000-0000-0000-000000000000');\r\nfunction v4() {\r\n    return new V4UUID();\r\n}\r\nexports.v4 = v4;\r\nconst _UUIDPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\r\nfunction isUUID(value) {\r\n    return _UUIDPattern.test(value);\r\n}\r\nexports.isUUID = isUUID;\r\n/**\r\n * Parses a UUID that is of the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx.\r\n * @param value A uuid string.\r\n */\r\nfunction parse(value) {\r\n    if (!isUUID(value)) {\r\n        throw new Error('invalid uuid');\r\n    }\r\n    return new ValueUUID(value);\r\n}\r\nexports.parse = parse;\r\nfunction generateUuid() {\r\n    return v4().asHex();\r\n}\r\nexports.generateUuid = generateUuid;\r\n//# sourceMappingURL=uuid.js.map","/* --------------------------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Licensed under the MIT License. See License.txt in the project root for license information.\r\n * ------------------------------------------------------------------------------------------ */\r\n'use strict';\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_protocol_1 = require(\"vscode-languageserver-protocol\");\r\nexports.WorkspaceFoldersFeature = (Base) => {\r\n    return class extends Base {\r\n        initialize(capabilities) {\r\n            let workspaceCapabilities = capabilities.workspace;\r\n            if (workspaceCapabilities && workspaceCapabilities.workspaceFolders) {\r\n                this._onDidChangeWorkspaceFolders = new vscode_languageserver_protocol_1.Emitter();\r\n                this.connection.onNotification(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type, (params) => {\r\n                    this._onDidChangeWorkspaceFolders.fire(params.event);\r\n                });\r\n            }\r\n        }\r\n        getWorkspaceFolders() {\r\n            return this.connection.sendRequest(vscode_languageserver_protocol_1.WorkspaceFoldersRequest.type);\r\n        }\r\n        get onDidChangeWorkspaceFolders() {\r\n            if (!this._onDidChangeWorkspaceFolders) {\r\n                throw new Error('Client doesn\\'t support sending workspace folder change events.');\r\n            }\r\n            if (!this._unregistration) {\r\n                this._unregistration = this.connection.client.register(vscode_languageserver_protocol_1.DidChangeWorkspaceFoldersNotification.type);\r\n            }\r\n            return this._onDidChangeWorkspaceFolders.event;\r\n        }\r\n    };\r\n};\r\n//# sourceMappingURL=workspaceFolders.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst powerquery_parser_1 = require(\"@microsoft/powerquery-parser\");\r\nfunction isTFormatError(x) {\r\n    return powerquery_parser_1.LexError.isTLexError(x) || powerquery_parser_1.ParseError.isTParseError(x);\r\n}\r\nexports.isTFormatError = isTFormatError;\r\n//# sourceMappingURL=error.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst powerquery_parser_1 = require(\"@microsoft/powerquery-parser\");\r\nconst comment_1 = require(\"./passes/comment\");\r\nconst isMultiline_1 = require(\"./passes/isMultiline/isMultiline\");\r\nconst serializerParameter_1 = require(\"./passes/serializerParameter\");\r\nconst serializer_1 = require(\"./serializer\");\r\nfunction format(formatSettings, text) {\r\n    const triedLexParse = powerquery_parser_1.tryLexParse(formatSettings, text);\r\n    if (triedLexParse.kind === \"Err\" /* Err */) {\r\n        return triedLexParse;\r\n    }\r\n    const lexParseOk = triedLexParse.value;\r\n    const ast = lexParseOk.ast;\r\n    const comments = lexParseOk.lexerSnapshot.comments;\r\n    const nodeIdMapCollection = lexParseOk.nodeIdMapCollection;\r\n    const localizationTemplates = formatSettings.localizationTemplates;\r\n    let commentCollectionMap = new Map();\r\n    if (comments.length) {\r\n        const triedCommentPass = comment_1.tryTraverse(localizationTemplates, ast, nodeIdMapCollection, comments);\r\n        if (triedCommentPass.kind === \"Err\" /* Err */) {\r\n            return triedCommentPass;\r\n        }\r\n        commentCollectionMap = triedCommentPass.value;\r\n    }\r\n    const triedIsMultilineMap = isMultiline_1.tryTraverse(localizationTemplates, ast, commentCollectionMap, nodeIdMapCollection);\r\n    if (triedIsMultilineMap.kind === \"Err\" /* Err */) {\r\n        return triedIsMultilineMap;\r\n    }\r\n    const isMultilineMap = triedIsMultilineMap.value;\r\n    const triedSerializerParameter = serializerParameter_1.tryTraverse(localizationTemplates, ast, nodeIdMapCollection, commentCollectionMap, isMultilineMap);\r\n    if (triedSerializerParameter.kind === \"Err\" /* Err */) {\r\n        return triedSerializerParameter;\r\n    }\r\n    const serializerParameterMap = triedSerializerParameter.value;\r\n    const maps = {\r\n        commentCollectionMap,\r\n        serializerParameterMap,\r\n    };\r\n    const serializeRequest = {\r\n        localizationTemplates: localizationTemplates,\r\n        document: lexParseOk.ast,\r\n        nodeIdMapCollection,\r\n        maps,\r\n        indentationLiteral: formatSettings.indentationLiteral,\r\n        newlineLiteral: formatSettings.newlineLiteral,\r\n    };\r\n    return serializer_1.Serializer.run(serializeRequest);\r\n}\r\nexports.format = format;\r\n//# sourceMappingURL=format.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst FormatError = require(\"./error\");\r\nexports.FormatError = FormatError;\r\n__export(require(\"./format\"));\r\n__export(require(\"./serializer\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst powerquery_parser_1 = require(\"@microsoft/powerquery-parser\");\r\nfunction tryTraverse(localizationTemplates, root, nodeIdMapCollection, comments) {\r\n    const state = {\r\n        localizationTemplates,\r\n        result: new Map(),\r\n        comments,\r\n        commentsIndex: 0,\r\n        maybeCurrentComment: comments[0],\r\n    };\r\n    return powerquery_parser_1.Traverse.tryTraverseAst(state, nodeIdMapCollection, root, \"DepthFirst\" /* DepthFirst */, visitNode, powerquery_parser_1.Traverse.expectExpandAllAstChildren, earlyExit);\r\n}\r\nexports.tryTraverse = tryTraverse;\r\nfunction earlyExit(state, node) {\r\n    const maybeCurrentComment = state.maybeCurrentComment;\r\n    if (maybeCurrentComment === undefined) {\r\n        return true;\r\n    }\r\n    else if (node.tokenRange.positionEnd.codeUnit < maybeCurrentComment.positionStart.codeUnit) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction visitNode(state, node) {\r\n    if (!node.isLeaf) {\r\n        return;\r\n    }\r\n    let maybeCurrentComment = state.maybeCurrentComment;\r\n    while (maybeCurrentComment && maybeCurrentComment.positionStart.codeUnit < node.tokenRange.positionStart.codeUnit) {\r\n        const currentComment = maybeCurrentComment;\r\n        const commentMap = state.result;\r\n        const nodeId = node.id;\r\n        const maybeCommentCollection = commentMap.get(nodeId);\r\n        // It's the first comment for the TNode\r\n        if (maybeCommentCollection === undefined) {\r\n            const commentCollection = {\r\n                prefixedComments: [currentComment],\r\n                prefixedCommentsContainsNewline: currentComment.containsNewline,\r\n            };\r\n            commentMap.set(nodeId, commentCollection);\r\n        }\r\n        // At least one comment already attached to the TNode\r\n        else {\r\n            const commentCollection = maybeCommentCollection;\r\n            commentCollection.prefixedComments.push(currentComment);\r\n            if (currentComment.containsNewline) {\r\n                commentCollection.prefixedCommentsContainsNewline = true;\r\n            }\r\n        }\r\n        state.commentsIndex += 1;\r\n        maybeCurrentComment = state.comments[state.commentsIndex];\r\n    }\r\n    state.maybeCurrentComment = maybeCurrentComment;\r\n}\r\n//# sourceMappingURL=comment.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst powerquery_parser_1 = require(\"@microsoft/powerquery-parser\");\r\nfunction maybeGetParent(nodeIdMapCollection, nodeId) {\r\n    const maybeParentNodeId = nodeIdMapCollection.parentIdById.get(nodeId);\r\n    if (maybeParentNodeId === undefined) {\r\n        return undefined;\r\n    }\r\n    const parentNodeId = maybeParentNodeId;\r\n    return powerquery_parser_1.NodeIdMapUtils.expectAstNode(nodeIdMapCollection.astNodeById, parentNodeId);\r\n}\r\nexports.maybeGetParent = maybeGetParent;\r\n//# sourceMappingURL=common.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst powerquery_parser_1 = require(\"@microsoft/powerquery-parser\");\r\nfunction expectGetIsMultiline(isMultilineMap, node) {\r\n    const maybeIsMultiline = isMultilineMap.get(node.id);\r\n    if (maybeIsMultiline === undefined) {\r\n        const details = { nodeId: node.id };\r\n        throw new powerquery_parser_1.CommonError.InvariantError(`isMultiline is missing an expected nodeId`, details);\r\n    }\r\n    return maybeIsMultiline;\r\n}\r\nexports.expectGetIsMultiline = expectGetIsMultiline;\r\nfunction setIsMultiline(isMultilineMap, node, isMultiline) {\r\n    isMultilineMap.set(node.id, isMultiline);\r\n}\r\nexports.setIsMultiline = setIsMultiline;\r\n//# sourceMappingURL=common.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst isMultilineFirstPass_1 = require(\"./isMultilineFirstPass\");\r\nconst isMultilineSecondPass_1 = require(\"./isMultilineSecondPass\");\r\n// runs a DFS pass followed by a BFS pass.\r\nfunction tryTraverse(localizationTemplates, ast, commentCollectionMap, nodeIdMapCollection) {\r\n    const triedFirstPass = isMultilineFirstPass_1.tryTraverse(localizationTemplates, ast, commentCollectionMap, nodeIdMapCollection);\r\n    if (triedFirstPass.kind === \"Err\" /* Err */) {\r\n        return triedFirstPass;\r\n    }\r\n    const isMultilineMap = triedFirstPass.value;\r\n    return isMultilineSecondPass_1.tryTraverse(localizationTemplates, ast, isMultilineMap, nodeIdMapCollection);\r\n}\r\nexports.tryTraverse = tryTraverse;\r\n//# sourceMappingURL=isMultiline.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst powerquery_parser_1 = require(\"@microsoft/powerquery-parser\");\r\nconst common_1 = require(\"../common\");\r\nconst common_2 = require(\"./common\");\r\nconst linearLength_1 = require(\"./linearLength\");\r\nfunction tryTraverse(localizationTemplates, ast, commentCollectionMap, nodeIdMapCollection) {\r\n    const state = {\r\n        localizationTemplates,\r\n        result: new Map(),\r\n        commentCollectionMap,\r\n        nodeIdMapCollection,\r\n        linearLengthMap: new Map(),\r\n    };\r\n    return powerquery_parser_1.Traverse.tryTraverseAst(state, nodeIdMapCollection, ast, \"DepthFirst\" /* DepthFirst */, visitNode, powerquery_parser_1.Traverse.expectExpandAllAstChildren, undefined);\r\n}\r\nexports.tryTraverse = tryTraverse;\r\nconst InvokeExpressionIdentifierLinearLengthExclusions = [\r\n    \"#datetime\",\r\n    \"#datetimezone\",\r\n    \"#duration\",\r\n    \"#time\",\r\n];\r\nconst TBinOpExpressionLinearLengthThreshold = 40;\r\nconst InvokeExpressionLinearLengthThreshold = 40;\r\nfunction visitNode(state, node) {\r\n    const isMultilineMap = state.result;\r\n    let isMultiline = false;\r\n    switch (node.kind) {\r\n        // TPairedConstant\r\n        case \"AsNullablePrimitiveType\" /* AsNullablePrimitiveType */:\r\n        case \"AsType\" /* AsType */:\r\n        case \"EachExpression\" /* EachExpression */:\r\n        case \"ErrorRaisingExpression\" /* ErrorRaisingExpression */:\r\n        case \"IsNullablePrimitiveType\" /* IsNullablePrimitiveType */:\r\n        case \"NullablePrimitiveType\" /* NullablePrimitiveType */:\r\n        case \"NullableType\" /* NullableType */:\r\n        case \"OtherwiseExpression\" /* OtherwiseExpression */:\r\n        case \"TypePrimaryType\" /* TypePrimaryType */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.constant, node.paired);\r\n            break;\r\n        // TBinOpExpression\r\n        case \"IsExpression\" /* IsExpression */:\r\n        case \"AsExpression\" /* AsExpression */:\r\n        case \"ArithmeticExpression\" /* ArithmeticExpression */:\r\n        case \"EqualityExpression\" /* EqualityExpression */:\r\n        case \"LogicalExpression\" /* LogicalExpression */:\r\n        case \"RelationalExpression\" /* RelationalExpression */: {\r\n            const left = node.left;\r\n            const right = node.right;\r\n            if ((powerquery_parser_1.AstUtils.isTBinOpExpression(left) && containsLogicalExpression(left)) ||\r\n                (powerquery_parser_1.AstUtils.isTBinOpExpression(right) && containsLogicalExpression(right))) {\r\n                isMultiline = true;\r\n            }\r\n            const linearLength = linearLength_1.getLinearLength(state.localizationTemplates, state.linearLengthMap, state.nodeIdMapCollection, node);\r\n            if (linearLength > TBinOpExpressionLinearLengthThreshold) {\r\n                isMultiline = true;\r\n            }\r\n            else {\r\n                isMultiline = isAnyMultiline(isMultilineMap, left, node.operatorConstant, right);\r\n            }\r\n            break;\r\n        }\r\n        // TKeyValuePair\r\n        case \"GeneralizedIdentifierPairedAnyLiteral\" /* GeneralizedIdentifierPairedAnyLiteral */:\r\n        case \"GeneralizedIdentifierPairedExpression\" /* GeneralizedIdentifierPairedExpression */:\r\n        case \"IdentifierExpressionPairedExpression\" /* IdentifierExpressionPairedExpression */:\r\n        case \"IdentifierPairedExpression\" /* IdentifierPairedExpression */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.key, node.equalConstant, node.value);\r\n            break;\r\n        // Possible for a parent to assign an isMultiline override.\r\n        case \"ArrayWrapper\" /* ArrayWrapper */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, ...node.elements);\r\n            break;\r\n        case \"ListExpression\" /* ListExpression */:\r\n        case \"ListLiteral\" /* ListLiteral */:\r\n        case \"RecordExpression\" /* RecordExpression */:\r\n        case \"RecordLiteral\" /* RecordLiteral */: {\r\n            if (node.content.elements.length > 1) {\r\n                isMultiline = true;\r\n            }\r\n            else {\r\n                const isAnyChildMultiline = isAnyMultiline(isMultilineMap, node.openWrapperConstant, node.closeWrapperConstant, ...node.content.elements);\r\n                if (isAnyChildMultiline) {\r\n                    isMultiline = true;\r\n                }\r\n                else {\r\n                    const csvs = node.content.elements;\r\n                    const csvNodes = csvs.map((csv) => csv.node);\r\n                    isMultiline = isAnyListOrRecord(csvNodes);\r\n                }\r\n            }\r\n            common_2.setIsMultiline(isMultilineMap, node.content, isMultiline);\r\n            break;\r\n        }\r\n        case \"Csv\" /* Csv */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.node, node.maybeCommaConstant);\r\n            break;\r\n        case \"ErrorHandlingExpression\" /* ErrorHandlingExpression */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.tryConstant, node.protectedExpression, node.maybeOtherwiseExpression);\r\n            break;\r\n        case \"FieldProjection\" /* FieldProjection */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.openWrapperConstant, node.closeWrapperConstant, node.maybeOptionalConstant, ...node.content.elements);\r\n            break;\r\n        case \"FieldSelector\" /* FieldSelector */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.openWrapperConstant, node.content, node.closeWrapperConstant, node.maybeOptionalConstant);\r\n            break;\r\n        case \"FieldSpecification\" /* FieldSpecification */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.maybeOptionalConstant, node.name, node.maybeFieldTypeSpecification);\r\n            break;\r\n        case \"FieldSpecificationList\" /* FieldSpecificationList */: {\r\n            const fieldArray = node.content;\r\n            const fields = fieldArray.elements;\r\n            if (fields.length > 1) {\r\n                isMultiline = true;\r\n            }\r\n            else if (fields.length === 1 && node.maybeOpenRecordMarkerConstant) {\r\n                isMultiline = true;\r\n            }\r\n            common_2.setIsMultiline(isMultilineMap, fieldArray, isMultiline);\r\n            break;\r\n        }\r\n        case \"FieldTypeSpecification\" /* FieldTypeSpecification */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.equalConstant, node.fieldType);\r\n            break;\r\n        case \"FunctionExpression\" /* FunctionExpression */:\r\n            isMultiline = common_2.expectGetIsMultiline(isMultilineMap, node.expression);\r\n            break;\r\n        case \"IdentifierExpression\" /* IdentifierExpression */: {\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.maybeInclusiveConstant, node.identifier);\r\n            break;\r\n        }\r\n        case \"IfExpression\" /* IfExpression */:\r\n            isMultiline = true;\r\n            break;\r\n        case \"InvokeExpression\" /* InvokeExpression */: {\r\n            const nodeIdMapCollection = state.nodeIdMapCollection;\r\n            const args = node.content.elements;\r\n            if (args.length > 1) {\r\n                const linearLengthMap = state.linearLengthMap;\r\n                const linearLength = linearLength_1.getLinearLength(state.localizationTemplates, linearLengthMap, nodeIdMapCollection, node);\r\n                const maybeArrayWrapper = common_1.maybeGetParent(nodeIdMapCollection, node.id);\r\n                if (maybeArrayWrapper === undefined || maybeArrayWrapper.kind !== \"ArrayWrapper\" /* ArrayWrapper */) {\r\n                    throw new powerquery_parser_1.CommonError.InvariantError(\"InvokeExpression must have ArrayWrapper as a parent\");\r\n                }\r\n                const arrayWrapper = maybeArrayWrapper;\r\n                const maybeRecursivePrimaryExpression = common_1.maybeGetParent(nodeIdMapCollection, arrayWrapper.id);\r\n                if (maybeRecursivePrimaryExpression === undefined ||\r\n                    maybeRecursivePrimaryExpression.kind !== \"RecursivePrimaryExpression\" /* RecursivePrimaryExpression */) {\r\n                    throw new powerquery_parser_1.CommonError.InvariantError(\"ArrayWrapper must have RecursivePrimaryExpression as a parent\");\r\n                }\r\n                const recursivePrimaryExpression = maybeRecursivePrimaryExpression;\r\n                const headLinearLength = linearLength_1.getLinearLength(state.localizationTemplates, linearLengthMap, nodeIdMapCollection, recursivePrimaryExpression.head);\r\n                const compositeLinearLength = headLinearLength + linearLength;\r\n                // if it's beyond the threshold check if it's a long literal\r\n                // ex. `#datetimezone(2013,02,26, 09,15,00, 09,00)`\r\n                if (compositeLinearLength > InvokeExpressionLinearLengthThreshold) {\r\n                    const maybeName = powerquery_parser_1.NodeIdMapUtils.maybeInvokeExpressionName(nodeIdMapCollection, node.id);\r\n                    if (maybeName) {\r\n                        const name = maybeName;\r\n                        isMultiline = InvokeExpressionIdentifierLinearLengthExclusions.indexOf(name) === -1;\r\n                    }\r\n                    common_2.setIsMultiline(isMultilineMap, node.content, isMultiline);\r\n                }\r\n                else {\r\n                    isMultiline = isAnyMultiline(isMultilineMap, node.openWrapperConstant, node.closeWrapperConstant, ...args);\r\n                }\r\n            }\r\n            else {\r\n                // a single argument can still be multiline\r\n                // ex. `foo(if true then 1 else 0)`\r\n                isMultiline = isAnyMultiline(isMultilineMap, node.openWrapperConstant, node.closeWrapperConstant, ...args);\r\n            }\r\n            break;\r\n        }\r\n        case \"ItemAccessExpression\" /* ItemAccessExpression */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.maybeOptionalConstant, node.content, node.closeWrapperConstant, node.maybeOptionalConstant);\r\n            break;\r\n        case \"LetExpression\" /* LetExpression */:\r\n            isMultiline = true;\r\n            common_2.setIsMultiline(isMultilineMap, node.variableList, true);\r\n            break;\r\n        case \"LiteralExpression\" /* LiteralExpression */:\r\n            if (node.literalKind === \"Str\" /* Str */ && containsNewline(node.literal)) {\r\n                isMultiline = true;\r\n            }\r\n            break;\r\n        case \"ListType\" /* ListType */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.openWrapperConstant, node.content, node.closeWrapperConstant);\r\n            break;\r\n        case \"MetadataExpression\" /* MetadataExpression */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.left, node.operatorConstant, node.right);\r\n            break;\r\n        case \"ParenthesizedExpression\" /* ParenthesizedExpression */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.openWrapperConstant, node.content, node.closeWrapperConstant);\r\n            break;\r\n        case \"PrimitiveType\" /* PrimitiveType */:\r\n            isMultiline = common_2.expectGetIsMultiline(isMultilineMap, node.primitiveType);\r\n            break;\r\n        case \"RangeExpression\" /* RangeExpression */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.left, node.rangeConstant, node.right);\r\n            break;\r\n        case \"RecordType\" /* RecordType */:\r\n            isMultiline = common_2.expectGetIsMultiline(isMultilineMap, node.fields);\r\n            break;\r\n        case \"RecursivePrimaryExpression\" /* RecursivePrimaryExpression */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.head, ...node.recursiveExpressions.elements);\r\n            break;\r\n        case \"Section\" /* Section */:\r\n            if (node.sectionMembers.elements.length) {\r\n                isMultiline = true;\r\n            }\r\n            else {\r\n                isMultiline = isAnyMultiline(isMultilineMap, node.maybeLiteralAttributes, node.sectionConstant, node.maybeName, node.semicolonConstant, ...node.sectionMembers.elements);\r\n            }\r\n            break;\r\n        case \"SectionMember\" /* SectionMember */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.maybeLiteralAttributes, node.maybeSharedConstant, node.namePairedExpression, node.semicolonConstant);\r\n            break;\r\n        case \"TableType\" /* TableType */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, node.tableConstant, node.rowType);\r\n            break;\r\n        case \"UnaryExpression\" /* UnaryExpression */:\r\n            isMultiline = isAnyMultiline(isMultilineMap, ...node.operators.elements);\r\n            break;\r\n        // no-op nodes\r\n        case \"Constant\" /* Constant */:\r\n        case \"FunctionType\" /* FunctionType */:\r\n        case \"GeneralizedIdentifier\" /* GeneralizedIdentifier */:\r\n        case \"Identifier\" /* Identifier */:\r\n        case \"NotImplementedExpression\" /* NotImplementedExpression */:\r\n        case \"Parameter\" /* Parameter */:\r\n        case \"ParameterList\" /* ParameterList */:\r\n            break;\r\n        default:\r\n            throw powerquery_parser_1.isNever(node);\r\n    }\r\n    setIsMultilineWithCommentCheck(state, node, isMultiline);\r\n}\r\nfunction isAnyListOrRecord(nodes) {\r\n    for (const node of nodes) {\r\n        switch (node.kind) {\r\n            case \"ListExpression\" /* ListExpression */:\r\n            case \"ListLiteral\" /* ListLiteral */:\r\n            case \"RecordExpression\" /* RecordExpression */:\r\n            case \"RecordLiteral\" /* RecordLiteral */:\r\n                return true;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction isAnyMultiline(isMultilineMap, ...maybeNodes) {\r\n    for (const maybeNode of maybeNodes) {\r\n        if (maybeNode && common_2.expectGetIsMultiline(isMultilineMap, maybeNode)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction setIsMultilineWithCommentCheck(state, node, isMultiline) {\r\n    if (precededByMultilineComment(state, node)) {\r\n        isMultiline = true;\r\n    }\r\n    common_2.setIsMultiline(state.result, node, isMultiline);\r\n}\r\nfunction precededByMultilineComment(state, node) {\r\n    const maybeCommentCollection = state.commentCollectionMap.get(node.id);\r\n    if (maybeCommentCollection) {\r\n        return maybeCommentCollection.prefixedCommentsContainsNewline;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction containsNewline(text) {\r\n    const textLength = text.length;\r\n    for (let index = 0; index < textLength; index += 1) {\r\n        if (powerquery_parser_1.StringUtils.maybeNewlineKindAt(text, index)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction containsLogicalExpression(node) {\r\n    if (!powerquery_parser_1.AstUtils.isTBinOpExpression(node)) {\r\n        return false;\r\n    }\r\n    const left = node.left;\r\n    const right = node.right;\r\n    return (node.kind === \"LogicalExpression\" /* LogicalExpression */ ||\r\n        (powerquery_parser_1.AstUtils.isTBinOpExpression(left) && containsLogicalExpression(left)) ||\r\n        (powerquery_parser_1.AstUtils.isTBinOpExpression(right) && containsLogicalExpression(right)));\r\n}\r\n//# sourceMappingURL=isMultilineFirstPass.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst powerquery_parser_1 = require(\"@microsoft/powerquery-parser\");\r\nconst common_1 = require(\"../common\");\r\nconst common_2 = require(\"./common\");\r\nfunction tryTraverse(localizationTemplates, ast, isMultilineMap, nodeIdMapCollection) {\r\n    const state = {\r\n        localizationTemplates,\r\n        result: isMultilineMap,\r\n        nodeIdMapCollection,\r\n    };\r\n    return powerquery_parser_1.Traverse.tryTraverseAst(state, nodeIdMapCollection, ast, \"BreadthFirst\" /* BreadthFirst */, visitNode, powerquery_parser_1.Traverse.expectExpandAllAstChildren, undefined);\r\n}\r\nexports.tryTraverse = tryTraverse;\r\nfunction visitNode(state, node) {\r\n    switch (node.kind) {\r\n        // TBinOpExpression\r\n        case \"ArithmeticExpression\" /* ArithmeticExpression */:\r\n        case \"AsExpression\" /* AsExpression */:\r\n        case \"EqualityExpression\" /* EqualityExpression */:\r\n        case \"IsExpression\" /* IsExpression */:\r\n        case \"LogicalExpression\" /* LogicalExpression */:\r\n        case \"RelationalExpression\" /* RelationalExpression */: {\r\n            const isMultilineMap = state.result;\r\n            const maybeParent = common_1.maybeGetParent(state.nodeIdMapCollection, node.id);\r\n            if (maybeParent &&\r\n                powerquery_parser_1.AstUtils.isTBinOpExpression(maybeParent) &&\r\n                common_2.expectGetIsMultiline(isMultilineMap, maybeParent)) {\r\n                common_2.setIsMultiline(isMultilineMap, node, true);\r\n            }\r\n            break;\r\n        }\r\n        // If a list or record is a child node,\r\n        // Then by default it should be considered multiline if it has one or more values\r\n        case \"ListExpression\" /* ListExpression */:\r\n        case \"ListLiteral\" /* ListLiteral */:\r\n        case \"RecordExpression\" /* RecordExpression */:\r\n        case \"RecordLiteral\" /* RecordLiteral */:\r\n            if (node.content.elements.length) {\r\n                const nodeIdMapCollection = state.nodeIdMapCollection;\r\n                let maybeParent = common_1.maybeGetParent(nodeIdMapCollection, node.id);\r\n                let maybeCsv;\r\n                let maybeArrayWrapper;\r\n                if (maybeParent && maybeParent.kind === \"Csv\" /* Csv */) {\r\n                    maybeCsv = maybeParent;\r\n                    maybeParent = common_1.maybeGetParent(nodeIdMapCollection, maybeParent.id);\r\n                }\r\n                if (maybeParent && maybeParent.kind === \"ArrayWrapper\" /* ArrayWrapper */) {\r\n                    maybeArrayWrapper = maybeParent;\r\n                    maybeParent = common_1.maybeGetParent(nodeIdMapCollection, maybeParent.id);\r\n                }\r\n                if (maybeParent) {\r\n                    const parent = maybeParent;\r\n                    switch (parent.kind) {\r\n                        case \"ItemAccessExpression\" /* ItemAccessExpression */:\r\n                        case \"InvokeExpression\" /* InvokeExpression */:\r\n                        case \"FunctionExpression\" /* FunctionExpression */:\r\n                        case \"Section\" /* Section */:\r\n                        case \"SectionMember\" /* SectionMember */:\r\n                            break;\r\n                        default: {\r\n                            const isMultilineMap = state.result;\r\n                            common_2.setIsMultiline(isMultilineMap, parent, true);\r\n                            if (maybeCsv) {\r\n                                common_2.setIsMultiline(isMultilineMap, maybeCsv, true);\r\n                            }\r\n                            if (maybeArrayWrapper) {\r\n                                common_2.setIsMultiline(isMultilineMap, maybeArrayWrapper, true);\r\n                            }\r\n                            common_2.setIsMultiline(isMultilineMap, node, true);\r\n                            common_2.setIsMultiline(isMultilineMap, node.content, true);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n//# sourceMappingURL=isMultilineSecondPass.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst powerquery_parser_1 = require(\"@microsoft/powerquery-parser\");\r\n// Lazy evaluation of a potentially large AST.\r\n// Returns the text length of the node if IsMultiline is set to false.\r\n// Nodes which can't ever have a linear length (such as IfExpressions) will evaluate to NaN.\r\nfunction getLinearLength(localizationTemplates, linearLengthMap, nodeIdMapCollection, node) {\r\n    const nodeId = node.id;\r\n    const maybeLinearLength = linearLengthMap.get(nodeId);\r\n    if (maybeLinearLength === undefined) {\r\n        const linearLength = calculateLinearLength(localizationTemplates, node, nodeIdMapCollection, linearLengthMap);\r\n        linearLengthMap.set(nodeId, linearLength);\r\n        return linearLength;\r\n    }\r\n    else {\r\n        return maybeLinearLength;\r\n    }\r\n}\r\nexports.getLinearLength = getLinearLength;\r\nfunction calculateLinearLength(localizationTemplates, node, nodeIdMapCollection, linearLengthMap) {\r\n    const state = {\r\n        localizationTemplates,\r\n        result: 0,\r\n        nodeIdMapCollection,\r\n        linearLengthMap,\r\n    };\r\n    const triedTraverse = powerquery_parser_1.Traverse.tryTraverseAst(state, nodeIdMapCollection, node, \"DepthFirst\" /* DepthFirst */, visitNode, powerquery_parser_1.Traverse.expectExpandAllAstChildren, undefined);\r\n    if (triedTraverse.kind === \"Err\" /* Err */) {\r\n        throw triedTraverse.error;\r\n    }\r\n    else {\r\n        return triedTraverse.value;\r\n    }\r\n}\r\nfunction visitNode(state, node) {\r\n    let linearLength;\r\n    switch (node.kind) {\r\n        // TPairedConstant\r\n        case \"AsNullablePrimitiveType\" /* AsNullablePrimitiveType */:\r\n        case \"AsType\" /* AsType */:\r\n        case \"EachExpression\" /* EachExpression */:\r\n        case \"ErrorRaisingExpression\" /* ErrorRaisingExpression */:\r\n        case \"IsNullablePrimitiveType\" /* IsNullablePrimitiveType */:\r\n        case \"NullablePrimitiveType\" /* NullablePrimitiveType */:\r\n        case \"NullableType\" /* NullableType */:\r\n        case \"OtherwiseExpression\" /* OtherwiseExpression */:\r\n        case \"TypePrimaryType\" /* TypePrimaryType */:\r\n            linearLength = sumLinearLengths(state, 1, node.constant, node.paired);\r\n            break;\r\n        // TBinOpExpression\r\n        case \"AsExpression\" /* AsExpression */:\r\n        case \"ArithmeticExpression\" /* ArithmeticExpression */:\r\n        case \"EqualityExpression\" /* EqualityExpression */:\r\n        case \"IsExpression\" /* IsExpression */:\r\n        case \"LogicalExpression\" /* LogicalExpression */:\r\n        case \"RelationalExpression\" /* RelationalExpression */: {\r\n            linearLength = sumLinearLengths(state, 2, node.left, node.operatorConstant, node.right);\r\n            break;\r\n        }\r\n        // TKeyValuePair\r\n        case \"GeneralizedIdentifierPairedAnyLiteral\" /* GeneralizedIdentifierPairedAnyLiteral */:\r\n        case \"GeneralizedIdentifierPairedExpression\" /* GeneralizedIdentifierPairedExpression */:\r\n        case \"IdentifierExpressionPairedExpression\" /* IdentifierExpressionPairedExpression */:\r\n        case \"IdentifierPairedExpression\" /* IdentifierPairedExpression */:\r\n            linearLength = sumLinearLengths(state, 2, node.key, node.equalConstant, node.value);\r\n            break;\r\n        // TWrapped where Content is TCsv[] and no extra attributes\r\n        case \"InvokeExpression\" /* InvokeExpression */:\r\n        case \"ListExpression\" /* ListExpression */:\r\n        case \"ListLiteral\" /* ListLiteral */:\r\n        case \"ParameterList\" /* ParameterList */:\r\n        case \"RecordExpression\" /* RecordExpression */:\r\n        case \"RecordLiteral\" /* RecordLiteral */: {\r\n            const elements = node.content.elements;\r\n            const numElements = elements.length;\r\n            linearLength = sumLinearLengths(state, numElements ? numElements - 1 : 0, node.openWrapperConstant, node.closeWrapperConstant, ...elements);\r\n            break;\r\n        }\r\n        case \"ArrayWrapper\" /* ArrayWrapper */:\r\n            linearLength = sumLinearLengths(state, 0, ...node.elements);\r\n            break;\r\n        case \"Constant\" /* Constant */:\r\n            linearLength = node.constantKind.length;\r\n            break;\r\n        case \"Csv\" /* Csv */:\r\n            linearLength = sumLinearLengths(state, 0, node.node, node.maybeCommaConstant);\r\n            break;\r\n        case \"ErrorHandlingExpression\" /* ErrorHandlingExpression */: {\r\n            let initialLength = 1;\r\n            if (node.maybeOtherwiseExpression) {\r\n                initialLength += 2;\r\n            }\r\n            linearLength = sumLinearLengths(state, initialLength, node.tryConstant, node.protectedExpression, node.maybeOtherwiseExpression);\r\n            break;\r\n        }\r\n        case \"FieldProjection\" /* FieldProjection */:\r\n            linearLength = sumLinearLengths(state, 0, node.openWrapperConstant, node.closeWrapperConstant, node.maybeOptionalConstant, ...node.content.elements);\r\n            break;\r\n        case \"FieldSelector\" /* FieldSelector */:\r\n            linearLength = sumLinearLengths(state, 0, node.openWrapperConstant, node.content, node.closeWrapperConstant, node.maybeOptionalConstant);\r\n            break;\r\n        case \"FieldSpecification\" /* FieldSpecification */:\r\n            linearLength = sumLinearLengths(state, 0, node.maybeOptionalConstant, node.name, node.maybeFieldTypeSpecification);\r\n            break;\r\n        case \"FieldSpecificationList\" /* FieldSpecificationList */: {\r\n            const elements = node.content.elements;\r\n            let initialLength = 0;\r\n            if (node.maybeOpenRecordMarkerConstant && elements.length) {\r\n                initialLength += 2;\r\n            }\r\n            linearLength = sumLinearLengths(state, initialLength, node.openWrapperConstant, node.closeWrapperConstant, node.maybeOpenRecordMarkerConstant, ...elements);\r\n            break;\r\n        }\r\n        case \"FieldTypeSpecification\" /* FieldTypeSpecification */:\r\n            linearLength = sumLinearLengths(state, 2, node.equalConstant, node.fieldType);\r\n            break;\r\n        case \"FunctionExpression\" /* FunctionExpression */: {\r\n            let initialLength = 2;\r\n            if (node.maybeFunctionReturnType) {\r\n                initialLength += 2;\r\n            }\r\n            linearLength = sumLinearLengths(state, initialLength, node.parameters, node.maybeFunctionReturnType, node.fatArrowConstant, node.expression);\r\n            break;\r\n        }\r\n        case \"FunctionType\" /* FunctionType */:\r\n            linearLength = sumLinearLengths(state, 2, node.functionConstant, node.parameters, node.functionReturnType);\r\n            break;\r\n        case \"GeneralizedIdentifier\" /* GeneralizedIdentifier */:\r\n        case \"Identifier\" /* Identifier */:\r\n            linearLength = node.literal.length;\r\n            break;\r\n        case \"IdentifierExpression\" /* IdentifierExpression */:\r\n            linearLength = sumLinearLengths(state, 0, node.maybeInclusiveConstant, node.identifier);\r\n            break;\r\n        case \"ItemAccessExpression\" /* ItemAccessExpression */:\r\n            linearLength = sumLinearLengths(state, 0, node.openWrapperConstant, node.content, node.closeWrapperConstant, node.maybeOptionalConstant);\r\n            break;\r\n        case \"LiteralExpression\" /* LiteralExpression */:\r\n            linearLength = node.literal.length;\r\n            break;\r\n        case \"ListType\" /* ListType */:\r\n            linearLength = sumLinearLengths(state, 0, node.openWrapperConstant, node.content, node.closeWrapperConstant);\r\n            break;\r\n        case \"MetadataExpression\" /* MetadataExpression */: {\r\n            linearLength = sumLinearLengths(state, 2, node.left, node.operatorConstant, node.right);\r\n            break;\r\n        }\r\n        case \"NotImplementedExpression\" /* NotImplementedExpression */:\r\n            linearLength = sumLinearLengths(state, 0, node.ellipsisConstant);\r\n            break;\r\n        case \"Parameter\" /* Parameter */: {\r\n            let initialLength = 0;\r\n            if (node.maybeOptionalConstant) {\r\n                initialLength += 1;\r\n            }\r\n            if (node.maybeParameterType) {\r\n                initialLength += 1;\r\n            }\r\n            linearLength = sumLinearLengths(state, initialLength, node.maybeOptionalConstant, node.name, node.maybeParameterType);\r\n            break;\r\n        }\r\n        case \"ParenthesizedExpression\" /* ParenthesizedExpression */:\r\n            linearLength = sumLinearLengths(state, 0, node.openWrapperConstant, node.content, node.closeWrapperConstant);\r\n            break;\r\n        case \"PrimitiveType\" /* PrimitiveType */:\r\n            linearLength = getLinearLength(state.localizationTemplates, state.linearLengthMap, state.nodeIdMapCollection, node.primitiveType);\r\n            break;\r\n        case \"RangeExpression\" /* RangeExpression */:\r\n            linearLength = sumLinearLengths(state, 0, node.left, node.rangeConstant, node.right);\r\n            break;\r\n        case \"RecordType\" /* RecordType */:\r\n            linearLength = sumLinearLengths(state, 0, node.fields);\r\n            break;\r\n        case \"RecursivePrimaryExpression\" /* RecursivePrimaryExpression */:\r\n            linearLength = sumLinearLengths(state, 0, node.head, ...node.recursiveExpressions.elements);\r\n            break;\r\n        case \"SectionMember\" /* SectionMember */: {\r\n            let initialLength = 0;\r\n            if (node.maybeLiteralAttributes) {\r\n                initialLength += 1;\r\n            }\r\n            if (node.maybeSharedConstant) {\r\n                initialLength += 1;\r\n            }\r\n            linearLength = sumLinearLengths(state, initialLength, node.maybeLiteralAttributes, node.maybeSharedConstant, node.namePairedExpression, node.semicolonConstant);\r\n            break;\r\n        }\r\n        case \"Section\" /* Section */: {\r\n            const sectionMembers = node.sectionMembers.elements;\r\n            if (sectionMembers.length) {\r\n                linearLength = NaN;\r\n            }\r\n            else {\r\n                let initialLength = 0;\r\n                if (node.maybeLiteralAttributes) {\r\n                    initialLength += 1;\r\n                }\r\n                if (node.maybeName) {\r\n                    initialLength += 1;\r\n                }\r\n                linearLength = sumLinearLengths(state, initialLength, node.maybeLiteralAttributes, node.sectionConstant, node.maybeName, node.semicolonConstant, ...sectionMembers);\r\n            }\r\n            break;\r\n        }\r\n        case \"TableType\" /* TableType */:\r\n            linearLength = sumLinearLengths(state, 1, node.tableConstant, node.rowType);\r\n            break;\r\n        case \"UnaryExpression\" /* UnaryExpression */:\r\n            linearLength = sumLinearLengths(state, 1, node.typeExpression, ...node.operators.elements);\r\n            break;\r\n        // is always multiline, therefore cannot have linear line length\r\n        case \"IfExpression\" /* IfExpression */:\r\n        case \"LetExpression\" /* LetExpression */:\r\n            linearLength = NaN;\r\n            break;\r\n        default:\r\n            throw powerquery_parser_1.isNever(node);\r\n    }\r\n    state.linearLengthMap.set(node.id, linearLength);\r\n    state.result = linearLength;\r\n}\r\nfunction sumLinearLengths(state, initialLength, ...maybeNodes) {\r\n    let summedLinearLength = initialLength;\r\n    for (const maybeNode of maybeNodes) {\r\n        if (maybeNode) {\r\n            const nodeLinearLength = getLinearLength(state.localizationTemplates, state.linearLengthMap, state.nodeIdMapCollection, maybeNode);\r\n            summedLinearLength += nodeLinearLength;\r\n        }\r\n    }\r\n    return summedLinearLength;\r\n}\r\n//# sourceMappingURL=linearLength.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst powerquery_parser_1 = require(\"@microsoft/powerquery-parser\");\r\nconst common_1 = require(\"./common\");\r\nconst common_2 = require(\"./isMultiline/common\");\r\nfunction tryTraverse(localizationTemplates, ast, nodeIdMapCollection, commentCollectionMap, isMultilineMap) {\r\n    const state = {\r\n        result: {\r\n            writeKind: new Map(),\r\n            indentationChange: new Map(),\r\n            comments: new Map(),\r\n        },\r\n        localizationTemplates,\r\n        nodeIdMapCollection,\r\n        commentCollectionMap,\r\n        isMultilineMap,\r\n        workspaceMap: new Map(),\r\n    };\r\n    return powerquery_parser_1.Traverse.tryTraverseAst(state, nodeIdMapCollection, ast, \"BreadthFirst\" /* BreadthFirst */, visitNode, powerquery_parser_1.Traverse.expectExpandAllAstChildren, undefined);\r\n}\r\nexports.tryTraverse = tryTraverse;\r\nfunction getSerializerWriteKind(node, serializerParametersMap) {\r\n    const maybeWriteKind = serializerParametersMap.writeKind.get(node.id);\r\n    if (maybeWriteKind) {\r\n        return maybeWriteKind;\r\n    }\r\n    else {\r\n        const details = { node };\r\n        throw new powerquery_parser_1.CommonError.InvariantError(\"expected node to be in SerializerParameterMap.writeKind\", details);\r\n    }\r\n}\r\nexports.getSerializerWriteKind = getSerializerWriteKind;\r\nconst DefaultWorkspace = {\r\n    maybeWriteKind: \"Any\" /* Any */,\r\n    maybeIndentationChange: undefined,\r\n};\r\nfunction visitNode(state, node) {\r\n    switch (node.kind) {\r\n        case \"ArrayWrapper\" /* ArrayWrapper */: {\r\n            const parent = powerquery_parser_1.NodeIdMapUtils.expectParentAstNode(state.nodeIdMapCollection, node.id);\r\n            switch (parent.kind) {\r\n                case \"Section\" /* Section */:\r\n                    visitArrayWrapperForSectionMembers(state, parent.sectionMembers);\r\n                    break;\r\n                case \"UnaryExpression\" /* UnaryExpression */:\r\n                    visitArrayWrapperForUnaryExpression(state, parent.operators);\r\n                    break;\r\n                default:\r\n                    visitArrayWrapper(state, node);\r\n                    break;\r\n            }\r\n            break;\r\n        }\r\n        // TPairedConstant\r\n        case \"AsNullablePrimitiveType\" /* AsNullablePrimitiveType */:\r\n        case \"AsType\" /* AsType */:\r\n        case \"EachExpression\" /* EachExpression */:\r\n        case \"IsNullablePrimitiveType\" /* IsNullablePrimitiveType */:\r\n        case \"NullablePrimitiveType\" /* NullablePrimitiveType */:\r\n        case \"NullableType\" /* NullableType */:\r\n        case \"OtherwiseExpression\" /* OtherwiseExpression */: {\r\n            propagateWriteKind(state, node, node.constant);\r\n            const isPairedMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node.paired);\r\n            if (isPairedMultiline) {\r\n                setWorkspace(state, node.paired, {\r\n                    maybeIndentationChange: 1,\r\n                    maybeWriteKind: \"Indented\" /* Indented */,\r\n                });\r\n            }\r\n            else {\r\n                setWorkspace(state, node.paired, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n            }\r\n            break;\r\n        }\r\n        // TBinOpExpression\r\n        case \"ArithmeticExpression\" /* ArithmeticExpression */:\r\n        case \"AsExpression\" /* AsExpression */:\r\n        case \"EqualityExpression\" /* EqualityExpression */:\r\n        case \"IsExpression\" /* IsExpression */:\r\n        case \"LogicalExpression\" /* LogicalExpression */:\r\n        case \"RelationalExpression\" /* RelationalExpression */: {\r\n            propagateWriteKind(state, node, node.left);\r\n            const isMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node);\r\n            if (isMultiline) {\r\n                setWorkspace(state, node.operatorConstant, { maybeWriteKind: \"Indented\" /* Indented */ });\r\n                setWorkspace(state, node.right, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n            }\r\n            else if (node.kind === \"LogicalExpression\" /* LogicalExpression */ && isMultiline) {\r\n                setWorkspace(state, node.operatorConstant, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n                setWorkspace(state, node.right, { maybeWriteKind: \"Indented\" /* Indented */ });\r\n            }\r\n            else {\r\n                setWorkspace(state, node.operatorConstant, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n                setWorkspace(state, node.right, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n            }\r\n            break;\r\n        }\r\n        // TKeyValuePair\r\n        case \"GeneralizedIdentifierPairedAnyLiteral\" /* GeneralizedIdentifierPairedAnyLiteral */:\r\n        case \"GeneralizedIdentifierPairedExpression\" /* GeneralizedIdentifierPairedExpression */:\r\n        case \"IdentifierExpressionPairedExpression\" /* IdentifierExpressionPairedExpression */:\r\n        case \"IdentifierPairedExpression\" /* IdentifierPairedExpression */:\r\n            visitKeyValuePair(state, node);\r\n            break;\r\n        case \"ListLiteral\" /* ListLiteral */:\r\n        case \"ListExpression\" /* ListExpression */:\r\n        case \"RecordExpression\" /* RecordExpression */:\r\n        case \"RecordLiteral\" /* RecordLiteral */:\r\n            visitWrapped(state, node);\r\n            break;\r\n        case \"Csv\" /* Csv */: {\r\n            const workspace = getWorkspace(state, node);\r\n            const maybeWriteKind = workspace.maybeWriteKind;\r\n            propagateWriteKind(state, node, node.node);\r\n            if (node.maybeCommaConstant && maybeWriteKind !== \"Indented\" /* Indented */) {\r\n                const commaConstant = node.maybeCommaConstant;\r\n                setWorkspace(state, commaConstant, { maybeWriteKind: \"PaddedRight\" /* PaddedRight */ });\r\n            }\r\n            break;\r\n        }\r\n        case \"ErrorHandlingExpression\" /* ErrorHandlingExpression */: {\r\n            const isMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node);\r\n            propagateWriteKind(state, node, node.tryConstant);\r\n            const protectedIsMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node.protectedExpression);\r\n            if (protectedIsMultiline) {\r\n                setWorkspace(state, node.protectedExpression, {\r\n                    maybeIndentationChange: 1,\r\n                    maybeWriteKind: \"Indented\" /* Indented */,\r\n                });\r\n            }\r\n            else {\r\n                setWorkspace(state, node.protectedExpression, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n            }\r\n            if (node.maybeOtherwiseExpression) {\r\n                const otherwiseExpression = node.maybeOtherwiseExpression;\r\n                let otherwiseWriteKind;\r\n                if (isMultiline) {\r\n                    otherwiseWriteKind = \"Indented\" /* Indented */;\r\n                }\r\n                else {\r\n                    otherwiseWriteKind = \"PaddedLeft\" /* PaddedLeft */;\r\n                }\r\n                setWorkspace(state, otherwiseExpression, { maybeWriteKind: otherwiseWriteKind });\r\n            }\r\n            break;\r\n        }\r\n        // TPairedConstant override\r\n        case \"ErrorRaisingExpression\" /* ErrorRaisingExpression */: {\r\n            propagateWriteKind(state, node, node.constant);\r\n            let pairedWorkspace;\r\n            switch (node.paired.kind) {\r\n                case \"ListExpression\" /* ListExpression */:\r\n                case \"RecordExpression\" /* RecordExpression */:\r\n                    pairedWorkspace = {\r\n                        maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */,\r\n                    };\r\n                    break;\r\n                default:\r\n                    const pairedIsMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node.paired);\r\n                    if (pairedIsMultiline) {\r\n                        pairedWorkspace = {\r\n                            maybeIndentationChange: 1,\r\n                            maybeWriteKind: \"Indented\" /* Indented */,\r\n                        };\r\n                    }\r\n                    else {\r\n                        pairedWorkspace = { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ };\r\n                    }\r\n                    break;\r\n            }\r\n            setWorkspace(state, node.paired, pairedWorkspace);\r\n            break;\r\n        }\r\n        case \"FieldProjection\" /* FieldProjection */:\r\n            visitWrapped(state, node);\r\n            break;\r\n        case \"FieldSelector\" /* FieldSelector */:\r\n            propagateWriteKind(state, node, node.openWrapperConstant);\r\n            break;\r\n        case \"FieldSpecification\" /* FieldSpecification */: {\r\n            const maybeOptionalConstant = node.maybeOptionalConstant;\r\n            if (maybePropagateWriteKind(state, node, maybeOptionalConstant)) {\r\n                setWorkspace(state, node.name, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n            }\r\n            else {\r\n                propagateWriteKind(state, node, node.name);\r\n            }\r\n            const maybeFieldTypeSpecification = node.maybeFieldTypeSpecification;\r\n            if (maybeFieldTypeSpecification) {\r\n                const fieldTypeSpecification = maybeFieldTypeSpecification;\r\n                const isMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, fieldTypeSpecification);\r\n                let typeWorkspace;\r\n                if (isMultiline) {\r\n                    typeWorkspace = {\r\n                        maybeIndentationChange: 1,\r\n                        maybeWriteKind: \"Indented\" /* Indented */,\r\n                    };\r\n                }\r\n                else {\r\n                    typeWorkspace = { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ };\r\n                }\r\n                setWorkspace(state, fieldTypeSpecification, typeWorkspace);\r\n            }\r\n            break;\r\n        }\r\n        case \"FieldSpecificationList\" /* FieldSpecificationList */: {\r\n            const isMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node);\r\n            const fieldsArray = node.content;\r\n            visitWrapped(state, node);\r\n            if (node.maybeOpenRecordMarkerConstant) {\r\n                const openRecordMarkerConstant = node.maybeOpenRecordMarkerConstant;\r\n                let workspace;\r\n                if (isMultiline) {\r\n                    workspace = {\r\n                        maybeIndentationChange: 1,\r\n                        maybeWriteKind: \"Indented\" /* Indented */,\r\n                    };\r\n                }\r\n                else if (fieldsArray.elements.length) {\r\n                    workspace = { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ };\r\n                }\r\n                else {\r\n                    workspace = { maybeWriteKind: \"Any\" /* Any */ };\r\n                }\r\n                setWorkspace(state, openRecordMarkerConstant, workspace);\r\n            }\r\n            break;\r\n        }\r\n        case \"FieldTypeSpecification\" /* FieldTypeSpecification */: {\r\n            // can't use propagateWriteKind as I want the equalConstant on the\r\n            // same line as the previous node (FieldParameter).\r\n            const workspace = getWorkspace(state, node);\r\n            // assumes SerializerWriteKind.Indented -> maybeIndentationChange === 1\r\n            if (workspace.maybeWriteKind === \"Indented\" /* Indented */) {\r\n                setWorkspace(state, node.equalConstant, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n                setWorkspace(state, node.fieldType, {\r\n                    maybeIndentationChange: 1,\r\n                    maybeWriteKind: \"Indented\" /* Indented */,\r\n                });\r\n            }\r\n            else {\r\n                propagateWriteKind(state, node, node.equalConstant);\r\n                setWorkspace(state, node.fieldType, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n            }\r\n            break;\r\n        }\r\n        case \"FunctionExpression\" /* FunctionExpression */: {\r\n            propagateWriteKind(state, node, node.parameters);\r\n            if (node.maybeFunctionReturnType) {\r\n                const functionReturnType = node.maybeFunctionReturnType;\r\n                setWorkspace(state, functionReturnType, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n            }\r\n            setWorkspace(state, node.fatArrowConstant, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n            const expressionIsMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node.expression);\r\n            let expressionWorkspace;\r\n            if (expressionIsMultiline) {\r\n                expressionWorkspace = {\r\n                    maybeIndentationChange: 1,\r\n                    maybeWriteKind: \"Indented\" /* Indented */,\r\n                };\r\n            }\r\n            else {\r\n                expressionWorkspace = { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ };\r\n            }\r\n            setWorkspace(state, node.expression, expressionWorkspace);\r\n            break;\r\n        }\r\n        case \"FunctionType\" /* FunctionType */: {\r\n            propagateWriteKind(state, node, node.functionConstant);\r\n            const commonWorkspace = {\r\n                maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */,\r\n            };\r\n            setWorkspace(state, node.parameters, commonWorkspace);\r\n            setWorkspace(state, node.functionReturnType, commonWorkspace);\r\n            break;\r\n        }\r\n        case \"IdentifierExpression\" /* IdentifierExpression */:\r\n            if (maybePropagateWriteKind(state, node, node.maybeInclusiveConstant)) {\r\n                setWorkspace(state, node.identifier, DefaultWorkspace);\r\n            }\r\n            else {\r\n                propagateWriteKind(state, node, node.identifier);\r\n            }\r\n            break;\r\n        case \"IfExpression\" /* IfExpression */:\r\n            visitIfExpression(state, node);\r\n            break;\r\n        case \"InvokeExpression\" /* InvokeExpression */:\r\n            visitWrapped(state, node);\r\n            break;\r\n        case \"ItemAccessExpression\" /* ItemAccessExpression */: {\r\n            const isMultilineMap = state.isMultilineMap;\r\n            const isMultiline = common_2.expectGetIsMultiline(isMultilineMap, node);\r\n            const itemSelector = node.content;\r\n            const itemSelectorIsMultiline = common_2.expectGetIsMultiline(isMultilineMap, itemSelector);\r\n            visitWrapped(state, node);\r\n            if (isMultiline) {\r\n                setWorkspace(state, itemSelector, {\r\n                    maybeIndentationChange: 1,\r\n                    maybeWriteKind: \"Indented\" /* Indented */,\r\n                });\r\n            }\r\n            let closeWrapperConstantWorkspace;\r\n            if (itemSelectorIsMultiline) {\r\n                switch (itemSelector.kind) {\r\n                    case \"ListExpression\" /* ListExpression */:\r\n                    case \"RecordExpression\" /* RecordExpression */:\r\n                        closeWrapperConstantWorkspace = { maybeWriteKind: \"Any\" /* Any */ };\r\n                        break;\r\n                    default:\r\n                        closeWrapperConstantWorkspace = { maybeWriteKind: \"Indented\" /* Indented */ };\r\n                        break;\r\n                }\r\n            }\r\n            else {\r\n                closeWrapperConstantWorkspace = {\r\n                    maybeWriteKind: \"Any\" /* Any */,\r\n                };\r\n            }\r\n            setWorkspace(state, node.closeWrapperConstant, closeWrapperConstantWorkspace);\r\n            break;\r\n        }\r\n        case \"LetExpression\" /* LetExpression */:\r\n            propagateWriteKind(state, node, node.letConstant);\r\n            setWorkspace(state, node.inConstant, { maybeWriteKind: \"Indented\" /* Indented */ });\r\n            setWorkspace(state, node.expression, {\r\n                maybeIndentationChange: 1,\r\n                maybeWriteKind: \"Indented\" /* Indented */,\r\n            });\r\n            break;\r\n        case \"ListType\" /* ListType */: {\r\n            const isMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node);\r\n            visitWrapped(state, node);\r\n            if (isMultiline) {\r\n                setWorkspace(state, node.content, {\r\n                    maybeIndentationChange: 1,\r\n                    maybeWriteKind: \"Indented\" /* Indented */,\r\n                });\r\n            }\r\n            break;\r\n        }\r\n        case \"MetadataExpression\" /* MetadataExpression */: {\r\n            const isMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node);\r\n            propagateWriteKind(state, node, node.left);\r\n            let otherWorkspace;\r\n            if (isMultiline) {\r\n                otherWorkspace = {\r\n                    maybeWriteKind: \"Indented\" /* Indented */,\r\n                };\r\n            }\r\n            else {\r\n                otherWorkspace = {\r\n                    maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */,\r\n                };\r\n            }\r\n            setWorkspace(state, node.operatorConstant, otherWorkspace);\r\n            setWorkspace(state, node.right, otherWorkspace);\r\n            break;\r\n        }\r\n        case \"NotImplementedExpression\" /* NotImplementedExpression */:\r\n            propagateWriteKind(state, node, node.ellipsisConstant);\r\n            break;\r\n        case \"Parameter\" /* Parameter */: {\r\n            if (node.maybeOptionalConstant) {\r\n                const optionalConstant = node.maybeOptionalConstant;\r\n                setWorkspace(state, optionalConstant, { maybeWriteKind: \"PaddedRight\" /* PaddedRight */ });\r\n            }\r\n            if (node.maybeParameterType) {\r\n                const parameterType = node.maybeParameterType;\r\n                setWorkspace(state, parameterType, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n            }\r\n            break;\r\n        }\r\n        case \"ParameterList\" /* ParameterList */:\r\n            propagateWriteKind(state, node, node.openWrapperConstant);\r\n            break;\r\n        case \"ParenthesizedExpression\" /* ParenthesizedExpression */: {\r\n            const isMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node);\r\n            visitWrapped(state, node);\r\n            if (isMultiline) {\r\n                setWorkspace(state, node.content, {\r\n                    maybeIndentationChange: 1,\r\n                    maybeWriteKind: \"Indented\" /* Indented */,\r\n                });\r\n            }\r\n            break;\r\n        }\r\n        case \"PrimitiveType\" /* PrimitiveType */:\r\n            propagateWriteKind(state, node, node.primitiveType);\r\n            break;\r\n        // Assumes the parent must be a CsvArray owned by a ListExpression,\r\n        // meaning the Workspace can only get set in visitCsvArray.\r\n        case \"RangeExpression\" /* RangeExpression */: {\r\n            const workspace = getWorkspace(state, node);\r\n            propagateWriteKind(state, node, node.left);\r\n            if (workspace.maybeWriteKind === \"Indented\" /* Indented */) {\r\n                setWorkspace(state, node.rangeConstant, { maybeWriteKind: \"Indented\" /* Indented */ });\r\n                setWorkspace(state, node.right, { maybeWriteKind: \"Indented\" /* Indented */ });\r\n            }\r\n            break;\r\n        }\r\n        case \"RecordType\" /* RecordType */: {\r\n            const workspace = getWorkspace(state, node);\r\n            setWorkspace(state, node.fields, workspace);\r\n            break;\r\n        }\r\n        case \"RecursivePrimaryExpression\" /* RecursivePrimaryExpression */:\r\n            propagateWriteKind(state, node, node.head);\r\n            break;\r\n        case \"TableType\" /* TableType */: {\r\n            propagateWriteKind(state, node, node.tableConstant);\r\n            const rowType = node.rowType;\r\n            const rowTypeIsMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, rowType);\r\n            let rowTypeWorkspace;\r\n            if (rowTypeIsMultiline) {\r\n                rowTypeWorkspace = {\r\n                    maybeIndentationChange: 1,\r\n                    maybeWriteKind: \"Indented\" /* Indented */,\r\n                };\r\n            }\r\n            else {\r\n                rowTypeWorkspace = {\r\n                    maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */,\r\n                };\r\n            }\r\n            setWorkspace(state, rowType, rowTypeWorkspace);\r\n            break;\r\n        }\r\n        case \"Section\" /* Section */: {\r\n            const isMultilineMap = state.isMultilineMap;\r\n            let sectionConstantWriteKind = \"Any\" /* Any */;\r\n            const maybeLiteralAttributes = node.maybeLiteralAttributes;\r\n            if (maybeLiteralAttributes) {\r\n                const literalAttributes = maybeLiteralAttributes;\r\n                if (common_2.expectGetIsMultiline(isMultilineMap, literalAttributes)) {\r\n                    sectionConstantWriteKind = \"Indented\" /* Indented */;\r\n                }\r\n                else {\r\n                    sectionConstantWriteKind = \"PaddedLeft\" /* PaddedLeft */;\r\n                }\r\n            }\r\n            setWorkspace(state, node.sectionConstant, { maybeWriteKind: sectionConstantWriteKind });\r\n            const maybeName = node.maybeName;\r\n            if (maybeName) {\r\n                const name = maybeName;\r\n                setWorkspace(state, name, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n            }\r\n            break;\r\n        }\r\n        case \"SectionMember\" /* SectionMember */: {\r\n            const isMultilineMap = state.isMultilineMap;\r\n            let maybeSharedConstantWriteKind;\r\n            let isNameExpressionPairWorkspaceSet = false;\r\n            if (node.maybeLiteralAttributes) {\r\n                const literalAttributes = node.maybeLiteralAttributes;\r\n                propagateWriteKind(state, node, literalAttributes);\r\n                if (common_2.expectGetIsMultiline(isMultilineMap, literalAttributes)) {\r\n                    maybeSharedConstantWriteKind = \"Indented\" /* Indented */;\r\n                }\r\n                else {\r\n                    maybeSharedConstantWriteKind = \"PaddedLeft\" /* PaddedLeft */;\r\n                }\r\n            }\r\n            else if (node.maybeSharedConstant) {\r\n                const sharedConstant = node.maybeSharedConstant;\r\n                propagateWriteKind(state, node, sharedConstant);\r\n            }\r\n            else {\r\n                propagateWriteKind(state, node, node.namePairedExpression);\r\n                isNameExpressionPairWorkspaceSet = true;\r\n            }\r\n            if (node.maybeSharedConstant && maybeSharedConstantWriteKind) {\r\n                const sharedConstant = node.maybeSharedConstant;\r\n                setWorkspace(state, sharedConstant, { maybeWriteKind: maybeSharedConstantWriteKind });\r\n            }\r\n            if (!isNameExpressionPairWorkspaceSet) {\r\n                let isNameExpressionPairIndented = false;\r\n                if (node.maybeSharedConstant) {\r\n                    const sharedConstant = node.maybeSharedConstant;\r\n                    if (common_2.expectGetIsMultiline(isMultilineMap, sharedConstant)) {\r\n                        isNameExpressionPairIndented = true;\r\n                    }\r\n                }\r\n                else if (node.maybeLiteralAttributes) {\r\n                    const literalAttributes = node.maybeLiteralAttributes;\r\n                    if (common_2.expectGetIsMultiline(isMultilineMap, literalAttributes)) {\r\n                        isNameExpressionPairIndented = true;\r\n                    }\r\n                }\r\n                let writeKind;\r\n                if (isNameExpressionPairIndented) {\r\n                    writeKind = \"Indented\" /* Indented */;\r\n                }\r\n                else {\r\n                    writeKind = \"PaddedLeft\" /* PaddedLeft */;\r\n                }\r\n                setWorkspace(state, node.namePairedExpression, { maybeWriteKind: writeKind });\r\n            }\r\n            break;\r\n        }\r\n        // TPairedConstant overload\r\n        case \"TypePrimaryType\" /* TypePrimaryType */: {\r\n            propagateWriteKind(state, node, node.constant);\r\n            const paired = node.paired;\r\n            const pairedIsMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, paired);\r\n            let pairedWorkspace;\r\n            if (skipPrimaryTypeIndentation(paired)) {\r\n                pairedWorkspace = {\r\n                    maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */,\r\n                };\r\n            }\r\n            else if (pairedIsMultiline) {\r\n                pairedWorkspace = {\r\n                    maybeIndentationChange: 1,\r\n                    maybeWriteKind: \"Indented\" /* Indented */,\r\n                };\r\n            }\r\n            else {\r\n                pairedWorkspace = { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ };\r\n            }\r\n            setWorkspace(state, paired, pairedWorkspace);\r\n            break;\r\n        }\r\n        case \"UnaryExpression\" /* UnaryExpression */: {\r\n            propagateWriteKind(state, node, node.operators);\r\n            const operators = node.operators.elements;\r\n            const lastOperator = operators[operators.length - 1];\r\n            if (lastOperator.constantKind === \"not\" /* Not */) {\r\n                setWorkspace(state, node.typeExpression, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n            }\r\n            break;\r\n        }\r\n        // Leaf nodes.\r\n        // If a parent gave the leaf node a workspace it assigns indentationChange,\r\n        // while writeType can be overwritten if the leaf node has a multiline comment attached.\r\n        case \"Constant\" /* Constant */:\r\n        case \"GeneralizedIdentifier\" /* GeneralizedIdentifier */:\r\n        case \"Identifier\" /* Identifier */:\r\n        case \"LiteralExpression\" /* LiteralExpression */: {\r\n            const workspace = getWorkspace(state, node);\r\n            maybeSetIndentationChange(state, node, workspace.maybeIndentationChange);\r\n            let maybeWriteKind = workspace.maybeWriteKind;\r\n            maybeWriteKind = visitComments(state, node, maybeWriteKind);\r\n            if (!maybeWriteKind) {\r\n                const details = {\r\n                    node,\r\n                    maybeWriteKind: maybeWriteKind,\r\n                };\r\n                throw new powerquery_parser_1.CommonError.InvariantError(\"maybeWriteKind should be truthy\", details);\r\n            }\r\n            state.result.writeKind.set(node.id, maybeWriteKind);\r\n            break;\r\n        }\r\n        default:\r\n            powerquery_parser_1.isNever(node);\r\n    }\r\n}\r\nfunction getWorkspace(state, node, fallback = DefaultWorkspace) {\r\n    const maybeWorkspace = state.workspaceMap.get(node.id);\r\n    if (maybeWorkspace !== undefined) {\r\n        return maybeWorkspace;\r\n    }\r\n    else {\r\n        return fallback;\r\n    }\r\n}\r\nfunction setWorkspace(state, node, workspace) {\r\n    state.workspaceMap.set(node.id, workspace);\r\n}\r\n// sets indentationChange for the parent using the parent's Workspace,\r\n// then propagates the writeKind to firstChild by setting its Workspace.\r\nfunction propagateWriteKind(state, parent, firstChild) {\r\n    const workspace = getWorkspace(state, parent);\r\n    maybeSetIndentationChange(state, parent, workspace.maybeIndentationChange);\r\n    const maybeWriteKind = workspace.maybeWriteKind;\r\n    if (maybeWriteKind) {\r\n        setWorkspace(state, firstChild, { maybeWriteKind: maybeWriteKind });\r\n    }\r\n}\r\nfunction maybePropagateWriteKind(state, parent, maybeFirstChild) {\r\n    if (maybeFirstChild) {\r\n        const firstChild = maybeFirstChild;\r\n        propagateWriteKind(state, parent, firstChild);\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction maybeSetIndentationChange(state, node, maybeIndentationChange) {\r\n    if (maybeIndentationChange) {\r\n        state.result.indentationChange.set(node.id, maybeIndentationChange);\r\n    }\r\n}\r\n// serves three purposes:\r\n//  * propagates the TNode's writeKind to the first comment\r\n//  * assigns writeKind for all comments attached to the TNode\r\n//  * conditionally changes the TNode's writeKind based on the last comment's writeKind\r\n//\r\n// for example if maybeWriteKind === PaddedLeft and the TNode has two line comments:\r\n//  * the first comment is set to PaddedLeft (from maybeWriteKind)\r\n//  * the second comment is set to Indented (default for comment with newline)\r\n//  * the TNode is set to Indented (last comment contains a newline)\r\nfunction visitComments(state, node, maybeWriteKind) {\r\n    const nodeId = node.id;\r\n    const maybeComments = state.commentCollectionMap.get(nodeId);\r\n    if (!maybeComments) {\r\n        return maybeWriteKind;\r\n    }\r\n    const commentParameters = [];\r\n    const comments = maybeComments.prefixedComments;\r\n    const numComments = comments.length;\r\n    if (!numComments) {\r\n        return maybeWriteKind;\r\n    }\r\n    for (let index = 0; index < numComments; index += 1) {\r\n        const comment = comments[index];\r\n        const previousComment = comments[index - 1];\r\n        let writeKind;\r\n        if (index === 0) {\r\n            writeKind = maybeWriteKind || \"Any\" /* Any */;\r\n        }\r\n        else if (comment.containsNewline) {\r\n            writeKind = \"Indented\" /* Indented */;\r\n        }\r\n        else if (previousComment && previousComment.containsNewline) {\r\n            writeKind = \"Indented\" /* Indented */;\r\n        }\r\n        else {\r\n            writeKind = \"Any\" /* Any */;\r\n        }\r\n        commentParameters.push({\r\n            literal: comment.data,\r\n            writeKind,\r\n        });\r\n    }\r\n    state.result.comments.set(nodeId, commentParameters);\r\n    const lastComment = comments[comments.length - 1];\r\n    if (lastComment.containsNewline) {\r\n        maybeWriteKind = \"Indented\" /* Indented */;\r\n    }\r\n    else {\r\n        maybeWriteKind = \"PaddedLeft\" /* PaddedLeft */;\r\n    }\r\n    return maybeWriteKind;\r\n}\r\nfunction visitKeyValuePair(state, node) {\r\n    const isMultilineMap = state.isMultilineMap;\r\n    const equalConstantIsMultiline = common_2.expectGetIsMultiline(isMultilineMap, node.equalConstant);\r\n    const valueIsMultiline = common_2.expectGetIsMultiline(isMultilineMap, node.value);\r\n    propagateWriteKind(state, node, node.key);\r\n    let equalWorkspace;\r\n    if (equalConstantIsMultiline) {\r\n        equalWorkspace = { maybeWriteKind: \"Indented\" /* Indented */ };\r\n    }\r\n    else {\r\n        equalWorkspace = { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ };\r\n    }\r\n    setWorkspace(state, node.equalConstant, equalWorkspace);\r\n    let valueWorkspace;\r\n    if (valueIsMultiline) {\r\n        valueWorkspace = {\r\n            maybeIndentationChange: 1,\r\n            maybeWriteKind: \"Indented\" /* Indented */,\r\n        };\r\n    }\r\n    else {\r\n        valueWorkspace = { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ };\r\n    }\r\n    setWorkspace(state, node.value, valueWorkspace);\r\n}\r\nfunction visitArrayWrapper(state, node) {\r\n    const isMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node);\r\n    let maybeWriteKind;\r\n    let maybeIndentationChange;\r\n    if (isMultiline) {\r\n        maybeWriteKind = \"Indented\" /* Indented */;\r\n        maybeIndentationChange = 1;\r\n    }\r\n    else {\r\n        maybeWriteKind = \"Any\" /* Any */;\r\n    }\r\n    for (const element of node.elements) {\r\n        setWorkspace(state, element, {\r\n            maybeWriteKind,\r\n            maybeIndentationChange,\r\n        });\r\n    }\r\n}\r\nfunction visitArrayWrapperForSectionMembers(state, node) {\r\n    let maybePreviousSectionMember;\r\n    for (const member of node.elements) {\r\n        if (member.kind !== \"SectionMember\" /* SectionMember */) {\r\n            const details = { nodeKind: member.kind };\r\n            throw new powerquery_parser_1.CommonError.InvariantError(`expected sectionMember`, details);\r\n        }\r\n        let memberWriteKind = \"DoubleNewline\" /* DoubleNewline */;\r\n        if (maybePreviousSectionMember && isSectionMemeberSimilarScope(member, maybePreviousSectionMember)) {\r\n            memberWriteKind = \"Indented\" /* Indented */;\r\n        }\r\n        setWorkspace(state, member, { maybeWriteKind: memberWriteKind });\r\n        maybePreviousSectionMember = member;\r\n    }\r\n}\r\nfunction visitArrayWrapperForUnaryExpression(state, node) {\r\n    // `not` is an unary operator which needs to be padded.\r\n    // The default Any write kind is fine for the other operators (`+` and `-`).\r\n    const elements = node.elements;\r\n    const numElements = node.elements.length;\r\n    propagateWriteKind(state, node, elements[0]);\r\n    let previousWasNotOperator = elements[0].constantKind === \"not\" /* Not */;\r\n    for (let index = 1; index < numElements; index += 1) {\r\n        const operatorConstant = elements[index];\r\n        if (previousWasNotOperator || operatorConstant.constantKind === \"not\" /* Not */) {\r\n            setWorkspace(state, operatorConstant, { maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */ });\r\n        }\r\n        previousWasNotOperator = operatorConstant.constantKind === \"not\" /* Not */;\r\n    }\r\n}\r\nfunction visitIfExpression(state, node) {\r\n    propagateWriteKind(state, node, node.ifConstant);\r\n    const conditionIsMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, node.condition);\r\n    let conditionWorkspace;\r\n    let thenConstantWorkspace;\r\n    if (conditionIsMultiline) {\r\n        conditionWorkspace = {\r\n            maybeIndentationChange: 1,\r\n            maybeWriteKind: \"Indented\" /* Indented */,\r\n        };\r\n        thenConstantWorkspace = {\r\n            maybeWriteKind: \"Indented\" /* Indented */,\r\n        };\r\n    }\r\n    else {\r\n        conditionWorkspace = {\r\n            maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */,\r\n        };\r\n        thenConstantWorkspace = {\r\n            maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */,\r\n        };\r\n    }\r\n    setWorkspace(state, node.condition, conditionWorkspace);\r\n    setWorkspace(state, node.thenConstant, thenConstantWorkspace);\r\n    setWorkspace(state, node.trueExpression, {\r\n        maybeIndentationChange: 1,\r\n        maybeWriteKind: \"Indented\" /* Indented */,\r\n    });\r\n    const falseExpression = node.falseExpression;\r\n    let falseExpressionWorkspace;\r\n    if (falseExpression.kind === \"IfExpression\" /* IfExpression */) {\r\n        falseExpressionWorkspace = {\r\n            maybeWriteKind: \"PaddedLeft\" /* PaddedLeft */,\r\n        };\r\n    }\r\n    else {\r\n        falseExpressionWorkspace = {\r\n            maybeIndentationChange: 1,\r\n            maybeWriteKind: \"Indented\" /* Indented */,\r\n        };\r\n    }\r\n    setWorkspace(state, node.elseConstant, { maybeWriteKind: \"Indented\" /* Indented */ });\r\n    setWorkspace(state, falseExpression, falseExpressionWorkspace);\r\n}\r\nfunction visitWrapped(state, wrapped) {\r\n    const isMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, wrapped);\r\n    // not const as it's conditionally overwritten if SerializerWriteKind.Indented\r\n    let workspace = getWorkspace(state, wrapped);\r\n    if (workspace.maybeWriteKind === \"Indented\" /* Indented */) {\r\n        const writeKind = wrapperOpenWriteKind(state, wrapped);\r\n        if (writeKind !== \"Indented\" /* Indented */) {\r\n            workspace = {\r\n                maybeIndentationChange: undefined,\r\n                maybeWriteKind: writeKind,\r\n            };\r\n        }\r\n    }\r\n    setWorkspace(state, wrapped, workspace);\r\n    propagateWriteKind(state, wrapped, wrapped.openWrapperConstant);\r\n    if (isMultiline) {\r\n        setWorkspace(state, wrapped.closeWrapperConstant, { maybeWriteKind: \"Indented\" /* Indented */ });\r\n    }\r\n}\r\nfunction wrapperOpenWriteKind(state, wrapped) {\r\n    // an open constant is multiline iff it is has a multiline comment\r\n    const openIsMultiline = common_2.expectGetIsMultiline(state.isMultilineMap, wrapped.openWrapperConstant);\r\n    if (openIsMultiline) {\r\n        return \"Indented\" /* Indented */;\r\n    }\r\n    switch (wrapped.kind) {\r\n        case \"InvokeExpression\" /* InvokeExpression */:\r\n        case \"ItemAccessExpression\" /* ItemAccessExpression */:\r\n            return \"Any\" /* Any */;\r\n        default:\r\n            break;\r\n    }\r\n    const nodeIdMapCollection = state.nodeIdMapCollection;\r\n    let maybeParent = common_1.maybeGetParent(nodeIdMapCollection, wrapped.id);\r\n    if (maybeParent && maybeParent.kind === \"Csv\" /* Csv */) {\r\n        maybeParent = common_1.maybeGetParent(nodeIdMapCollection, maybeParent.id);\r\n    }\r\n    if (maybeParent && maybeParent.kind === \"ArrayWrapper\" /* ArrayWrapper */) {\r\n        maybeParent = common_1.maybeGetParent(nodeIdMapCollection, maybeParent.id);\r\n    }\r\n    if (!maybeParent) {\r\n        return \"Indented\" /* Indented */;\r\n    }\r\n    switch (maybeParent.kind) {\r\n        case \"GeneralizedIdentifierPairedAnyLiteral\" /* GeneralizedIdentifierPairedAnyLiteral */:\r\n        case \"GeneralizedIdentifierPairedExpression\" /* GeneralizedIdentifierPairedExpression */:\r\n        case \"IdentifierExpressionPairedExpression\" /* IdentifierExpressionPairedExpression */:\r\n        case \"IdentifierPairedExpression\" /* IdentifierPairedExpression */:\r\n        case \"ListType\" /* ListType */:\r\n        case \"RecordType\" /* RecordType */:\r\n        case \"TableType\" /* TableType */:\r\n        case \"TypePrimaryType\" /* TypePrimaryType */:\r\n            return \"PaddedLeft\" /* PaddedLeft */;\r\n        case \"ItemAccessExpression\" /* ItemAccessExpression */:\r\n            return \"Any\" /* Any */;\r\n        default:\r\n            return \"Indented\" /* Indented */;\r\n    }\r\n}\r\nfunction skipPrimaryTypeIndentation(node) {\r\n    switch (node.kind) {\r\n        case \"FunctionType\" /* FunctionType */:\r\n        case \"NullableType\" /* NullableType */:\r\n        case \"TableType\" /* TableType */:\r\n            return true;\r\n        case \"ListType\" /* ListType */:\r\n        case \"PrimitiveType\" /* PrimitiveType */:\r\n        case \"RecordType\" /* RecordType */:\r\n            return false;\r\n        default:\r\n            powerquery_parser_1.isNever(node);\r\n    }\r\n    return false;\r\n}\r\n// By default SectionMembers are two newlines apart from one another.\r\n// Like-named sections (ex. Foo.Alpha, Foo.Bravo) should be placed one newline apart.\r\nfunction isSectionMemeberSimilarScope(left, right) {\r\n    const leftName = left.namePairedExpression.key;\r\n    const leftScope = leftName.literal.split(\".\");\r\n    const rightName = right.namePairedExpression.key;\r\n    const rightScope = rightName.literal.split(\".\");\r\n    return leftScope[0] === rightScope[0];\r\n}\r\n//# sourceMappingURL=serializerParameter.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst powerquery_parser_1 = require(\"@microsoft/powerquery-parser\");\r\nconst serializerParameter_1 = require(\"./passes/serializerParameter\");\r\nclass Serializer {\r\n    constructor(document, nodeIdMapCollection, passthroughMaps, indentationLiteral, newlineLiteral, formatted = \"\", currentLine = \"\", indentationLevel = 0, indentationCache = [\"\"]) {\r\n        this.document = document;\r\n        this.nodeIdMapCollection = nodeIdMapCollection;\r\n        this.passthroughMaps = passthroughMaps;\r\n        this.indentationLiteral = indentationLiteral;\r\n        this.newlineLiteral = newlineLiteral;\r\n        this.formatted = formatted;\r\n        this.currentLine = currentLine;\r\n        this.indentationLevel = indentationLevel;\r\n        this.indentationCache = indentationCache;\r\n        this.expandIndentationCache(10);\r\n    }\r\n    static run(settings) {\r\n        const serializer = new Serializer(settings.document, settings.nodeIdMapCollection, settings.maps, settings.indentationLiteral, settings.newlineLiteral);\r\n        try {\r\n            return {\r\n                kind: \"Ok\" /* Ok */,\r\n                value: serializer.run(),\r\n            };\r\n        }\r\n        catch (err) {\r\n            return {\r\n                kind: \"Err\" /* Err */,\r\n                error: powerquery_parser_1.CommonError.ensureCommonError(settings.localizationTemplates, err),\r\n            };\r\n        }\r\n    }\r\n    run() {\r\n        this.visitNode(this.document);\r\n        return this.formatted;\r\n    }\r\n    append(str) {\r\n        this.formatted += str;\r\n        if (str === this.newlineLiteral) {\r\n            this.currentLine = \"\";\r\n        }\r\n        else {\r\n            this.currentLine += str;\r\n        }\r\n    }\r\n    serialize(str, serializerWriteKind) {\r\n        switch (serializerWriteKind) {\r\n            case \"Any\" /* Any */:\r\n                this.append(str);\r\n                break;\r\n            case \"DoubleNewline\" /* DoubleNewline */:\r\n                this.append(this.newlineLiteral);\r\n                this.append(this.newlineLiteral);\r\n                this.append(str);\r\n                break;\r\n            case \"Indented\" /* Indented */:\r\n                this.serializeIndented(str);\r\n                break;\r\n            case \"PaddedLeft\" /* PaddedLeft */:\r\n                this.serializePadded(str, true, false);\r\n                break;\r\n            case \"PaddedRight\" /* PaddedRight */:\r\n                this.serializePadded(str, false, true);\r\n                break;\r\n            default:\r\n                throw powerquery_parser_1.isNever(serializerWriteKind);\r\n        }\r\n    }\r\n    serializeIndented(str) {\r\n        if (this.currentLine !== \"\") {\r\n            this.append(this.newlineLiteral);\r\n        }\r\n        this.append(this.currentIndentation());\r\n        this.append(str);\r\n    }\r\n    serializePadded(str, padLeft, padRight) {\r\n        if (padLeft && this.currentLine) {\r\n            const lastWrittenCharacter = this.currentLine[this.currentLine.length - 1];\r\n            if (lastWrittenCharacter !== \" \" && lastWrittenCharacter !== \"\\t\") {\r\n                this.append(\" \");\r\n            }\r\n        }\r\n        this.append(str);\r\n        if (padRight) {\r\n            this.append(\" \");\r\n        }\r\n    }\r\n    visitNode(node) {\r\n        const nodeId = node.id;\r\n        const maybeIndentationChange = this.passthroughMaps.serializerParameterMap.indentationChange.get(nodeId);\r\n        if (maybeIndentationChange) {\r\n            this.indentationLevel += 1;\r\n        }\r\n        if (node.isLeaf) {\r\n            const maybeComments = this.passthroughMaps.serializerParameterMap.comments.get(nodeId);\r\n            if (maybeComments) {\r\n                this.visitComments(maybeComments);\r\n            }\r\n        }\r\n        switch (node.kind) {\r\n            case \"Constant\" /* Constant */: {\r\n                const writeKind = serializerParameter_1.getSerializerWriteKind(node, this.passthroughMaps.serializerParameterMap);\r\n                this.serialize(node.constantKind, writeKind);\r\n                break;\r\n            }\r\n            case \"GeneralizedIdentifier\" /* GeneralizedIdentifier */:\r\n            case \"Identifier\" /* Identifier */: {\r\n                const writeKind = serializerParameter_1.getSerializerWriteKind(node, this.passthroughMaps.serializerParameterMap);\r\n                this.serialize(`${node.literal}`, writeKind);\r\n                break;\r\n            }\r\n            case \"LiteralExpression\" /* LiteralExpression */: {\r\n                const writeKind = serializerParameter_1.getSerializerWriteKind(node, this.passthroughMaps.serializerParameterMap);\r\n                this.serialize(node.literal, writeKind);\r\n                break;\r\n            }\r\n            default:\r\n                const maybeChildren = powerquery_parser_1.NodeIdMapUtils.maybeAstChildren(this.nodeIdMapCollection, node.id);\r\n                if (maybeChildren === undefined) {\r\n                    break;\r\n                }\r\n                const children = maybeChildren;\r\n                for (const child of children) {\r\n                    this.visitNode(child);\r\n                }\r\n                break;\r\n        }\r\n        if (maybeIndentationChange) {\r\n            this.indentationLevel -= maybeIndentationChange;\r\n        }\r\n    }\r\n    visitComments(collection) {\r\n        for (const comment of collection) {\r\n            this.serialize(comment.literal, comment.writeKind);\r\n        }\r\n    }\r\n    currentIndentation() {\r\n        const maybeIndentationLiteral = this.indentationCache[this.indentationLevel];\r\n        if (maybeIndentationLiteral === undefined) {\r\n            return this.expandIndentationCache(this.indentationLevel);\r\n        }\r\n        else {\r\n            return maybeIndentationLiteral;\r\n        }\r\n    }\r\n    expandIndentationCache(level) {\r\n        for (let index = this.indentationCache.length; index <= level; index += 1) {\r\n            const previousIndentation = this.indentationCache[index - 1] || \"\";\r\n            this.indentationCache[index] = previousIndentation + this.indentationLiteral;\r\n        }\r\n        return this.indentationCache[this.indentationCache.length - 1];\r\n    }\r\n}\r\nexports.Serializer = Serializer;\r\n//# sourceMappingURL=serializer.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./format\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _1 = require(\".\");\r\nfunction removeFirstInstance(collection, element) {\r\n    return removeAtIndex(collection, collection.indexOf(element));\r\n}\r\nexports.removeFirstInstance = removeFirstInstance;\r\nfunction removeAtIndex(collection, index) {\r\n    if (index < 0 || index >= collection.length) {\r\n        const details = {\r\n            index,\r\n            collectionLength: collection.length,\r\n        };\r\n        throw new _1.CommonError.InvariantError(\"index not within array bounds\", details);\r\n    }\r\n    return [...collection.slice(0, index), ...collection.slice(index + 1)];\r\n}\r\nexports.removeAtIndex = removeAtIndex;\r\nfunction findReverse(collection, predicate) {\r\n    const numElements = collection.length;\r\n    for (let index = numElements - 1; index >= 0; index -= 1) {\r\n        const element = collection[index];\r\n        if (predicate(element)) {\r\n            return element;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexports.findReverse = findReverse;\r\n//# sourceMappingURL=arrayUtils.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _1 = require(\".\");\r\nfunction isNever(_) {\r\n    throw new _1.CommonError.InvariantError(`should never be reached`);\r\n}\r\nexports.isNever = isNever;\r\n//# sourceMappingURL=assert.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst localization_1 = require(\"../localization\");\r\nclass CommonError extends Error {\r\n    constructor(innerError) {\r\n        super(innerError.message);\r\n        this.innerError = innerError;\r\n    }\r\n}\r\nexports.CommonError = CommonError;\r\nclass InvariantError extends Error {\r\n    constructor(invariantBroken, maybeDetails = undefined) {\r\n        super(localization_1.Localization.error_common_invariantError(localization_1.DefaultTemplates, invariantBroken, maybeDetails));\r\n        this.invariantBroken = invariantBroken;\r\n        this.maybeDetails = maybeDetails;\r\n    }\r\n}\r\nexports.InvariantError = InvariantError;\r\nclass UnknownError extends Error {\r\n    constructor(templates, innerError) {\r\n        super(localization_1.Localization.error_common_unknown(templates, innerError));\r\n        this.innerError = innerError;\r\n    }\r\n}\r\nexports.UnknownError = UnknownError;\r\nfunction isTInnerCommonError(x) {\r\n    return x instanceof InvariantError || x instanceof UnknownError;\r\n}\r\nexports.isTInnerCommonError = isTInnerCommonError;\r\nfunction ensureCommonError(templates, err) {\r\n    if (isTInnerCommonError(err)) {\r\n        return new CommonError(err);\r\n    }\r\n    else {\r\n        return new CommonError(new UnknownError(templates, err));\r\n    }\r\n}\r\nexports.ensureCommonError = ensureCommonError;\r\n//# sourceMappingURL=error.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ArrayUtils = require(\"./arrayUtils\");\r\nexports.ArrayUtils = ArrayUtils;\r\nconst CommonError = require(\"./error\");\r\nexports.CommonError = CommonError;\r\nconst Pattern = require(\"./patterns\");\r\nexports.Pattern = Pattern;\r\nconst StringUtils = require(\"./stringUtils\");\r\nexports.StringUtils = StringUtils;\r\nconst Traverse = require(\"./traversal\");\r\nexports.Traverse = Traverse;\r\nconst TypeUtils = require(\"./typeUtils\");\r\nexports.TypeUtils = TypeUtils;\r\n__export(require(\"./assert\"));\r\n__export(require(\"./error\"));\r\n__export(require(\"./partialResult\"));\r\n__export(require(\"./patterns\"));\r\n__export(require(\"./result\"));\r\n__export(require(\"./stringUtils\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst PartialResultUtils = require(\"./partialResultUtils\");\r\nexports.PartialResultUtils = PartialResultUtils;\r\n__export(require(\"./partialResult\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=partialResult.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction okFactory(value) {\r\n    return {\r\n        kind: \"Ok\" /* Ok */,\r\n        value,\r\n    };\r\n}\r\nexports.okFactory = okFactory;\r\nfunction mixedFactory(value, error) {\r\n    return {\r\n        kind: \"Mixed\" /* Mixed */,\r\n        value,\r\n        error,\r\n    };\r\n}\r\nexports.mixedFactory = mixedFactory;\r\nfunction errFactory(error) {\r\n    return {\r\n        kind: \"Err\" /* Err */,\r\n        error,\r\n    };\r\n}\r\nexports.errFactory = errFactory;\r\nfunction isOk(result) {\r\n    return result.kind === \"Ok\" /* Ok */;\r\n}\r\nexports.isOk = isOk;\r\nfunction isMixed(result) {\r\n    return result.kind === \"Mixed\" /* Mixed */;\r\n}\r\nexports.isMixed = isMixed;\r\nfunction isErr(result) {\r\n    return result.kind === \"Err\" /* Err */;\r\n}\r\nexports.isErr = isErr;\r\n//# sourceMappingURL=partialResultUtils.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RegExpIdentifier = RegExp(\"(([\\u0041-\\u005a\\u0061-\\u007a\\u00aa\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5-\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400\\u4db5\\u4e00\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\u{10000}-\\u{1000b}\\u{1000d}-\\u{10026}\\u{10028}-\\u{1003a}\\u{1003c}-\\u{1003d}\\u{1003f}-\\u{1004d}\\u{10050}-\\u{1005d}\\u{10080}-\\u{100fa}\\u{10140}-\\u{10174}\\u{10280}-\\u{1029c}\\u{102a0}-\\u{102d0}\\u{10300}-\\u{1031f}\\u{1032d}-\\u{1034a}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039d}\\u{103a0}-\\u{103c3}\\u{103c8}-\\u{103cf}\\u{103d1}-\\u{103d5}\\u{10400}-\\u{1049d}\\u{104b0}-\\u{104d3}\\u{104d8}-\\u{104fb}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10800}-\\u{10805}\\u{10808}\\u{1080a}-\\u{10835}\\u{10837}-\\u{10838}\\u{1083c}\\u{1083f}-\\u{10855}\\u{10860}-\\u{10876}\\u{10880}-\\u{1089e}\\u{108e0}-\\u{108f2}\\u{108f4}-\\u{108f5}\\u{10900}-\\u{10915}\\u{10920}-\\u{10939}\\u{10980}-\\u{109b7}\\u{109be}-\\u{109bf}\\u{10a00}\\u{10a10}-\\u{10a13}\\u{10a15}-\\u{10a17}\\u{10a19}-\\u{10a35}\\u{10a60}-\\u{10a7c}\\u{10a80}-\\u{10a9c}\\u{10ac0}-\\u{10ac7}\\u{10ac9}-\\u{10ae4}\\u{10b00}-\\u{10b35}\\u{10b40}-\\u{10b55}\\u{10b60}-\\u{10b72}\\u{10b80}-\\u{10b91}\\u{10c00}-\\u{10c48}\\u{10c80}-\\u{10cb2}\\u{10cc0}-\\u{10cf2}\\u{10d00}-\\u{10d23}\\u{10f00}-\\u{10f1c}\\u{10f27}\\u{10f30}-\\u{10f45}\\u{11003}-\\u{11037}\\u{11083}-\\u{110af}\\u{110d0}-\\u{110e8}\\u{11103}-\\u{11126}\\u{11144}\\u{11150}-\\u{11172}\\u{11176}\\u{11183}-\\u{111b2}\\u{111c1}-\\u{111c4}\\u{111da}\\u{111dc}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122b}\\u{11280}-\\u{11286}\\u{11288}\\u{1128a}-\\u{1128d}\\u{1128f}-\\u{1129d}\\u{1129f}-\\u{112a8}\\u{112b0}-\\u{112de}\\u{11305}-\\u{1130c}\\u{1130f}-\\u{11310}\\u{11313}-\\u{11328}\\u{1132a}-\\u{11330}\\u{11332}-\\u{11333}\\u{11335}-\\u{11339}\\u{1133d}\\u{11350}\\u{1135d}-\\u{11361}\\u{11400}-\\u{11434}\\u{11447}-\\u{1144a}\\u{11480}-\\u{114af}\\u{114c4}-\\u{114c5}\\u{114c7}\\u{11580}-\\u{115ae}\\u{115d8}-\\u{115db}\\u{11600}-\\u{1162f}\\u{11644}\\u{11680}-\\u{116aa}\\u{11700}-\\u{1171a}\\u{11800}-\\u{1182b}\\u{118a0}-\\u{118df}\\u{118ff}\\u{11a00}\\u{11a0b}-\\u{11a32}\\u{11a3a}\\u{11a50}\\u{11a5c}-\\u{11a83}\\u{11a86}-\\u{11a89}\\u{11a9d}\\u{11ac0}-\\u{11af8}\\u{11c00}-\\u{11c08}\\u{11c0a}-\\u{11c2e}\\u{11c40}\\u{11c72}-\\u{11c8f}\\u{11d00}-\\u{11d06}\\u{11d08}-\\u{11d09}\\u{11d0b}-\\u{11d30}\\u{11d46}\\u{11d60}-\\u{11d65}\\u{11d67}-\\u{11d68}\\u{11d6a}-\\u{11d89}\\u{11d98}\\u{11ee0}-\\u{11ef2}\\u{12000}-\\u{12399}\\u{12400}-\\u{1246e}\\u{12480}-\\u{12543}\\u{13000}-\\u{1342e}\\u{14400}-\\u{14646}\\u{16800}-\\u{16a38}\\u{16a40}-\\u{16a5e}\\u{16ad0}-\\u{16aed}\\u{16b00}-\\u{16b2f}\\u{16b40}-\\u{16b43}\\u{16b63}-\\u{16b77}\\u{16b7d}-\\u{16b8f}\\u{16e40}-\\u{16e7f}\\u{16f00}-\\u{16f44}\\u{16f50}\\u{16f93}-\\u{16f9f}\\u{16fe0}-\\u{16fe1}\\u{17000}\\u{187f1}\\u{18800}-\\u{18af2}\\u{1b000}-\\u{1b11e}\\u{1b170}-\\u{1b2fb}\\u{1bc00}-\\u{1bc6a}\\u{1bc70}-\\u{1bc7c}\\u{1bc80}-\\u{1bc88}\\u{1bc90}-\\u{1bc99}\\u{1d400}-\\u{1d454}\\u{1d456}-\\u{1d49c}\\u{1d49e}-\\u{1d49f}\\u{1d4a2}\\u{1d4a5}-\\u{1d4a6}\\u{1d4a9}-\\u{1d4ac}\\u{1d4ae}-\\u{1d4b9}\\u{1d4bb}\\u{1d4bd}-\\u{1d4c3}\\u{1d4c5}-\\u{1d505}\\u{1d507}-\\u{1d50a}\\u{1d50d}-\\u{1d514}\\u{1d516}-\\u{1d51c}\\u{1d51e}-\\u{1d539}\\u{1d53b}-\\u{1d53e}\\u{1d540}-\\u{1d544}\\u{1d546}\\u{1d54a}-\\u{1d550}\\u{1d552}-\\u{1d6a5}\\u{1d6a8}-\\u{1d6c0}\\u{1d6c2}-\\u{1d6da}\\u{1d6dc}-\\u{1d6fa}\\u{1d6fc}-\\u{1d714}\\u{1d716}-\\u{1d734}\\u{1d736}-\\u{1d74e}\\u{1d750}-\\u{1d76e}\\u{1d770}-\\u{1d788}\\u{1d78a}-\\u{1d7a8}\\u{1d7aa}-\\u{1d7c2}\\u{1d7c4}-\\u{1d7cb}\\u{1e800}-\\u{1e8c4}\\u{1e900}-\\u{1e943}\\u{1ee00}-\\u{1ee03}\\u{1ee05}-\\u{1ee1f}\\u{1ee21}-\\u{1ee22}\\u{1ee24}\\u{1ee27}\\u{1ee29}-\\u{1ee32}\\u{1ee34}-\\u{1ee37}\\u{1ee39}\\u{1ee3b}\\u{1ee42}\\u{1ee47}\\u{1ee49}\\u{1ee4b}\\u{1ee4d}-\\u{1ee4f}\\u{1ee51}-\\u{1ee52}\\u{1ee54}\\u{1ee57}\\u{1ee59}\\u{1ee5b}\\u{1ee5d}\\u{1ee5f}\\u{1ee61}-\\u{1ee62}\\u{1ee64}\\u{1ee67}-\\u{1ee6a}\\u{1ee6c}-\\u{1ee72}\\u{1ee74}-\\u{1ee77}\\u{1ee79}-\\u{1ee7c}\\u{1ee7e}\\u{1ee80}-\\u{1ee89}\\u{1ee8b}-\\u{1ee9b}\\u{1eea1}-\\u{1eea3}\\u{1eea5}-\\u{1eea9}\\u{1eeab}-\\u{1eebb}\\u{20000}\\u{2a6d6}\\u{2a700}\\u{2b734}\\u{2b740}\\u{2b81d}\\u{2b820}\\u{2cea1}\\u{2ceb0}\\u{2ebe0}\\u{2f800}-\\u{2fa1d}\\u005f][\\u0030-\\u0039\\u0041-\\u005a\\u005f\\u0061-\\u007a\\u00aa\\u00ad\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0600-\\u0605\\u0610-\\u061a\\u061c\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dd\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u070f-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180e\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cf9\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u200b-\\u200f\\u202a-\\u202e\\u203f-\\u2040\\u2054\\u2060-\\u2064\\u2066-\\u206f\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400\\u4db5\\u4e00\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\ufeff\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\ufff9-\\ufffb\\u{10000}-\\u{1000b}\\u{1000d}-\\u{10026}\\u{10028}-\\u{1003a}\\u{1003c}-\\u{1003d}\\u{1003f}-\\u{1004d}\\u{10050}-\\u{1005d}\\u{10080}-\\u{100fa}\\u{10140}-\\u{10174}\\u{101fd}\\u{10280}-\\u{1029c}\\u{102a0}-\\u{102d0}\\u{102e0}\\u{10300}-\\u{1031f}\\u{1032d}-\\u{1034a}\\u{10350}-\\u{1037a}\\u{10380}-\\u{1039d}\\u{103a0}-\\u{103c3}\\u{103c8}-\\u{103cf}\\u{103d1}-\\u{103d5}\\u{10400}-\\u{1049d}\\u{104a0}-\\u{104a9}\\u{104b0}-\\u{104d3}\\u{104d8}-\\u{104fb}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10800}-\\u{10805}\\u{10808}\\u{1080a}-\\u{10835}\\u{10837}-\\u{10838}\\u{1083c}\\u{1083f}-\\u{10855}\\u{10860}-\\u{10876}\\u{10880}-\\u{1089e}\\u{108e0}-\\u{108f2}\\u{108f4}-\\u{108f5}\\u{10900}-\\u{10915}\\u{10920}-\\u{10939}\\u{10980}-\\u{109b7}\\u{109be}-\\u{109bf}\\u{10a00}-\\u{10a03}\\u{10a05}-\\u{10a06}\\u{10a0c}-\\u{10a13}\\u{10a15}-\\u{10a17}\\u{10a19}-\\u{10a35}\\u{10a38}-\\u{10a3a}\\u{10a3f}\\u{10a60}-\\u{10a7c}\\u{10a80}-\\u{10a9c}\\u{10ac0}-\\u{10ac7}\\u{10ac9}-\\u{10ae6}\\u{10b00}-\\u{10b35}\\u{10b40}-\\u{10b55}\\u{10b60}-\\u{10b72}\\u{10b80}-\\u{10b91}\\u{10c00}-\\u{10c48}\\u{10c80}-\\u{10cb2}\\u{10cc0}-\\u{10cf2}\\u{10d00}-\\u{10d27}\\u{10d30}-\\u{10d39}\\u{10f00}-\\u{10f1c}\\u{10f27}\\u{10f30}-\\u{10f50}\\u{11000}-\\u{11046}\\u{11066}-\\u{1106f}\\u{1107f}-\\u{110ba}\\u{110bd}\\u{110cd}\\u{110d0}-\\u{110e8}\\u{110f0}-\\u{110f9}\\u{11100}-\\u{11134}\\u{11136}-\\u{1113f}\\u{11144}-\\u{11146}\\u{11150}-\\u{11173}\\u{11176}\\u{11180}-\\u{111c4}\\u{111c9}-\\u{111cc}\\u{111d0}-\\u{111da}\\u{111dc}\\u{11200}-\\u{11211}\\u{11213}-\\u{11237}\\u{1123e}\\u{11280}-\\u{11286}\\u{11288}\\u{1128a}-\\u{1128d}\\u{1128f}-\\u{1129d}\\u{1129f}-\\u{112a8}\\u{112b0}-\\u{112ea}\\u{112f0}-\\u{112f9}\\u{11300}-\\u{11303}\\u{11305}-\\u{1130c}\\u{1130f}-\\u{11310}\\u{11313}-\\u{11328}\\u{1132a}-\\u{11330}\\u{11332}-\\u{11333}\\u{11335}-\\u{11339}\\u{1133b}-\\u{11344}\\u{11347}-\\u{11348}\\u{1134b}-\\u{1134d}\\u{11350}\\u{11357}\\u{1135d}-\\u{11363}\\u{11366}-\\u{1136c}\\u{11370}-\\u{11374}\\u{11400}-\\u{1144a}\\u{11450}-\\u{11459}\\u{1145e}\\u{11480}-\\u{114c5}\\u{114c7}\\u{114d0}-\\u{114d9}\\u{11580}-\\u{115b5}\\u{115b8}-\\u{115c0}\\u{115d8}-\\u{115dd}\\u{11600}-\\u{11640}\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116b7}\\u{116c0}-\\u{116c9}\\u{11700}-\\u{1171a}\\u{1171d}-\\u{1172b}\\u{11730}-\\u{11739}\\u{11800}-\\u{1183a}\\u{118a0}-\\u{118e9}\\u{118ff}\\u{11a00}-\\u{11a3e}\\u{11a47}\\u{11a50}-\\u{11a83}\\u{11a86}-\\u{11a99}\\u{11a9d}\\u{11ac0}-\\u{11af8}\\u{11c00}-\\u{11c08}\\u{11c0a}-\\u{11c36}\\u{11c38}-\\u{11c40}\\u{11c50}-\\u{11c59}\\u{11c72}-\\u{11c8f}\\u{11c92}-\\u{11ca7}\\u{11ca9}-\\u{11cb6}\\u{11d00}-\\u{11d06}\\u{11d08}-\\u{11d09}\\u{11d0b}-\\u{11d36}\\u{11d3a}\\u{11d3c}-\\u{11d3d}\\u{11d3f}-\\u{11d47}\\u{11d50}-\\u{11d59}\\u{11d60}-\\u{11d65}\\u{11d67}-\\u{11d68}\\u{11d6a}-\\u{11d8e}\\u{11d90}-\\u{11d91}\\u{11d93}-\\u{11d98}\\u{11da0}-\\u{11da9}\\u{11ee0}-\\u{11ef6}\\u{12000}-\\u{12399}\\u{12400}-\\u{1246e}\\u{12480}-\\u{12543}\\u{13000}-\\u{1342e}\\u{14400}-\\u{14646}\\u{16800}-\\u{16a38}\\u{16a40}-\\u{16a5e}\\u{16a60}-\\u{16a69}\\u{16ad0}-\\u{16aed}\\u{16af0}-\\u{16af4}\\u{16b00}-\\u{16b36}\\u{16b40}-\\u{16b43}\\u{16b50}-\\u{16b59}\\u{16b63}-\\u{16b77}\\u{16b7d}-\\u{16b8f}\\u{16e40}-\\u{16e7f}\\u{16f00}-\\u{16f44}\\u{16f50}-\\u{16f7e}\\u{16f8f}-\\u{16f9f}\\u{16fe0}-\\u{16fe1}\\u{17000}\\u{187f1}\\u{18800}-\\u{18af2}\\u{1b000}-\\u{1b11e}\\u{1b170}-\\u{1b2fb}\\u{1bc00}-\\u{1bc6a}\\u{1bc70}-\\u{1bc7c}\\u{1bc80}-\\u{1bc88}\\u{1bc90}-\\u{1bc99}\\u{1bc9d}-\\u{1bc9e}\\u{1bca0}-\\u{1bca3}\\u{1d165}-\\u{1d169}\\u{1d16d}-\\u{1d182}\\u{1d185}-\\u{1d18b}\\u{1d1aa}-\\u{1d1ad}\\u{1d242}-\\u{1d244}\\u{1d400}-\\u{1d454}\\u{1d456}-\\u{1d49c}\\u{1d49e}-\\u{1d49f}\\u{1d4a2}\\u{1d4a5}-\\u{1d4a6}\\u{1d4a9}-\\u{1d4ac}\\u{1d4ae}-\\u{1d4b9}\\u{1d4bb}\\u{1d4bd}-\\u{1d4c3}\\u{1d4c5}-\\u{1d505}\\u{1d507}-\\u{1d50a}\\u{1d50d}-\\u{1d514}\\u{1d516}-\\u{1d51c}\\u{1d51e}-\\u{1d539}\\u{1d53b}-\\u{1d53e}\\u{1d540}-\\u{1d544}\\u{1d546}\\u{1d54a}-\\u{1d550}\\u{1d552}-\\u{1d6a5}\\u{1d6a8}-\\u{1d6c0}\\u{1d6c2}-\\u{1d6da}\\u{1d6dc}-\\u{1d6fa}\\u{1d6fc}-\\u{1d714}\\u{1d716}-\\u{1d734}\\u{1d736}-\\u{1d74e}\\u{1d750}-\\u{1d76e}\\u{1d770}-\\u{1d788}\\u{1d78a}-\\u{1d7a8}\\u{1d7aa}-\\u{1d7c2}\\u{1d7c4}-\\u{1d7cb}\\u{1d7ce}-\\u{1d7ff}\\u{1da00}-\\u{1da36}\\u{1da3b}-\\u{1da6c}\\u{1da75}\\u{1da84}\\u{1da9b}-\\u{1da9f}\\u{1daa1}-\\u{1daaf}\\u{1e000}-\\u{1e006}\\u{1e008}-\\u{1e018}\\u{1e01b}-\\u{1e021}\\u{1e023}-\\u{1e024}\\u{1e026}-\\u{1e02a}\\u{1e800}-\\u{1e8c4}\\u{1e8d0}-\\u{1e8d6}\\u{1e900}-\\u{1e94a}\\u{1e950}-\\u{1e959}\\u{1ee00}-\\u{1ee03}\\u{1ee05}-\\u{1ee1f}\\u{1ee21}-\\u{1ee22}\\u{1ee24}\\u{1ee27}\\u{1ee29}-\\u{1ee32}\\u{1ee34}-\\u{1ee37}\\u{1ee39}\\u{1ee3b}\\u{1ee42}\\u{1ee47}\\u{1ee49}\\u{1ee4b}\\u{1ee4d}-\\u{1ee4f}\\u{1ee51}-\\u{1ee52}\\u{1ee54}\\u{1ee57}\\u{1ee59}\\u{1ee5b}\\u{1ee5d}\\u{1ee5f}\\u{1ee61}-\\u{1ee62}\\u{1ee64}\\u{1ee67}-\\u{1ee6a}\\u{1ee6c}-\\u{1ee72}\\u{1ee74}-\\u{1ee77}\\u{1ee79}-\\u{1ee7c}\\u{1ee7e}\\u{1ee80}-\\u{1ee89}\\u{1ee8b}-\\u{1ee9b}\\u{1eea1}-\\u{1eea3}\\u{1eea5}-\\u{1eea9}\\u{1eeab}-\\u{1eebb}\\u{20000}\\u{2a6d6}\\u{2a700}\\u{2b734}\\u{2b740}\\u{2b81d}\\u{2b820}\\u{2cea1}\\u{2ceb0}\\u{2ebe0}\\u{2f800}-\\u{2fa1d}\\u{e0001}\\u{e0020}-\\u{e007f}\\u{e0100}-\\u{e01ef}]*)(\\\\.([\\u0041-\\u005a\\u0061-\\u007a\\u00aa\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e-\\u066f\\u0671-\\u06d3\\u06d5\\u06e5-\\u06e6\\u06ee-\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4-\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc-\\u09dd\\u09df-\\u09e1\\u09f0-\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0-\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c-\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60-\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0-\\u0ce1\\u0cf1-\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32-\\u0e33\\u0e40-\\u0e46\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb0\\u0eb2-\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065-\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae-\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5-\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2e2f\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400\\u4db5\\u4e00\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a-\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd-\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5-\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\u{10000}-\\u{1000b}\\u{1000d}-\\u{10026}\\u{10028}-\\u{1003a}\\u{1003c}-\\u{1003d}\\u{1003f}-\\u{1004d}\\u{10050}-\\u{1005d}\\u{10080}-\\u{100fa}\\u{10140}-\\u{10174}\\u{10280}-\\u{1029c}\\u{102a0}-\\u{102d0}\\u{10300}-\\u{1031f}\\u{1032d}-\\u{1034a}\\u{10350}-\\u{10375}\\u{10380}-\\u{1039d}\\u{103a0}-\\u{103c3}\\u{103c8}-\\u{103cf}\\u{103d1}-\\u{103d5}\\u{10400}-\\u{1049d}\\u{104b0}-\\u{104d3}\\u{104d8}-\\u{104fb}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10800}-\\u{10805}\\u{10808}\\u{1080a}-\\u{10835}\\u{10837}-\\u{10838}\\u{1083c}\\u{1083f}-\\u{10855}\\u{10860}-\\u{10876}\\u{10880}-\\u{1089e}\\u{108e0}-\\u{108f2}\\u{108f4}-\\u{108f5}\\u{10900}-\\u{10915}\\u{10920}-\\u{10939}\\u{10980}-\\u{109b7}\\u{109be}-\\u{109bf}\\u{10a00}\\u{10a10}-\\u{10a13}\\u{10a15}-\\u{10a17}\\u{10a19}-\\u{10a35}\\u{10a60}-\\u{10a7c}\\u{10a80}-\\u{10a9c}\\u{10ac0}-\\u{10ac7}\\u{10ac9}-\\u{10ae4}\\u{10b00}-\\u{10b35}\\u{10b40}-\\u{10b55}\\u{10b60}-\\u{10b72}\\u{10b80}-\\u{10b91}\\u{10c00}-\\u{10c48}\\u{10c80}-\\u{10cb2}\\u{10cc0}-\\u{10cf2}\\u{10d00}-\\u{10d23}\\u{10f00}-\\u{10f1c}\\u{10f27}\\u{10f30}-\\u{10f45}\\u{11003}-\\u{11037}\\u{11083}-\\u{110af}\\u{110d0}-\\u{110e8}\\u{11103}-\\u{11126}\\u{11144}\\u{11150}-\\u{11172}\\u{11176}\\u{11183}-\\u{111b2}\\u{111c1}-\\u{111c4}\\u{111da}\\u{111dc}\\u{11200}-\\u{11211}\\u{11213}-\\u{1122b}\\u{11280}-\\u{11286}\\u{11288}\\u{1128a}-\\u{1128d}\\u{1128f}-\\u{1129d}\\u{1129f}-\\u{112a8}\\u{112b0}-\\u{112de}\\u{11305}-\\u{1130c}\\u{1130f}-\\u{11310}\\u{11313}-\\u{11328}\\u{1132a}-\\u{11330}\\u{11332}-\\u{11333}\\u{11335}-\\u{11339}\\u{1133d}\\u{11350}\\u{1135d}-\\u{11361}\\u{11400}-\\u{11434}\\u{11447}-\\u{1144a}\\u{11480}-\\u{114af}\\u{114c4}-\\u{114c5}\\u{114c7}\\u{11580}-\\u{115ae}\\u{115d8}-\\u{115db}\\u{11600}-\\u{1162f}\\u{11644}\\u{11680}-\\u{116aa}\\u{11700}-\\u{1171a}\\u{11800}-\\u{1182b}\\u{118a0}-\\u{118df}\\u{118ff}\\u{11a00}\\u{11a0b}-\\u{11a32}\\u{11a3a}\\u{11a50}\\u{11a5c}-\\u{11a83}\\u{11a86}-\\u{11a89}\\u{11a9d}\\u{11ac0}-\\u{11af8}\\u{11c00}-\\u{11c08}\\u{11c0a}-\\u{11c2e}\\u{11c40}\\u{11c72}-\\u{11c8f}\\u{11d00}-\\u{11d06}\\u{11d08}-\\u{11d09}\\u{11d0b}-\\u{11d30}\\u{11d46}\\u{11d60}-\\u{11d65}\\u{11d67}-\\u{11d68}\\u{11d6a}-\\u{11d89}\\u{11d98}\\u{11ee0}-\\u{11ef2}\\u{12000}-\\u{12399}\\u{12400}-\\u{1246e}\\u{12480}-\\u{12543}\\u{13000}-\\u{1342e}\\u{14400}-\\u{14646}\\u{16800}-\\u{16a38}\\u{16a40}-\\u{16a5e}\\u{16ad0}-\\u{16aed}\\u{16b00}-\\u{16b2f}\\u{16b40}-\\u{16b43}\\u{16b63}-\\u{16b77}\\u{16b7d}-\\u{16b8f}\\u{16e40}-\\u{16e7f}\\u{16f00}-\\u{16f44}\\u{16f50}\\u{16f93}-\\u{16f9f}\\u{16fe0}-\\u{16fe1}\\u{17000}\\u{187f1}\\u{18800}-\\u{18af2}\\u{1b000}-\\u{1b11e}\\u{1b170}-\\u{1b2fb}\\u{1bc00}-\\u{1bc6a}\\u{1bc70}-\\u{1bc7c}\\u{1bc80}-\\u{1bc88}\\u{1bc90}-\\u{1bc99}\\u{1d400}-\\u{1d454}\\u{1d456}-\\u{1d49c}\\u{1d49e}-\\u{1d49f}\\u{1d4a2}\\u{1d4a5}-\\u{1d4a6}\\u{1d4a9}-\\u{1d4ac}\\u{1d4ae}-\\u{1d4b9}\\u{1d4bb}\\u{1d4bd}-\\u{1d4c3}\\u{1d4c5}-\\u{1d505}\\u{1d507}-\\u{1d50a}\\u{1d50d}-\\u{1d514}\\u{1d516}-\\u{1d51c}\\u{1d51e}-\\u{1d539}\\u{1d53b}-\\u{1d53e}\\u{1d540}-\\u{1d544}\\u{1d546}\\u{1d54a}-\\u{1d550}\\u{1d552}-\\u{1d6a5}\\u{1d6a8}-\\u{1d6c0}\\u{1d6c2}-\\u{1d6da}\\u{1d6dc}-\\u{1d6fa}\\u{1d6fc}-\\u{1d714}\\u{1d716}-\\u{1d734}\\u{1d736}-\\u{1d74e}\\u{1d750}-\\u{1d76e}\\u{1d770}-\\u{1d788}\\u{1d78a}-\\u{1d7a8}\\u{1d7aa}-\\u{1d7c2}\\u{1d7c4}-\\u{1d7cb}\\u{1e800}-\\u{1e8c4}\\u{1e900}-\\u{1e943}\\u{1ee00}-\\u{1ee03}\\u{1ee05}-\\u{1ee1f}\\u{1ee21}-\\u{1ee22}\\u{1ee24}\\u{1ee27}\\u{1ee29}-\\u{1ee32}\\u{1ee34}-\\u{1ee37}\\u{1ee39}\\u{1ee3b}\\u{1ee42}\\u{1ee47}\\u{1ee49}\\u{1ee4b}\\u{1ee4d}-\\u{1ee4f}\\u{1ee51}-\\u{1ee52}\\u{1ee54}\\u{1ee57}\\u{1ee59}\\u{1ee5b}\\u{1ee5d}\\u{1ee5f}\\u{1ee61}-\\u{1ee62}\\u{1ee64}\\u{1ee67}-\\u{1ee6a}\\u{1ee6c}-\\u{1ee72}\\u{1ee74}-\\u{1ee77}\\u{1ee79}-\\u{1ee7c}\\u{1ee7e}\\u{1ee80}-\\u{1ee89}\\u{1ee8b}-\\u{1ee9b}\\u{1eea1}-\\u{1eea3}\\u{1eea5}-\\u{1eea9}\\u{1eeab}-\\u{1eebb}\\u{20000}\\u{2a6d6}\\u{2a700}\\u{2b734}\\u{2b740}\\u{2b81d}\\u{2b820}\\u{2cea1}\\u{2ceb0}\\u{2ebe0}\\u{2f800}-\\u{2fa1d}\\u005f][\\u0030-\\u0039\\u0041-\\u005a\\u005f\\u0061-\\u007a\\u00aa\\u00ad\\u00b5\\u00ba\\u00c0-\\u00d6\\u00d8-\\u00f6\\u00f8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0300-\\u0374\\u0376-\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u0483-\\u0487\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u0591-\\u05bd\\u05bf\\u05c1-\\u05c2\\u05c4-\\u05c5\\u05c7\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0600-\\u0605\\u0610-\\u061a\\u061c\\u0620-\\u0669\\u066e-\\u06d3\\u06d5-\\u06dd\\u06df-\\u06e8\\u06ea-\\u06fc\\u06ff\\u070f-\\u074a\\u074d-\\u07b1\\u07c0-\\u07f5\\u07fa\\u07fd\\u0800-\\u082d\\u0840-\\u085b\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u08d3-\\u0963\\u0966-\\u096f\\u0971-\\u0983\\u0985-\\u098c\\u098f-\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bc-\\u09c4\\u09c7-\\u09c8\\u09cb-\\u09ce\\u09d7\\u09dc-\\u09dd\\u09df-\\u09e3\\u09e6-\\u09f1\\u09fc\\u09fe\\u0a01-\\u0a03\\u0a05-\\u0a0a\\u0a0f-\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32-\\u0a33\\u0a35-\\u0a36\\u0a38-\\u0a39\\u0a3c\\u0a3e-\\u0a42\\u0a47-\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a59-\\u0a5c\\u0a5e\\u0a66-\\u0a75\\u0a81-\\u0a83\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2-\\u0ab3\\u0ab5-\\u0ab9\\u0abc-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ad0\\u0ae0-\\u0ae3\\u0ae6-\\u0aef\\u0af9-\\u0aff\\u0b01-\\u0b03\\u0b05-\\u0b0c\\u0b0f-\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32-\\u0b33\\u0b35-\\u0b39\\u0b3c-\\u0b44\\u0b47-\\u0b48\\u0b4b-\\u0b4d\\u0b56-\\u0b57\\u0b5c-\\u0b5d\\u0b5f-\\u0b63\\u0b66-\\u0b6f\\u0b71\\u0b82-\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99-\\u0b9a\\u0b9c\\u0b9e-\\u0b9f\\u0ba3-\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd0\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55-\\u0c56\\u0c58-\\u0c5a\\u0c60-\\u0c63\\u0c66-\\u0c6f\\u0c80-\\u0c83\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbc-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5-\\u0cd6\\u0cde\\u0ce0-\\u0ce3\\u0ce6-\\u0cef\\u0cf1-\\u0cf2\\u0d00-\\u0d03\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4e\\u0d54-\\u0d57\\u0d5f-\\u0d63\\u0d66-\\u0d6f\\u0d7a-\\u0d7f\\u0d82-\\u0d83\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2-\\u0df3\\u0e01-\\u0e3a\\u0e40-\\u0e4e\\u0e50-\\u0e59\\u0e81-\\u0e82\\u0e84\\u0e87-\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa-\\u0eab\\u0ead-\\u0eb9\\u0ebb-\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0edc-\\u0edf\\u0f00\\u0f18-\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e-\\u0f47\\u0f49-\\u0f6c\\u0f71-\\u0f84\\u0f86-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u1000-\\u1049\\u1050-\\u109d\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u135d-\\u135f\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176c\\u176e-\\u1770\\u1772-\\u1773\\u1780-\\u17d3\\u17d7\\u17dc-\\u17dd\\u17e0-\\u17e9\\u180b-\\u180e\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u19d0-\\u19d9\\u1a00-\\u1a1b\\u1a20-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1aa7\\u1ab0-\\u1abd\\u1b00-\\u1b4b\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1bf3\\u1c00-\\u1c37\\u1c40-\\u1c49\\u1c4d-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1cd0-\\u1cd2\\u1cd4-\\u1cf9\\u1d00-\\u1df9\\u1dfb-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u200b-\\u200f\\u202a-\\u202e\\u203f-\\u2040\\u2054\\u2060-\\u2064\\u2066-\\u206f\\u2071\\u207f\\u2090-\\u209c\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2119-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u212d\\u212f-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d7f-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u2de0-\\u2dff\\u2e2f\\u3005-\\u3007\\u3021-\\u302f\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u3099-\\u309a\\u309d-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400\\u4db5\\u4e00\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua62b\\ua640-\\ua66f\\ua674-\\ua67d\\ua67f-\\ua6f1\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua827\\ua840-\\ua873\\ua880-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f7\\ua8fb\\ua8fd-\\ua92d\\ua930-\\ua953\\ua960-\\ua97c\\ua980-\\ua9c0\\ua9cf-\\ua9d9\\ua9e0-\\ua9fe\\uaa00-\\uaa36\\uaa40-\\uaa4d\\uaa50-\\uaa59\\uaa60-\\uaa76\\uaa7a-\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaef\\uaaf2-\\uaaf6\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabea\\uabec-\\uabed\\uabf0-\\uabf9\\uac00\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40-\\ufb41\\ufb43-\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33-\\ufe34\\ufe4d-\\ufe4f\\ufe70-\\ufe74\\ufe76-\\ufefc\\ufeff\\uff10-\\uff19\\uff21-\\uff3a\\uff3f\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\\ufff9-\\ufffb\\u{10000}-\\u{1000b}\\u{1000d}-\\u{10026}\\u{10028}-\\u{1003a}\\u{1003c}-\\u{1003d}\\u{1003f}-\\u{1004d}\\u{10050}-\\u{1005d}\\u{10080}-\\u{100fa}\\u{10140}-\\u{10174}\\u{101fd}\\u{10280}-\\u{1029c}\\u{102a0}-\\u{102d0}\\u{102e0}\\u{10300}-\\u{1031f}\\u{1032d}-\\u{1034a}\\u{10350}-\\u{1037a}\\u{10380}-\\u{1039d}\\u{103a0}-\\u{103c3}\\u{103c8}-\\u{103cf}\\u{103d1}-\\u{103d5}\\u{10400}-\\u{1049d}\\u{104a0}-\\u{104a9}\\u{104b0}-\\u{104d3}\\u{104d8}-\\u{104fb}\\u{10500}-\\u{10527}\\u{10530}-\\u{10563}\\u{10600}-\\u{10736}\\u{10740}-\\u{10755}\\u{10760}-\\u{10767}\\u{10800}-\\u{10805}\\u{10808}\\u{1080a}-\\u{10835}\\u{10837}-\\u{10838}\\u{1083c}\\u{1083f}-\\u{10855}\\u{10860}-\\u{10876}\\u{10880}-\\u{1089e}\\u{108e0}-\\u{108f2}\\u{108f4}-\\u{108f5}\\u{10900}-\\u{10915}\\u{10920}-\\u{10939}\\u{10980}-\\u{109b7}\\u{109be}-\\u{109bf}\\u{10a00}-\\u{10a03}\\u{10a05}-\\u{10a06}\\u{10a0c}-\\u{10a13}\\u{10a15}-\\u{10a17}\\u{10a19}-\\u{10a35}\\u{10a38}-\\u{10a3a}\\u{10a3f}\\u{10a60}-\\u{10a7c}\\u{10a80}-\\u{10a9c}\\u{10ac0}-\\u{10ac7}\\u{10ac9}-\\u{10ae6}\\u{10b00}-\\u{10b35}\\u{10b40}-\\u{10b55}\\u{10b60}-\\u{10b72}\\u{10b80}-\\u{10b91}\\u{10c00}-\\u{10c48}\\u{10c80}-\\u{10cb2}\\u{10cc0}-\\u{10cf2}\\u{10d00}-\\u{10d27}\\u{10d30}-\\u{10d39}\\u{10f00}-\\u{10f1c}\\u{10f27}\\u{10f30}-\\u{10f50}\\u{11000}-\\u{11046}\\u{11066}-\\u{1106f}\\u{1107f}-\\u{110ba}\\u{110bd}\\u{110cd}\\u{110d0}-\\u{110e8}\\u{110f0}-\\u{110f9}\\u{11100}-\\u{11134}\\u{11136}-\\u{1113f}\\u{11144}-\\u{11146}\\u{11150}-\\u{11173}\\u{11176}\\u{11180}-\\u{111c4}\\u{111c9}-\\u{111cc}\\u{111d0}-\\u{111da}\\u{111dc}\\u{11200}-\\u{11211}\\u{11213}-\\u{11237}\\u{1123e}\\u{11280}-\\u{11286}\\u{11288}\\u{1128a}-\\u{1128d}\\u{1128f}-\\u{1129d}\\u{1129f}-\\u{112a8}\\u{112b0}-\\u{112ea}\\u{112f0}-\\u{112f9}\\u{11300}-\\u{11303}\\u{11305}-\\u{1130c}\\u{1130f}-\\u{11310}\\u{11313}-\\u{11328}\\u{1132a}-\\u{11330}\\u{11332}-\\u{11333}\\u{11335}-\\u{11339}\\u{1133b}-\\u{11344}\\u{11347}-\\u{11348}\\u{1134b}-\\u{1134d}\\u{11350}\\u{11357}\\u{1135d}-\\u{11363}\\u{11366}-\\u{1136c}\\u{11370}-\\u{11374}\\u{11400}-\\u{1144a}\\u{11450}-\\u{11459}\\u{1145e}\\u{11480}-\\u{114c5}\\u{114c7}\\u{114d0}-\\u{114d9}\\u{11580}-\\u{115b5}\\u{115b8}-\\u{115c0}\\u{115d8}-\\u{115dd}\\u{11600}-\\u{11640}\\u{11644}\\u{11650}-\\u{11659}\\u{11680}-\\u{116b7}\\u{116c0}-\\u{116c9}\\u{11700}-\\u{1171a}\\u{1171d}-\\u{1172b}\\u{11730}-\\u{11739}\\u{11800}-\\u{1183a}\\u{118a0}-\\u{118e9}\\u{118ff}\\u{11a00}-\\u{11a3e}\\u{11a47}\\u{11a50}-\\u{11a83}\\u{11a86}-\\u{11a99}\\u{11a9d}\\u{11ac0}-\\u{11af8}\\u{11c00}-\\u{11c08}\\u{11c0a}-\\u{11c36}\\u{11c38}-\\u{11c40}\\u{11c50}-\\u{11c59}\\u{11c72}-\\u{11c8f}\\u{11c92}-\\u{11ca7}\\u{11ca9}-\\u{11cb6}\\u{11d00}-\\u{11d06}\\u{11d08}-\\u{11d09}\\u{11d0b}-\\u{11d36}\\u{11d3a}\\u{11d3c}-\\u{11d3d}\\u{11d3f}-\\u{11d47}\\u{11d50}-\\u{11d59}\\u{11d60}-\\u{11d65}\\u{11d67}-\\u{11d68}\\u{11d6a}-\\u{11d8e}\\u{11d90}-\\u{11d91}\\u{11d93}-\\u{11d98}\\u{11da0}-\\u{11da9}\\u{11ee0}-\\u{11ef6}\\u{12000}-\\u{12399}\\u{12400}-\\u{1246e}\\u{12480}-\\u{12543}\\u{13000}-\\u{1342e}\\u{14400}-\\u{14646}\\u{16800}-\\u{16a38}\\u{16a40}-\\u{16a5e}\\u{16a60}-\\u{16a69}\\u{16ad0}-\\u{16aed}\\u{16af0}-\\u{16af4}\\u{16b00}-\\u{16b36}\\u{16b40}-\\u{16b43}\\u{16b50}-\\u{16b59}\\u{16b63}-\\u{16b77}\\u{16b7d}-\\u{16b8f}\\u{16e40}-\\u{16e7f}\\u{16f00}-\\u{16f44}\\u{16f50}-\\u{16f7e}\\u{16f8f}-\\u{16f9f}\\u{16fe0}-\\u{16fe1}\\u{17000}\\u{187f1}\\u{18800}-\\u{18af2}\\u{1b000}-\\u{1b11e}\\u{1b170}-\\u{1b2fb}\\u{1bc00}-\\u{1bc6a}\\u{1bc70}-\\u{1bc7c}\\u{1bc80}-\\u{1bc88}\\u{1bc90}-\\u{1bc99}\\u{1bc9d}-\\u{1bc9e}\\u{1bca0}-\\u{1bca3}\\u{1d165}-\\u{1d169}\\u{1d16d}-\\u{1d182}\\u{1d185}-\\u{1d18b}\\u{1d1aa}-\\u{1d1ad}\\u{1d242}-\\u{1d244}\\u{1d400}-\\u{1d454}\\u{1d456}-\\u{1d49c}\\u{1d49e}-\\u{1d49f}\\u{1d4a2}\\u{1d4a5}-\\u{1d4a6}\\u{1d4a9}-\\u{1d4ac}\\u{1d4ae}-\\u{1d4b9}\\u{1d4bb}\\u{1d4bd}-\\u{1d4c3}\\u{1d4c5}-\\u{1d505}\\u{1d507}-\\u{1d50a}\\u{1d50d}-\\u{1d514}\\u{1d516}-\\u{1d51c}\\u{1d51e}-\\u{1d539}\\u{1d53b}-\\u{1d53e}\\u{1d540}-\\u{1d544}\\u{1d546}\\u{1d54a}-\\u{1d550}\\u{1d552}-\\u{1d6a5}\\u{1d6a8}-\\u{1d6c0}\\u{1d6c2}-\\u{1d6da}\\u{1d6dc}-\\u{1d6fa}\\u{1d6fc}-\\u{1d714}\\u{1d716}-\\u{1d734}\\u{1d736}-\\u{1d74e}\\u{1d750}-\\u{1d76e}\\u{1d770}-\\u{1d788}\\u{1d78a}-\\u{1d7a8}\\u{1d7aa}-\\u{1d7c2}\\u{1d7c4}-\\u{1d7cb}\\u{1d7ce}-\\u{1d7ff}\\u{1da00}-\\u{1da36}\\u{1da3b}-\\u{1da6c}\\u{1da75}\\u{1da84}\\u{1da9b}-\\u{1da9f}\\u{1daa1}-\\u{1daaf}\\u{1e000}-\\u{1e006}\\u{1e008}-\\u{1e018}\\u{1e01b}-\\u{1e021}\\u{1e023}-\\u{1e024}\\u{1e026}-\\u{1e02a}\\u{1e800}-\\u{1e8c4}\\u{1e8d0}-\\u{1e8d6}\\u{1e900}-\\u{1e94a}\\u{1e950}-\\u{1e959}\\u{1ee00}-\\u{1ee03}\\u{1ee05}-\\u{1ee1f}\\u{1ee21}-\\u{1ee22}\\u{1ee24}\\u{1ee27}\\u{1ee29}-\\u{1ee32}\\u{1ee34}-\\u{1ee37}\\u{1ee39}\\u{1ee3b}\\u{1ee42}\\u{1ee47}\\u{1ee49}\\u{1ee4b}\\u{1ee4d}-\\u{1ee4f}\\u{1ee51}-\\u{1ee52}\\u{1ee54}\\u{1ee57}\\u{1ee59}\\u{1ee5b}\\u{1ee5d}\\u{1ee5f}\\u{1ee61}-\\u{1ee62}\\u{1ee64}\\u{1ee67}-\\u{1ee6a}\\u{1ee6c}-\\u{1ee72}\\u{1ee74}-\\u{1ee77}\\u{1ee79}-\\u{1ee7c}\\u{1ee7e}\\u{1ee80}-\\u{1ee89}\\u{1ee8b}-\\u{1ee9b}\\u{1eea1}-\\u{1eea3}\\u{1eea5}-\\u{1eea9}\\u{1eeab}-\\u{1eebb}\\u{20000}\\u{2a6d6}\\u{2a700}\\u{2b734}\\u{2b740}\\u{2b81d}\\u{2b820}\\u{2cea1}\\u{2ceb0}\\u{2ebe0}\\u{2f800}-\\u{2fa1d}\\u{e0001}\\u{e0020}-\\u{e007f}\\u{e0100}-\\u{e01ef}]*))*)\", \"yu\");\r\nexports.RegExpWhitespace = RegExp(\"[\" +\r\n    \"\\u0020\" + // SPACE\r\n    \"|\\u00A0\" + // NO-BREAK SPACE\r\n    \"|\\u1680\" + // OGHAM SPACE MARK\r\n    \"|\\u2000\" + // EN QUAD\r\n    \"|\\u2001\" + // EM QUAD\r\n    \"|\\u2002\" + // EN SPACE\r\n    \"|\\u2003\" + // EM SPACE\r\n    \"|\\u2004\" + // THREE-PER-EM SPACE\r\n    \"|\\u2005\" + // FOUR-PER-EM SPACE\r\n    \"|\\u2006\" + // SIX-PER-EM SPACE\r\n    \"|\\u2007\" + // FIGURE SPACE\r\n    \"|\\u2008\" + // PUNCTUATION SPACE\r\n    \"|\\u2009\" + // THIN SPACE\r\n    \"|\\u200A\" + // HAIR SPACE\r\n    \"|\\u202F\" + // NARROW NO-BREAK SPACE\r\n    \"|\\u205F\" + // MEDIUM MATHEMATICAL SPACE\r\n    \"|\\u3000\" + // IDEOGRAPHIC SPACE\r\n    \"|\\u0009\" + // HORIZONTAL TAB\r\n    \"|\\u000B\" + // VERTICAL TAB\r\n    \"|\\u000C\" + // FORM FEED\r\n    \"]+\", \"y\");\r\nexports.RegExpHex = RegExp(\"0[xX][a-fA-F0-9]+\", \"y\");\r\nexports.RegExpNumeric = RegExp(\"(\" + \"([0-9]*\\\\.[0-9]+)\" + \"|\" + \"([0-9]+)\" + \")\" + \"([eE][\\\\+\\\\-]?[0-9]+)?\", \"y\");\r\n//# sourceMappingURL=patterns.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ResultUtils = require(\"./resultUtils\");\r\nexports.ResultUtils = ResultUtils;\r\n__export(require(\"./result\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction okFactory(value) {\r\n    return {\r\n        kind: \"Ok\" /* Ok */,\r\n        value,\r\n    };\r\n}\r\nexports.okFactory = okFactory;\r\n//# sourceMappingURL=result.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction okFactory(value) {\r\n    return {\r\n        kind: \"Ok\" /* Ok */,\r\n        value,\r\n    };\r\n}\r\nexports.okFactory = okFactory;\r\nfunction errFactory(error) {\r\n    return {\r\n        kind: \"Err\" /* Err */,\r\n        error,\r\n    };\r\n}\r\nexports.errFactory = errFactory;\r\nfunction isOk(result) {\r\n    return result.kind === \"Ok\" /* Ok */;\r\n}\r\nexports.isOk = isOk;\r\nfunction isErr(result) {\r\n    return result.kind === \"Err\" /* Err */;\r\n}\r\nexports.isErr = isErr;\r\n//# sourceMappingURL=resultUtils.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// tslint:disable-next-line: no-require-imports\r\nconst GraphemeSplitter = require(\"grapheme-splitter\");\r\nconst _1 = require(\".\");\r\nexports.graphemeSplitter = new GraphemeSplitter();\r\nfunction columnNumberFrom(text, requiredCodeUnit) {\r\n    const graphemes = exports.graphemeSplitter.splitGraphemes(text);\r\n    let columnNumber = 0;\r\n    let summedCodeUnits = 0;\r\n    for (const grapheme of graphemes) {\r\n        if (summedCodeUnits === requiredCodeUnit) {\r\n            return columnNumber;\r\n        }\r\n        else {\r\n            summedCodeUnits += grapheme.length;\r\n            columnNumber += 1;\r\n        }\r\n    }\r\n    const details = {\r\n        text,\r\n        requiredCodeUnit,\r\n    };\r\n    throw new _1.CommonError.InvariantError(`no columnNumber can be generated for required codeUnit`, details);\r\n}\r\nexports.columnNumberFrom = columnNumberFrom;\r\nfunction graphemePositionFrom(text, lineCodeUnit, lineNumber, maybeCodeUnit) {\r\n    return {\r\n        lineCodeUnit,\r\n        lineNumber,\r\n        columnNumber: columnNumberFrom(text, lineCodeUnit),\r\n        maybeCodeUnit,\r\n    };\r\n}\r\nexports.graphemePositionFrom = graphemePositionFrom;\r\nfunction maybeRegexMatchLength(pattern, text, index) {\r\n    pattern.lastIndex = index;\r\n    const matches = pattern.exec(text);\r\n    if (!matches) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return matches[0].length;\r\n    }\r\n}\r\nexports.maybeRegexMatchLength = maybeRegexMatchLength;\r\nfunction maybeNewlineKindAt(text, index) {\r\n    const chr1 = text[index];\r\n    switch (chr1) {\r\n        case `\\u000d`: {\r\n            const chr2 = text[index + 1];\r\n            return chr2 === `\\u000a` ? \"DoubleCharacter\" /* DoubleCharacter */ : \"SingleCharacter\" /* SingleCharacter */;\r\n        }\r\n        case `\\u000a`:\r\n        case `\\u0085`:\r\n        case `\\u2028`:\r\n            return \"SingleCharacter\" /* SingleCharacter */;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexports.maybeNewlineKindAt = maybeNewlineKindAt;\r\n// A quick and dirty way to do string formatting.\r\n// Does not handle any escaping.\r\nfunction expectFormat(template, args) {\r\n    let result = template;\r\n    for (const [key, value] of args.entries()) {\r\n        const formatKey = `{${key}}`;\r\n        if (template.indexOf(formatKey) === -1) {\r\n            throw new _1.CommonError.InvariantError(\"unknown key\", { formatKey });\r\n        }\r\n        result = result.replace(formatKey, value);\r\n    }\r\n    return result;\r\n}\r\nexports.expectFormat = expectFormat;\r\n//# sourceMappingURL=stringUtils.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _1 = require(\".\");\r\nconst parser_1 = require(\"../parser\");\r\nconst result_1 = require(\"./result\");\r\n// sets Node and NodesById for tryTraverse\r\nfunction tryTraverseAst(state, nodeIdMapCollection, root, strategy, visitNodeFn, expandNodesFn, maybeEarlyExitFn) {\r\n    return tryTraverse(state, nodeIdMapCollection, root, strategy, visitNodeFn, expandNodesFn, maybeEarlyExitFn);\r\n}\r\nexports.tryTraverseAst = tryTraverseAst;\r\n// sets Node and NodesById for tryTraverse\r\nfunction tryTraverseXor(state, nodeIdMapCollection, root, strategy, visitNodeFn, expandNodesFn, maybeEarlyExitFn) {\r\n    return tryTraverse(state, nodeIdMapCollection, root, strategy, visitNodeFn, expandNodesFn, maybeEarlyExitFn);\r\n}\r\nexports.tryTraverseXor = tryTraverseXor;\r\nfunction tryTraverse(state, nodesById, root, strategy, visitNodeFn, expandNodesFn, maybeEarlyExitFn) {\r\n    try {\r\n        traverseRecursion(state, nodesById, root, strategy, visitNodeFn, expandNodesFn, maybeEarlyExitFn);\r\n        return result_1.ResultUtils.okFactory(state.result);\r\n    }\r\n    catch (e) {\r\n        return result_1.ResultUtils.errFactory(_1.CommonError.ensureCommonError(state.localizationTemplates, e));\r\n    }\r\n}\r\nexports.tryTraverse = tryTraverse;\r\n// a TExpandNodesFn usable by tryTraverseAst which visits all nodes.\r\nfunction expectExpandAllAstChildren(_state, astNode, nodeIdMapCollection) {\r\n    const maybeChildIds = nodeIdMapCollection.childIdsById.get(astNode.id);\r\n    if (maybeChildIds) {\r\n        const childIds = maybeChildIds;\r\n        return childIds.map(nodeId => parser_1.NodeIdMapUtils.expectAstNode(nodeIdMapCollection.astNodeById, nodeId));\r\n    }\r\n    else {\r\n        return [];\r\n    }\r\n}\r\nexports.expectExpandAllAstChildren = expectExpandAllAstChildren;\r\n// a TExpandNodesFn usable by tryTraverseXor which visits all nodes.\r\nfunction expectExpandAllXorChildren(_state, xorNode, nodeIdMapCollection) {\r\n    switch (xorNode.kind) {\r\n        case \"Ast\" /* Ast */: {\r\n            const astNode = xorNode.node;\r\n            return expectExpandAllAstChildren(_state, astNode, nodeIdMapCollection).map(childAstNode => {\r\n                return {\r\n                    kind: \"Ast\" /* Ast */,\r\n                    node: childAstNode,\r\n                };\r\n            });\r\n        }\r\n        case \"Context\" /* Context */: {\r\n            const result = [];\r\n            const contextNode = xorNode.node;\r\n            const maybeChildIds = nodeIdMapCollection.childIdsById.get(contextNode.id);\r\n            if (maybeChildIds !== undefined) {\r\n                const childIds = maybeChildIds;\r\n                for (const childId of childIds) {\r\n                    const maybeAstChild = nodeIdMapCollection.astNodeById.get(childId);\r\n                    if (maybeAstChild) {\r\n                        const astChild = maybeAstChild;\r\n                        result.push({\r\n                            kind: \"Ast\" /* Ast */,\r\n                            node: astChild,\r\n                        });\r\n                        continue;\r\n                    }\r\n                    const maybeContextChild = nodeIdMapCollection.contextNodeById.get(childId);\r\n                    if (maybeContextChild) {\r\n                        const contextChild = maybeContextChild;\r\n                        result.push({\r\n                            kind: \"Context\" /* Context */,\r\n                            node: contextChild,\r\n                        });\r\n                        continue;\r\n                    }\r\n                    const details = { nodeId: childId };\r\n                    throw new _1.CommonError.InvariantError(`nodeId should be found in either astNodesById or contextNodesById`, details);\r\n                }\r\n            }\r\n            return result;\r\n        }\r\n        default:\r\n            throw _1.isNever(xorNode);\r\n    }\r\n}\r\nexports.expectExpandAllXorChildren = expectExpandAllXorChildren;\r\n// Returns the TXorNode's parent if one exists.\r\nfunction maybeExpandXorParent(_state, xorNode, nodeIdMapCollection) {\r\n    const maybeParent = parser_1.NodeIdMapUtils.maybeParentXorNode(nodeIdMapCollection, xorNode.node.id);\r\n    return maybeParent !== undefined ? [maybeParent] : [];\r\n}\r\nexports.maybeExpandXorParent = maybeExpandXorParent;\r\nfunction traverseRecursion(state, nodesById, node, strategy, visitNodeFn, expandNodesFn, maybeEarlyExitFn) {\r\n    if (maybeEarlyExitFn && maybeEarlyExitFn(state, node)) {\r\n        return;\r\n    }\r\n    else if (strategy === \"BreadthFirst\" /* BreadthFirst */) {\r\n        visitNodeFn(state, node);\r\n    }\r\n    for (const child of expandNodesFn(state, node, nodesById)) {\r\n        traverseRecursion(state, nodesById, child, strategy, visitNodeFn, expandNodesFn, maybeEarlyExitFn);\r\n    }\r\n    if (strategy === \"DepthFirst\" /* DepthFirst */) {\r\n        visitNodeFn(state, node);\r\n    }\r\n}\r\n//# sourceMappingURL=traversal.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=typeUtils.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Inspection = require(\"./inspection\");\r\nexports.Inspection = Inspection;\r\n__export(require(\"./common\"));\r\n__export(require(\"./lexer\"));\r\n__export(require(\"./localization\"));\r\n__export(require(\"./parser\"));\r\n__export(require(\"./settings\"));\r\n__export(require(\"./tasks\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../../common\");\r\nconst parser_1 = require(\"../../parser\");\r\nconst position_1 = require(\"../position\");\r\n// Read ActiveNode's comments before this.\r\n//\r\n// Searches all leaf Ast.TNodes and Context nodes to find the \"active\" node.\r\n// ' 1 + ' -> the second operand, a Context node, in an ArithmeticExpression.\r\n// 'let x=|1 in x' -> the value part of the key-value-pair.\r\n// 'foo(|)' -> the zero length ArrayWrapper of an InvokeExpression\r\n//\r\n// First, When the position is on a constant the selected Ast.TNode might have to be shifted one to the right.\r\n// This happens with atomic constants such as '+', '=>', '[', '(' etc.\r\n// However if you shifted right on '(' for 'foo(|)' then the ActiveNode would be ')' instead of the ArrayWrapper.\r\n//\r\n// Second, parser errors also need to be taken care of.\r\n// '1+|' is an error and the latest leaf is '+',\r\n// but the ActiveNode should be the second operand in the ArithmeticExpression.\r\n//\r\n// Third, sometimes we don't want to shift at all.\r\n// Nodes that prevent shifting are called anchor nodes.\r\n// 'if x t|' shouldn't shift to the Constant for 'then', instead the ActiveNode should select 't'.\r\n// 'let x = 1|' shouldn't shift to the Constant for 'in', instead the ActiveNode should select '1'.\r\nfunction maybeActiveNode(position, nodeIdMapCollection, leafNodeIds) {\r\n    const astSearch = positionAstSearch(position, nodeIdMapCollection, leafNodeIds);\r\n    const maybeContextSearch = positionContextSearch(astSearch, nodeIdMapCollection);\r\n    let maybeLeaf;\r\n    if (astSearch.maybeShiftedNode !== undefined) {\r\n        maybeLeaf = parser_1.NodeIdMapUtils.xorNodeFromAst(astSearch.maybeShiftedNode);\r\n    }\r\n    else if (astSearch.maybeNode !== undefined && isAnchorNode(position, astSearch.maybeNode)) {\r\n        maybeLeaf = parser_1.NodeIdMapUtils.xorNodeFromAst(astSearch.maybeNode);\r\n    }\r\n    else if (maybeContextSearch !== undefined) {\r\n        maybeLeaf = parser_1.NodeIdMapUtils.xorNodeFromContext(maybeContextSearch);\r\n    }\r\n    else if (astSearch.maybeNode !== undefined) {\r\n        maybeLeaf = parser_1.NodeIdMapUtils.xorNodeFromAst(astSearch.maybeNode);\r\n    }\r\n    else {\r\n        maybeLeaf = undefined;\r\n    }\r\n    if (maybeLeaf === undefined) {\r\n        return undefined;\r\n    }\r\n    const leaf = maybeLeaf;\r\n    return {\r\n        position,\r\n        ancestry: parser_1.NodeIdMapUtils.expectAncestry(nodeIdMapCollection, leaf.node.id),\r\n        maybeIdentifierUnderPosition: maybeIdentifierUnderPosition(position, nodeIdMapCollection, leaf),\r\n    };\r\n}\r\nexports.maybeActiveNode = maybeActiveNode;\r\nfunction expectRoot(activeNode) {\r\n    const ancestry = activeNode.ancestry;\r\n    return ancestry[ancestry.length - 1];\r\n}\r\nexports.expectRoot = expectRoot;\r\nfunction expectLeaf(activeNode) {\r\n    return activeNode.ancestry[0];\r\n}\r\nexports.expectLeaf = expectLeaf;\r\nfunction maybePreviousXorNode(activeNode, ancestorIndex, n = 1, maybeNodeKinds = undefined) {\r\n    const maybeXorNode = activeNode.ancestry[ancestorIndex - n];\r\n    if (maybeXorNode !== undefined && maybeNodeKinds !== undefined) {\r\n        return maybeNodeKinds.indexOf(maybeXorNode.node.kind) !== -1 ? maybeXorNode : undefined;\r\n    }\r\n    else {\r\n        return maybeXorNode;\r\n    }\r\n}\r\nexports.maybePreviousXorNode = maybePreviousXorNode;\r\nfunction maybeNextXorNode(activeNode, ancestorIndex, n = 1) {\r\n    return activeNode.ancestry[ancestorIndex + n];\r\n}\r\nexports.maybeNextXorNode = maybeNextXorNode;\r\nfunction expectPreviousXorNode(activeNode, ancestorIndex, n = 1, maybeAllowedNodeKinds = undefined) {\r\n    const maybeXorNode = maybePreviousXorNode(activeNode, ancestorIndex, n);\r\n    if (maybeXorNode === undefined) {\r\n        throw new common_1.CommonError.InvariantError(\"no previous node\");\r\n    }\r\n    const xorNode = maybeXorNode;\r\n    if (maybeAllowedNodeKinds !== undefined) {\r\n        const details = {\r\n            fnName: expectPreviousXorNode.name,\r\n            nodeId: xorNode.node.id,\r\n            expectedAny: maybeAllowedNodeKinds,\r\n            actual: xorNode.node.kind,\r\n        };\r\n        const maybeErr = parser_1.AstUtils.testAnyNodeKind(xorNode.node.kind, maybeAllowedNodeKinds, details);\r\n        if (maybeErr) {\r\n            throw maybeErr;\r\n        }\r\n    }\r\n    return maybeXorNode;\r\n}\r\nexports.expectPreviousXorNode = expectPreviousXorNode;\r\nfunction expectNextXorNode(activeNode, ancestorIndex, n = 1, maybeAllowedNodeKinds = undefined) {\r\n    const maybeXorNode = maybeNextXorNode(activeNode, ancestorIndex, n);\r\n    if (maybeXorNode === undefined) {\r\n        throw new common_1.CommonError.InvariantError(\"no next node\");\r\n    }\r\n    const xorNode = maybeXorNode;\r\n    if (maybeAllowedNodeKinds !== undefined) {\r\n        const details = {\r\n            fnName: expectNextXorNode.name,\r\n            nodeId: xorNode.node.id,\r\n            expectedAny: maybeAllowedNodeKinds,\r\n            actual: xorNode.node.kind,\r\n        };\r\n        const maybeErr = parser_1.AstUtils.testAnyNodeKind(xorNode.node.kind, maybeAllowedNodeKinds, details);\r\n        if (maybeErr) {\r\n            throw maybeErr;\r\n        }\r\n    }\r\n    return maybeXorNode;\r\n}\r\nexports.expectNextXorNode = expectNextXorNode;\r\nconst DrilldownConstantKind = [\r\n    \"{\" /* LeftBrace */,\r\n    \"[\" /* LeftBracket */,\r\n    \"(\" /* LeftParenthesis */,\r\n];\r\nconst ShiftRightConstantKinds = [\r\n    \",\" /* Comma */,\r\n    \"=\" /* Equal */,\r\n    \"=>\" /* FatArrow */,\r\n    \"}\" /* RightBrace */,\r\n    \"]\" /* RightBracket */,\r\n    \")\" /* RightParenthesis */,\r\n    \";\" /* Semicolon */,\r\n    ...DrilldownConstantKind,\r\n];\r\nfunction isAnchorNode(position, astNode) {\r\n    if (!position_1.PositionUtils.isInAstNode(position, astNode, true, true)) {\r\n        return false;\r\n    }\r\n    if (astNode.kind === \"Identifier\" /* Identifier */ || astNode.kind === \"GeneralizedIdentifier\" /* GeneralizedIdentifier */) {\r\n        return true;\r\n    }\r\n    else if (astNode.kind === \"LiteralExpression\" /* LiteralExpression */ && astNode.literalKind === \"Numeric\" /* Numeric */) {\r\n        return true;\r\n    }\r\n    else if (astNode.kind === \"Constant\" /* Constant */) {\r\n        switch (astNode.constantKind) {\r\n            case \"as\" /* As */:\r\n            case \"each\" /* Each */:\r\n            case \"else\" /* Else */:\r\n            case \"error\" /* Error */:\r\n            case \"if\" /* If */:\r\n            case \"in\" /* In */:\r\n            case \"is\" /* Is */:\r\n            case \"section\" /* Section */:\r\n            case \"shared\" /* Shared */:\r\n            case \"let\" /* Let */:\r\n            case \"meta\" /* Meta */:\r\n            case \"otherwise\" /* Otherwise */:\r\n            case \"then\" /* Then */:\r\n            case \"try\" /* Try */:\r\n            case \"type\" /* Type */:\r\n            case \"null\" /* Null */:\r\n                return true;\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nfunction positionAstSearch(position, nodeIdMapCollection, leafNodeIds) {\r\n    const astNodeById = nodeIdMapCollection.astNodeById;\r\n    let maybeCurrentOnOrBefore;\r\n    let maybeCurrentAfter;\r\n    let maybeShiftedNode;\r\n    // Find:\r\n    //  the closest leaf to the left or on position.\r\n    //  the closest leaf to the right of position.\r\n    for (const nodeId of leafNodeIds) {\r\n        const candidate = parser_1.NodeIdMapUtils.expectAstNode(astNodeById, nodeId);\r\n        let isBoundIncluded;\r\n        if (\r\n        // let x|=1\r\n        (candidate.kind === \"Constant\" /* Constant */ &&\r\n            ShiftRightConstantKinds.indexOf(candidate.constantKind) !== -1) ||\r\n            // let x=|1\r\n            (maybeCurrentOnOrBefore !== undefined &&\r\n                maybeCurrentOnOrBefore.kind === \"Constant\" /* Constant */ &&\r\n                ShiftRightConstantKinds.indexOf(maybeCurrentOnOrBefore.constantKind) !== -1)) {\r\n            isBoundIncluded = false;\r\n        }\r\n        else {\r\n            isBoundIncluded = true;\r\n        }\r\n        if (!position_1.PositionUtils.isBeforeTokenPosition(position, candidate.tokenRange.positionStart, isBoundIncluded)) {\r\n            if (maybeCurrentOnOrBefore === undefined) {\r\n                maybeCurrentOnOrBefore = candidate;\r\n            }\r\n            else {\r\n                if (candidate.tokenRange.tokenIndexStart > maybeCurrentOnOrBefore.tokenRange.tokenIndexStart) {\r\n                    maybeCurrentOnOrBefore = candidate;\r\n                }\r\n            }\r\n        }\r\n        // Check if after position.\r\n        else {\r\n            if (maybeCurrentAfter === undefined) {\r\n                maybeCurrentAfter = candidate;\r\n            }\r\n            else {\r\n                if (candidate.tokenRange.tokenIndexStart < maybeCurrentAfter.tokenRange.tokenIndexStart) {\r\n                    maybeCurrentAfter = candidate;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Might need to shift.\r\n    if (maybeCurrentOnOrBefore !== undefined && maybeCurrentOnOrBefore.kind === \"Constant\" /* Constant */) {\r\n        const currentOnOrBefore = maybeCurrentOnOrBefore;\r\n        // Requires a shift into an empty ArrayWrapper.\r\n        if (DrilldownConstantKind.indexOf(maybeCurrentOnOrBefore.constantKind) !== -1 &&\r\n            maybeCurrentAfter !== undefined &&\r\n            maybeCurrentAfter.kind === \"Constant\" /* Constant */ &&\r\n            parser_1.AstUtils.isPairedWrapperConstantKinds(maybeCurrentOnOrBefore.constantKind, maybeCurrentAfter.constantKind)) {\r\n            const parent = parser_1.NodeIdMapUtils.expectParentAstNode(nodeIdMapCollection, currentOnOrBefore.id, [\r\n                \"RecordExpression\" /* RecordExpression */,\r\n                \"RecordLiteral\" /* RecordLiteral */,\r\n                \"ListExpression\" /* ListExpression */,\r\n                \"ListLiteral\" /* ListLiteral */,\r\n                \"InvokeExpression\" /* InvokeExpression */,\r\n            ]);\r\n            const arrayWrapper = parser_1.NodeIdMapUtils.expectAstChildByAttributeIndex(nodeIdMapCollection, parent.id, 1, [\"ArrayWrapper\" /* ArrayWrapper */]);\r\n            maybeShiftedNode = arrayWrapper;\r\n        }\r\n        // Requires a shift to the right.\r\n        else if (ShiftRightConstantKinds.indexOf(currentOnOrBefore.constantKind) !== -1) {\r\n            maybeShiftedNode = maybeCurrentAfter;\r\n        }\r\n        // No shifting.\r\n        else {\r\n            maybeShiftedNode = undefined;\r\n        }\r\n    }\r\n    else {\r\n        maybeShiftedNode = undefined;\r\n    }\r\n    return {\r\n        maybeNode: maybeCurrentOnOrBefore,\r\n        maybeShiftedNode,\r\n    };\r\n}\r\nfunction positionContextSearch(astNodeSearch, nodeIdMapCollection) {\r\n    if (astNodeSearch.maybeNode === undefined) {\r\n        return undefined;\r\n    }\r\n    const tokenIndexLowBound = astNodeSearch.maybeNode.tokenRange.tokenIndexStart;\r\n    let maybeCurrent = undefined;\r\n    for (const candidate of nodeIdMapCollection.contextNodeById.values()) {\r\n        if (candidate.maybeTokenStart) {\r\n            if (candidate.tokenIndexStart < tokenIndexLowBound) {\r\n                continue;\r\n            }\r\n            if (maybeCurrent === undefined || maybeCurrent.id < candidate.id) {\r\n                maybeCurrent = candidate;\r\n            }\r\n        }\r\n    }\r\n    return maybeCurrent;\r\n}\r\nfunction maybeIdentifierUnderPosition(position, nodeIdMapCollection, leaf) {\r\n    if (leaf.kind !== \"Ast\" /* Ast */) {\r\n        return undefined;\r\n    }\r\n    let identifier;\r\n    // If closestLeaf is '@', then check if it's part of an IdentifierExpression.\r\n    if (leaf.node.kind === \"Constant\" /* Constant */ && leaf.node.constantKind === \"@\" /* AtSign */) {\r\n        const maybeParentId = nodeIdMapCollection.parentIdById.get(leaf.node.id);\r\n        if (maybeParentId === undefined) {\r\n            return undefined;\r\n        }\r\n        const parentId = maybeParentId;\r\n        const parent = parser_1.NodeIdMapUtils.expectAstNode(nodeIdMapCollection.astNodeById, parentId);\r\n        if (parent.kind !== \"IdentifierExpression\" /* IdentifierExpression */) {\r\n            return undefined;\r\n        }\r\n        identifier = parent.identifier;\r\n    }\r\n    else if (leaf.node.kind === \"Identifier\" /* Identifier */ || leaf.node.kind === \"GeneralizedIdentifier\" /* GeneralizedIdentifier */) {\r\n        identifier = leaf.node;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n    if (position_1.PositionUtils.isInAstNode(position, identifier, false, true)) {\r\n        return identifier;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n//# sourceMappingURL=activeNodeUtils.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ActiveNodeUtils = require(\"./activeNodeUtils\");\r\nexports.ActiveNodeUtils = ActiveNodeUtils;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../common\");\r\nconst result_1 = require(\"../common/result\");\r\nconst lexer_1 = require(\"../lexer\");\r\nconst parser_1 = require(\"../parser\");\r\nconst activeNode_1 = require(\"./activeNode\");\r\nconst position_1 = require(\"./position\");\r\nfunction tryFrom(settings, maybeActiveNode, nodeIdMapCollection, maybeParseError) {\r\n    if (maybeActiveNode === undefined) {\r\n        return result_1.ResultUtils.okFactory({\r\n            autocompleteKeywords: ExpressionAutocomplete,\r\n        });\r\n    }\r\n    const activeNode = maybeActiveNode;\r\n    const leaf = activeNode.ancestry[0];\r\n    const maybeParseErrorToken = maybeParseError\r\n        ? parser_1.ParseError.maybeTokenFrom(maybeParseError.innerError)\r\n        : undefined;\r\n    let maybePositionName;\r\n    if (position_1.PositionUtils.isInXorNode(activeNode.position, nodeIdMapCollection, leaf, false, true)) {\r\n        if (activeNode.maybeIdentifierUnderPosition !== undefined) {\r\n            maybePositionName = activeNode.maybeIdentifierUnderPosition.literal;\r\n        }\r\n        // Matches 'null', 'true', and 'false'.\r\n        else if (leaf.kind === \"Ast\" /* Ast */ &&\r\n            leaf.node.kind === \"LiteralExpression\" /* LiteralExpression */ &&\r\n            (leaf.node.literalKind === \"Logical\" /* Logical */ || leaf.node.literalKind === \"Null\" /* Null */)) {\r\n            maybePositionName = leaf.node.literal;\r\n        }\r\n    }\r\n    const triedAutocomplete = traverseAncestors(settings, activeNode, nodeIdMapCollection, maybeParseErrorToken);\r\n    if (result_1.ResultUtils.isErr(triedAutocomplete)) {\r\n        return triedAutocomplete;\r\n    }\r\n    let inspected = handleEdgeCases(triedAutocomplete.value, activeNode, maybeParseErrorToken);\r\n    inspected = filterRecommendations(inspected, maybePositionName);\r\n    return result_1.ResultUtils.okFactory({ autocompleteKeywords: inspected });\r\n}\r\nexports.tryFrom = tryFrom;\r\n// Travel the ancestry path in Active node in [parent, child] pairs.\r\n// Without zipping the values we wouldn't know what we're completing for.\r\n// For example 'if true |' gives us a pair something like [IfExpression, Constant].\r\n// We can now know we failed to parse a 'then' constant.\r\nfunction traverseAncestors(settings, activeNode, nodeIdMapCollection, maybeParseErrorToken) {\r\n    const ancestry = activeNode.ancestry;\r\n    const numNodes = ancestry.length;\r\n    let maybeInspected;\r\n    try {\r\n        for (let index = 1; index < numNodes; index += 1) {\r\n            const parent = ancestry[index];\r\n            const child = ancestry[index - 1];\r\n            switch (parent.node.kind) {\r\n                case \"ErrorHandlingExpression\" /* ErrorHandlingExpression */:\r\n                    maybeInspected = autocompleteErrorHandlingExpression(activeNode.position, child, maybeParseErrorToken);\r\n                    break;\r\n                case \"ListExpression\" /* ListExpression */:\r\n                    maybeInspected = autocompleteListExpression(activeNode, child, index);\r\n                    break;\r\n                case \"SectionMember\" /* SectionMember */:\r\n                    maybeInspected = autocompleteSectionMember(nodeIdMapCollection, activeNode, parent, child, index);\r\n                    break;\r\n                default: {\r\n                    const key = createMapKey(parent.node.kind, child.node.maybeAttributeIndex);\r\n                    if (AutocompleteExpressionKeys.indexOf(key) !== -1) {\r\n                        if (child.kind === \"Context\" /* Context */ ||\r\n                            position_1.PositionUtils.isBeforeAstNode(activeNode.position, child.node, false)) {\r\n                            maybeInspected = ExpressionAutocomplete;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const maybeMappedKeywordKind = AutocompleteConstantMap.get(key);\r\n                        if (maybeMappedKeywordKind) {\r\n                            maybeInspected = autocompleteKeywordConstant(activeNode, child, maybeMappedKeywordKind);\r\n                        }\r\n                    }\r\n                    break;\r\n                }\r\n            }\r\n            if (maybeInspected !== undefined) {\r\n                return result_1.ResultUtils.okFactory(maybeInspected);\r\n            }\r\n        }\r\n    }\r\n    catch (err) {\r\n        return result_1.ResultUtils.errFactory(common_1.CommonError.ensureCommonError(settings.localizationTemplates, err));\r\n    }\r\n    return result_1.ResultUtils.okFactory([]);\r\n}\r\nfunction handleEdgeCases(inspected, activeNode, maybeParseErrorToken) {\r\n    // Check if they're typing for the first time at the start of the file,\r\n    // which defaults to searching for an identifier.\r\n    if (maybeParseErrorToken === undefined &&\r\n        activeNode.ancestry.length === 2 &&\r\n        activeNode.ancestry[0].node.kind === \"Identifier\" /* Identifier */ &&\r\n        activeNode.ancestry[1].node.kind === \"IdentifierExpression\" /* IdentifierExpression */) {\r\n        inspected = ExpressionAndSectionAutocomplete;\r\n    }\r\n    if (maybeParseErrorToken !== undefined &&\r\n        position_1.PositionUtils.isInToken(activeNode.position, maybeParseErrorToken, false, true)) {\r\n        inspected = updateWithParseErrorToken(inspected, activeNode, maybeParseErrorToken);\r\n    }\r\n    return inspected;\r\n}\r\nfunction filterRecommendations(inspected, maybePositionName) {\r\n    if (maybePositionName === undefined) {\r\n        return inspected;\r\n    }\r\n    const positionName = maybePositionName;\r\n    return inspected.filter((kind) => kind.startsWith(positionName));\r\n}\r\nconst ExpressionAutocomplete = lexer_1.TExpressionKeywords;\r\nconst ExpressionAndSectionAutocomplete = [...lexer_1.TExpressionKeywords, \"section\" /* Section */];\r\nconst AutocompleteExpressionKeys = [\r\n    createMapKey(\"ErrorRaisingExpression\" /* ErrorRaisingExpression */, 1),\r\n    createMapKey(\"GeneralizedIdentifierPairedExpression\" /* GeneralizedIdentifierPairedExpression */, 2),\r\n    createMapKey(\"IdentifierPairedExpression\" /* IdentifierPairedExpression */, 2),\r\n    createMapKey(\"IdentifierExpressionPairedExpression\" /* IdentifierExpressionPairedExpression */, 2),\r\n    createMapKey(\"IfExpression\" /* IfExpression */, 1),\r\n    createMapKey(\"IfExpression\" /* IfExpression */, 3),\r\n    createMapKey(\"IfExpression\" /* IfExpression */, 5),\r\n    createMapKey(\"InvokeExpression\" /* InvokeExpression */, 0),\r\n    createMapKey(\"InvokeExpression\" /* InvokeExpression */, 1),\r\n    createMapKey(\"InvokeExpression\" /* InvokeExpression */, 2),\r\n    createMapKey(\"ListExpression\" /* ListExpression */, 1),\r\n    createMapKey(\"OtherwiseExpression\" /* OtherwiseExpression */, 1),\r\n    createMapKey(\"ParenthesizedExpression\" /* ParenthesizedExpression */, 1),\r\n];\r\n// If we're coming from a constant then we can quickly evaluate using a map.\r\n// This is possible because reading a Constant is binary.\r\n// Either the Constant was read and you're in the next context, or you didn't and you're in the constant's context.\r\nconst AutocompleteConstantMap = new Map([\r\n    // Ast.NodeKind.ErrorRaisingExpression\r\n    [createMapKey(\"ErrorRaisingExpression\" /* ErrorRaisingExpression */, 0), \"error\" /* Error */],\r\n    // Ast.NodeKind.IfExpression\r\n    [createMapKey(\"IfExpression\" /* IfExpression */, 0), \"if\" /* If */],\r\n    [createMapKey(\"IfExpression\" /* IfExpression */, 2), \"then\" /* Then */],\r\n    [createMapKey(\"IfExpression\" /* IfExpression */, 4), \"else\" /* Else */],\r\n    // Ast.NodeKind.OtherwiseExpression\r\n    [createMapKey(\"OtherwiseExpression\" /* OtherwiseExpression */, 0), \"otherwise\" /* Otherwise */],\r\n    // Ast.NodeKind.Section\r\n    [createMapKey(\"Section\" /* Section */, 1), \"section\" /* Section */],\r\n]);\r\n// Used with maybeParseError to see if a user could be typing a conjunctive keyword such as 'or'. Eg.\r\n// 'Details[UserName] <> \"\" o|'\r\nconst PartialConjunctionKeywordAutocompleteMap = new Map([\r\n    [\"a\", [\"and\" /* And */, \"as\" /* As */]],\r\n    [\"o\", [\"or\" /* Or */]],\r\n    [\"m\", [\"meta\" /* Meta */]],\r\n]);\r\nfunction updateWithParseErrorToken(inspected, activeNode, parseErrorToken) {\r\n    const parseErrorTokenData = parseErrorToken.data;\r\n    const maybeAllowedKeywords = PartialConjunctionKeywordAutocompleteMap.get(parseErrorTokenData[0].toLocaleLowerCase());\r\n    if (maybeAllowedKeywords === undefined) {\r\n        return inspected;\r\n    }\r\n    const allowedKeywords = maybeAllowedKeywords;\r\n    for (const ancestor of activeNode.ancestry) {\r\n        if (parser_1.NodeIdMapUtils.isTUnaryType(ancestor)) {\r\n            return updateUsingConjunctionKeywords(inspected, parseErrorTokenData, allowedKeywords);\r\n        }\r\n    }\r\n    return inspected;\r\n}\r\n// Given a list of possible conjunction keywords, update inspected with any matching conjunction keywords.\r\nfunction updateUsingConjunctionKeywords(inspected, parseErrorTokenData, allowedKeywords) {\r\n    const newAllowedAutocompleteKeywords = [...inspected];\r\n    for (const keyword of allowedKeywords) {\r\n        if (keyword.startsWith(parseErrorTokenData) && newAllowedAutocompleteKeywords.indexOf(keyword) === -1) {\r\n            newAllowedAutocompleteKeywords.push(keyword);\r\n        }\r\n    }\r\n    return newAllowedAutocompleteKeywords;\r\n}\r\n// A tuple can't easily be used as a Map key as it does a shallow comparison.\r\n// The work around is to stringify the tuple key, even though we lose typing by doing so.\r\n// Hopefully by having a 'createMapKey' function this will prevent bugs.\r\n// [parent XorNode.node.kind, child XorNode.node.maybeAttributeIndex].join(\",\")\r\nfunction createMapKey(nodeKind, maybeAttributeIndex) {\r\n    return [nodeKind, maybeAttributeIndex].join(\",\");\r\n}\r\nfunction autocompleteKeywordConstant(activeNode, child, keywordKind) {\r\n    if (position_1.PositionUtils.isBeforeXorNode(activeNode.position, child, false)) {\r\n        return undefined;\r\n    }\r\n    else if (child.kind === \"Ast\" /* Ast */) {\r\n        // So long as you're inside of an Ast Constant there's nothing that can be recommended other than the constant.\r\n        // Note that we previously checked isBeforeXorNode so we can use the quicker isOnAstNodeEnd to check\r\n        // if we're inside of the Ast node.\r\n        return position_1.PositionUtils.isOnAstNodeEnd(activeNode.position, child.node) ? [] : [keywordKind];\r\n    }\r\n    // !isBeforeXorNode && child.kind === XorNodeKind.Context\r\n    return [keywordKind];\r\n}\r\nfunction autocompleteErrorHandlingExpression(position, child, maybeParseErrorToken) {\r\n    const maybeChildAttributeIndex = child.node.maybeAttributeIndex;\r\n    if (maybeChildAttributeIndex === 0) {\r\n        return [\"try\" /* Try */];\r\n    }\r\n    else if (maybeChildAttributeIndex === 1) {\r\n        // 'try true o|' creates a ParseError.\r\n        // It's ambiguous if the next token should be either 'otherwise' or 'or'.\r\n        if (maybeParseErrorToken !== undefined) {\r\n            const errorToken = maybeParseErrorToken;\r\n            // First we test if we can autocomplete using the error token.\r\n            if (errorToken.kind === \"Identifier\" /* Identifier */ &&\r\n                position_1.PositionUtils.isInToken(position, maybeParseErrorToken, false, true)) {\r\n                const tokenData = maybeParseErrorToken.data;\r\n                // If we can exclude 'or' then the only thing we can autocomplete is 'otherwise'.\r\n                if (tokenData.length > 1 && \"otherwise\" /* Otherwise */.startsWith(tokenData)) {\r\n                    return [\"otherwise\" /* Otherwise */];\r\n                }\r\n                // In the ambiguous case we don't know what they're typing yet, so we suggest both.\r\n                // In the case of an identifier that doesn't match a 'or' or 'otherwise'\r\n                // we still suggest the only valid keywords allowed.\r\n                // In both cases the return is the same.\r\n                else {\r\n                    return [\"or\" /* Or */, \"otherwise\" /* Otherwise */];\r\n                }\r\n            }\r\n            // There exists an error token we can't map it to an OtherwiseExpression.\r\n            else {\r\n                return undefined;\r\n            }\r\n        }\r\n        else if (child.kind === \"Ast\" /* Ast */ && position_1.PositionUtils.isAfterAstNode(position, child.node, true)) {\r\n            return [\"otherwise\" /* Otherwise */];\r\n        }\r\n        else {\r\n            return ExpressionAutocomplete;\r\n        }\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nfunction autocompleteListExpression(activeNode, child, ancestorIndex) {\r\n    // '{' or '}'\r\n    if (child.node.maybeAttributeIndex === 0 || child.node.maybeAttributeIndex === 2) {\r\n        return undefined;\r\n    }\r\n    else if (child.node.maybeAttributeIndex !== 1) {\r\n        const details = {\r\n            nodeId: child.node.id,\r\n            maybeAttributeIndex: child.node.maybeAttributeIndex,\r\n        };\r\n        throw new common_1.CommonError.InvariantError(\"ListExpression child has an invalid maybeAttributeIndex\", details);\r\n    }\r\n    // ListExpression -> ArrayWrapper -> Csv -> X\r\n    const nodeOrComma = activeNode_1.ActiveNodeUtils.expectPreviousXorNode(activeNode, ancestorIndex, 3, undefined);\r\n    if (nodeOrComma.node.maybeAttributeIndex !== 0) {\r\n        return undefined;\r\n    }\r\n    // We know it's the node component of the Csv,\r\n    // but we have to drill down one more level if it's a RangeExpression.\r\n    const itemNode = nodeOrComma.node.kind === \"RangeExpression\" /* RangeExpression */\r\n        ? activeNode_1.ActiveNodeUtils.expectPreviousXorNode(activeNode, ancestorIndex, 4, undefined)\r\n        : nodeOrComma;\r\n    if (itemNode.kind === \"Context\" /* Context */ || position_1.PositionUtils.isBeforeXorNode(activeNode.position, itemNode, false)) {\r\n        return ExpressionAutocomplete;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n// Test if 'shared' could be what's being typed. Eg.\r\n// 'section s' -> could either be interpreted as either the 'shared' keyword, or the key-value-pair key is 's'.\r\nfunction autocompleteSectionMember(nodeIdMapCollection, activeNode, parent, child, ancestorIndex) {\r\n    // SectionMember.namePairedExpression\r\n    if (child.node.maybeAttributeIndex === 2) {\r\n        // A test for 'shared', which as we're on namePairedExpression we either parsed it or skipped it.\r\n        const maybeSharedConstant = parser_1.NodeIdMapUtils.maybeXorChildByAttributeIndex(nodeIdMapCollection, parent.node.id, 1, [\r\n            \"Constant\" /* Constant */,\r\n        ]);\r\n        // 'shared' was parsed so we can exit.\r\n        if (maybeSharedConstant !== undefined) {\r\n            return undefined;\r\n        }\r\n        // SectionMember -> IdentifierPairedExpression -> Identifier\r\n        const maybeName = activeNode_1.ActiveNodeUtils.maybePreviousXorNode(activeNode, ancestorIndex, 2, [\r\n            \"IdentifierPairedExpression\" /* IdentifierPairedExpression */,\r\n            \"Identifier\" /* Identifier */,\r\n        ]);\r\n        // Name hasn't been parsed yet so we can exit.\r\n        if (maybeName === undefined || maybeName.kind !== \"Ast\" /* Ast */) {\r\n            return undefined;\r\n        }\r\n        const name = maybeName.node;\r\n        if (\"shared\" /* Shared */.startsWith(name.literal)) {\r\n            return [\"shared\" /* Shared */];\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n//# sourceMappingURL=autocomplete.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst InspectionUtils = require(\"./inspectionUtils\");\r\nexports.InspectionUtils = InspectionUtils;\r\n__export(require(\"./inspection\"));\r\n__export(require(\"./position\"));\r\n__export(require(\"./scope\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../common\");\r\nconst activeNode_1 = require(\"./activeNode\");\r\nconst autocomplete_1 = require(\"./autocomplete\");\r\nconst scope_1 = require(\"./scope\");\r\nfunction tryFrom(settings, position, nodeIdMapCollection, leafNodeIds, maybeParseError) {\r\n    const maybeActiveNode = activeNode_1.ActiveNodeUtils.maybeActiveNode(position, nodeIdMapCollection, leafNodeIds);\r\n    const triedInspectedScope = scope_1.tryInspectScope(settings, maybeActiveNode, nodeIdMapCollection, leafNodeIds);\r\n    if (common_1.ResultUtils.isErr(triedInspectedScope)) {\r\n        return triedInspectedScope;\r\n    }\r\n    const triedInspectedKeyword = autocomplete_1.tryFrom(settings, maybeActiveNode, nodeIdMapCollection, maybeParseError);\r\n    if (common_1.ResultUtils.isErr(triedInspectedKeyword)) {\r\n        return triedInspectedKeyword;\r\n    }\r\n    return common_1.ResultUtils.okFactory(Object.assign(Object.assign({ maybeActiveNode }, triedInspectedScope.value), triedInspectedKeyword.value));\r\n}\r\nexports.tryFrom = tryFrom;\r\n//# sourceMappingURL=inspection.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../common\");\r\nconst activeNode_1 = require(\"./activeNode\");\r\n// Should only be called: RecordLiteral, RecordExpression, SectionMember\r\nfunction isInKeyValuePairAssignment(state) {\r\n    // How far back do we look to find a paired expression?\r\n    //\r\n    // For SectionMember it's a single indirection, eg:\r\n    // 'X -> KeyValuePair'\r\n    //\r\n    // For everything else it's 3, where the extra 2 come from an array of Csvs, eg:\r\n    // 'Current -> ArrayWrapper -> Csv -> KeyValuePair'\r\n    let n;\r\n    if (state.activeNode.ancestry[state.nodeIndex].node.kind === \"SectionMember\" /* SectionMember */) {\r\n        n = 1;\r\n    }\r\n    else {\r\n        n = 3;\r\n    }\r\n    const maybeKeyValuePair = activeNode_1.ActiveNodeUtils.maybePreviousXorNode(state.activeNode, state.nodeIndex, n, [\r\n        \"GeneralizedIdentifierPairedAnyLiteral\" /* GeneralizedIdentifierPairedAnyLiteral */,\r\n        \"GeneralizedIdentifierPairedExpression\" /* GeneralizedIdentifierPairedExpression */,\r\n        \"IdentifierPairedExpression\" /* IdentifierPairedExpression */,\r\n        \"IdentifierExpressionPairedExpression\" /* IdentifierExpressionPairedExpression */,\r\n    ]);\r\n    if (maybeKeyValuePair === undefined) {\r\n        return false;\r\n    }\r\n    const keyValuePair = maybeKeyValuePair;\r\n    const ancestry = state.activeNode.ancestry;\r\n    const keyValuePairAncestryIndex = ancestry.indexOf(keyValuePair);\r\n    if (keyValuePairAncestryIndex === -1) {\r\n        throw new common_1.CommonError.InvariantError(\"xorNode isn't in ancestry\");\r\n    }\r\n    const maybeChild = ancestry[keyValuePairAncestryIndex - 1];\r\n    if (maybeChild === undefined) {\r\n        const details = { keyValuePairId: keyValuePair.node.id };\r\n        throw new common_1.CommonError.InvariantError(\"expected xorNode to have a child\", details);\r\n    }\r\n    return maybeChild.node.maybeAttributeIndex === 2;\r\n}\r\nexports.isInKeyValuePairAssignment = isInKeyValuePairAssignment;\r\n//# sourceMappingURL=inspectionUtils.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst PositionUtils = require(\"./positionUtils\");\r\nexports.PositionUtils = PositionUtils;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../../common\");\r\nconst parser_1 = require(\"../../parser\");\r\nfunction isBeforeXorNode(position, xorNode, isBoundIncluded) {\r\n    switch (xorNode.kind) {\r\n        case \"Ast\" /* Ast */:\r\n            return isBeforeAstNode(position, xorNode.node, isBoundIncluded);\r\n        case \"Context\" /* Context */:\r\n            return isBeforeContextNode(position, xorNode.node, isBoundIncluded);\r\n        default:\r\n            throw common_1.isNever(xorNode);\r\n    }\r\n}\r\nexports.isBeforeXorNode = isBeforeXorNode;\r\nfunction isInXorNode(position, nodeIdMapCollection, xorNode, isLowerBoundIncluded, isUpperBoundIncluded) {\r\n    switch (xorNode.kind) {\r\n        case \"Ast\" /* Ast */:\r\n            return isInAstNode(position, xorNode.node, isLowerBoundIncluded, isUpperBoundIncluded);\r\n        case \"Context\" /* Context */:\r\n            return isInContextNode(position, nodeIdMapCollection, xorNode.node, isLowerBoundIncluded, isUpperBoundIncluded);\r\n        default:\r\n            throw common_1.isNever(xorNode);\r\n    }\r\n}\r\nexports.isInXorNode = isInXorNode;\r\nfunction isOnXorNodeStart(position, xorNode) {\r\n    switch (xorNode.kind) {\r\n        case \"Ast\" /* Ast */:\r\n            return isOnAstNodeStart(position, xorNode.node);\r\n        case \"Context\" /* Context */:\r\n            return isOnContextNodeStart(position, xorNode.node);\r\n        default:\r\n            throw common_1.isNever(xorNode);\r\n    }\r\n}\r\nexports.isOnXorNodeStart = isOnXorNodeStart;\r\nfunction isOnXorNodeEnd(position, xorNode, nodeIdMapCollection) {\r\n    switch (xorNode.kind) {\r\n        case \"Ast\" /* Ast */:\r\n            return isOnAstNodeEnd(position, xorNode.node);\r\n        case \"Context\" /* Context */:\r\n            return isOnContextNodeEnd(position, xorNode.node, nodeIdMapCollection);\r\n        default:\r\n            throw common_1.isNever(xorNode);\r\n    }\r\n}\r\nexports.isOnXorNodeEnd = isOnXorNodeEnd;\r\nfunction isAfterXorNode(position, nodeIdMapCollection, xorNode, isBoundIncluded) {\r\n    switch (xorNode.kind) {\r\n        case \"Ast\" /* Ast */:\r\n            return isAfterAstNode(position, xorNode.node, isBoundIncluded);\r\n        case \"Context\" /* Context */:\r\n            return isAfterContextNode(position, nodeIdMapCollection, xorNode.node, isBoundIncluded);\r\n        default:\r\n            throw common_1.isNever(xorNode);\r\n    }\r\n}\r\nexports.isAfterXorNode = isAfterXorNode;\r\nfunction isBeforeContextNode(position, contextNode, isBoundIncluded) {\r\n    const maybeTokenStart = contextNode.maybeTokenStart;\r\n    if (maybeTokenStart === undefined) {\r\n        return false;\r\n    }\r\n    const tokenStart = maybeTokenStart;\r\n    return isBeforeTokenPosition(position, tokenStart.positionStart, isBoundIncluded);\r\n}\r\nexports.isBeforeContextNode = isBeforeContextNode;\r\nfunction isInContextNode(position, nodeIdMapCollection, contextNode, isLowerBoundIncluded, isHigherBoundIncluded) {\r\n    return (!isBeforeContextNode(position, contextNode, isLowerBoundIncluded) &&\r\n        !isAfterContextNode(position, nodeIdMapCollection, contextNode, isHigherBoundIncluded));\r\n}\r\nexports.isInContextNode = isInContextNode;\r\nfunction isOnContextNodeStart(position, contextNode) {\r\n    return contextNode.maybeTokenStart !== undefined\r\n        ? isOnTokenPosition(position, contextNode.maybeTokenStart.positionStart)\r\n        : false;\r\n}\r\nexports.isOnContextNodeStart = isOnContextNodeStart;\r\nfunction isOnContextNodeEnd(position, contextNode, nodeIdMapCollection) {\r\n    const maybeLeaf = parser_1.NodeIdMapUtils.maybeRightMostLeaf(nodeIdMapCollection, contextNode.id);\r\n    if (maybeLeaf === undefined) {\r\n        return false;\r\n    }\r\n    return isOnAstNodeEnd(position, maybeLeaf);\r\n}\r\nexports.isOnContextNodeEnd = isOnContextNodeEnd;\r\nfunction isAfterContextNode(position, nodeIdMapCollection, contextNode, isBoundIncluded) {\r\n    const maybeLeaf = parser_1.NodeIdMapUtils.maybeRightMostLeaf(nodeIdMapCollection, contextNode.id);\r\n    if (maybeLeaf === undefined) {\r\n        // We're assuming position is a valid range for the document.\r\n        // Therefore if the context node didn't have a token (caused by EOF) we can make this assumption.\r\n        if (contextNode.maybeTokenStart === undefined) {\r\n            return false;\r\n        }\r\n        else {\r\n            return isAfterTokenPosition(position, contextNode.maybeTokenStart.positionEnd, isBoundIncluded);\r\n        }\r\n    }\r\n    const leaf = maybeLeaf;\r\n    return isAfterAstNode(position, leaf, isBoundIncluded);\r\n}\r\nexports.isAfterContextNode = isAfterContextNode;\r\nfunction isBeforeAstNode(position, astNode, isBoundIncluded) {\r\n    return isBeforeTokenPosition(position, astNode.tokenRange.positionStart, isBoundIncluded);\r\n}\r\nexports.isBeforeAstNode = isBeforeAstNode;\r\nfunction isInAstNode(position, astNode, isLowerBoundIncluded, isHigherBoundIncluded) {\r\n    return (!isBeforeAstNode(position, astNode, isLowerBoundIncluded) &&\r\n        !isAfterAstNode(position, astNode, isHigherBoundIncluded));\r\n}\r\nexports.isInAstNode = isInAstNode;\r\nfunction isOnAstNodeStart(position, astNode) {\r\n    return isOnTokenPosition(position, astNode.tokenRange.positionStart);\r\n}\r\nexports.isOnAstNodeStart = isOnAstNodeStart;\r\nfunction isOnAstNodeEnd(position, astNode) {\r\n    return isOnTokenPosition(position, astNode.tokenRange.positionEnd);\r\n}\r\nexports.isOnAstNodeEnd = isOnAstNodeEnd;\r\nfunction isAfterAstNode(position, astNode, isBoundIncluded) {\r\n    return isAfterTokenPosition(position, astNode.tokenRange.positionEnd, isBoundIncluded);\r\n}\r\nexports.isAfterAstNode = isAfterAstNode;\r\nfunction isInToken(position, token, isLowerBoundIncluded, isHigherBoundIncluded) {\r\n    return (!isBeforeTokenPosition(position, token.positionStart, isLowerBoundIncluded) &&\r\n        !isAfterTokenPosition(position, token.positionEnd, isHigherBoundIncluded));\r\n}\r\nexports.isInToken = isInToken;\r\nfunction isBeforeTokenPosition(position, tokenPosition, isBoundIncluded) {\r\n    const positionLineNumber = position.lineNumber;\r\n    if (positionLineNumber < tokenPosition.lineNumber) {\r\n        return true;\r\n    }\r\n    else if (positionLineNumber > tokenPosition.lineNumber) {\r\n        return false;\r\n    }\r\n    else {\r\n        const upperBound = isBoundIncluded ? tokenPosition.lineCodeUnit : tokenPosition.lineCodeUnit + 1;\r\n        return position.lineCodeUnit < upperBound;\r\n    }\r\n}\r\nexports.isBeforeTokenPosition = isBeforeTokenPosition;\r\nfunction isOnTokenPosition(position, tokenPosition) {\r\n    return position.lineNumber === tokenPosition.lineNumber && position.lineCodeUnit === tokenPosition.lineCodeUnit;\r\n}\r\nexports.isOnTokenPosition = isOnTokenPosition;\r\nfunction isAfterTokenPosition(position, tokenPosition, isBoundIncluded) {\r\n    const positionLineNumber = position.lineNumber;\r\n    if (positionLineNumber < tokenPosition.lineNumber) {\r\n        return false;\r\n    }\r\n    else if (positionLineNumber > tokenPosition.lineNumber) {\r\n        return true;\r\n    }\r\n    else {\r\n        const upperBound = isBoundIncluded ? tokenPosition.lineCodeUnit : tokenPosition.lineCodeUnit - 1;\r\n        return position.lineCodeUnit > upperBound;\r\n    }\r\n}\r\nexports.isAfterTokenPosition = isAfterTokenPosition;\r\n//# sourceMappingURL=positionUtils.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst __1 = require(\"..\");\r\nconst common_1 = require(\"../../common\");\r\nconst parser_1 = require(\"../../parser\");\r\nconst activeNode_1 = require(\"../activeNode\");\r\nconst position_1 = require(\"../position\");\r\nfunction tryInspectIdentifier(settings, activeNode, nodeIdMapCollection, leafNodeIds) {\r\n    const state = {\r\n        nodeIndex: 0,\r\n        result: {\r\n            scope: new Map(),\r\n        },\r\n        activeNode,\r\n        nodeIdMapCollection,\r\n        leafNodeIds,\r\n    };\r\n    try {\r\n        const ancestry = activeNode.ancestry;\r\n        const numNodes = ancestry.length;\r\n        for (let index = 0; index < numNodes; index += 1) {\r\n            state.nodeIndex = index;\r\n            const xorNode = ancestry[index];\r\n            inspectNode(state, xorNode);\r\n        }\r\n        return {\r\n            kind: \"Ok\" /* Ok */,\r\n            value: Object.assign({}, state.result),\r\n        };\r\n    }\r\n    catch (err) {\r\n        return {\r\n            kind: \"Err\" /* Err */,\r\n            error: common_1.CommonError.ensureCommonError(settings.localizationTemplates, err),\r\n        };\r\n    }\r\n}\r\nexports.tryInspectIdentifier = tryInspectIdentifier;\r\nfunction inspectNode(state, xorNode) {\r\n    switch (xorNode.node.kind) {\r\n        case \"EachExpression\" /* EachExpression */:\r\n            inspectEachExpression(state, xorNode);\r\n            break;\r\n        case \"FunctionExpression\" /* FunctionExpression */:\r\n            inspectFunctionExpression(state, xorNode);\r\n            break;\r\n        case \"Identifier\" /* Identifier */:\r\n            inspectIdentifier(state, xorNode, true);\r\n            break;\r\n        case \"IdentifierExpression\" /* IdentifierExpression */:\r\n            inspectIdentifierExpression(state, xorNode, true);\r\n            break;\r\n        case \"IdentifierPairedExpression\" /* IdentifierPairedExpression */:\r\n            break;\r\n        case \"LetExpression\" /* LetExpression */:\r\n            inspectLetExpression(state, xorNode);\r\n            break;\r\n        case \"RecordExpression\" /* RecordExpression */:\r\n        case \"RecordLiteral\" /* RecordLiteral */:\r\n            inspectRecordExpressionOrRecordLiteral(state, xorNode);\r\n            break;\r\n        case \"SectionMember\" /* SectionMember */:\r\n            inspectSectionMember(state, xorNode);\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n}\r\n// If you came from the TExpression in the EachExpression,\r\n// then add '_' to the scope.\r\nfunction inspectEachExpression(state, eachExpr) {\r\n    const previous = activeNode_1.ActiveNodeUtils.expectPreviousXorNode(state.activeNode, state.nodeIndex);\r\n    if (previous.node.maybeAttributeIndex !== 1) {\r\n        return;\r\n    }\r\n    mightUpdateScope(state, \"_\", {\r\n        kind: \"Each\" /* Each */,\r\n        each: eachExpr,\r\n    });\r\n}\r\n// If position is to the right of '=>',\r\n// then add all parameter names to the scope.\r\nfunction inspectFunctionExpression(state, fnExpr) {\r\n    if (fnExpr.node.kind !== \"FunctionExpression\" /* FunctionExpression */) {\r\n        throw expectedNodeKindError(fnExpr, \"FunctionExpression\" /* FunctionExpression */);\r\n    }\r\n    const previous = activeNode_1.ActiveNodeUtils.expectPreviousXorNode(state.activeNode, state.nodeIndex);\r\n    if (previous.node.maybeAttributeIndex !== 3) {\r\n        return;\r\n    }\r\n    // It's safe to expect an Ast.\r\n    // All attributes would've had to been fully parsed before the expression body context was created,\r\n    // and the previous check ensures that a TXorNode (either context or Ast) exists for the expression body.\r\n    const parameters = parser_1.NodeIdMapUtils.expectAstChildByAttributeIndex(state.nodeIdMapCollection, fnExpr.node.id, 0, [\r\n        \"ParameterList\" /* ParameterList */,\r\n    ]);\r\n    for (const parameterCsv of parameters.content.elements) {\r\n        const parameterName = parameterCsv.node.name;\r\n        const scopeKey = parameterName.literal;\r\n        let maybeType;\r\n        let isNullable;\r\n        const maybeParameterType = parameterCsv.node.maybeParameterType;\r\n        if (maybeParameterType !== undefined) {\r\n            const asConstant = maybeParameterType.paired;\r\n            switch (asConstant.kind) {\r\n                case \"NullablePrimitiveType\" /* NullablePrimitiveType */:\r\n                    maybeType = asConstant.paired.primitiveType.constantKind;\r\n                    isNullable = true;\r\n                    break;\r\n                case \"PrimitiveType\" /* PrimitiveType */:\r\n                    maybeType = asConstant.primitiveType.constantKind;\r\n                    isNullable = false;\r\n                    break;\r\n                default:\r\n                    throw common_1.isNever(asConstant);\r\n            }\r\n        }\r\n        else {\r\n            maybeType = undefined;\r\n            isNullable = true;\r\n        }\r\n        mightUpdateScope(state, scopeKey, {\r\n            kind: \"Parameter\" /* Parameter */,\r\n            name: parameterName,\r\n            isOptional: parameterCsv.node.maybeOptionalConstant === undefined,\r\n            isNullable,\r\n            maybeType,\r\n        });\r\n    }\r\n}\r\nfunction inspectIdentifier(state, identifier, isRoot) {\r\n    // Ignore the case of a Context node as there are two possible states:\r\n    // An empty context (no children), or an Ast.TNode instance.\r\n    // Both have no identifier attached to it.\r\n    //\r\n    // Ignore the case of where the parent is an IdentifierExpression as the parent handle adding to the scope.\r\n    if (identifier.kind !== \"Ast\" /* Ast */ || isParentOfNodeKind(state, \"IdentifierExpression\" /* IdentifierExpression */)) {\r\n        return;\r\n    }\r\n    if (identifier.node.kind !== \"Identifier\" /* Identifier */) {\r\n        throw expectedNodeKindError(identifier, \"Identifier\" /* Identifier */);\r\n    }\r\n    const identifierAstNode = identifier.node;\r\n    // Don't add the identifier to scope if it's the root and position is before the identifier starts.\r\n    // 'a +| b'\r\n    // '|foo'\r\n    const position = state.activeNode.position;\r\n    if (isRoot && position_1.PositionUtils.isBeforeAstNode(position, identifierAstNode, true)) {\r\n        return;\r\n    }\r\n    // Don't add the identifier if you're coming from inside a ParameterList\r\n    // '(foo|, bar) => 1'\r\n    const maybeNext = activeNode_1.ActiveNodeUtils.maybeNextXorNode(state.activeNode, state.nodeIndex);\r\n    if (maybeNext && maybeNext.node.kind === \"Parameter\" /* Parameter */) {\r\n        return;\r\n    }\r\n    mightUpdateScope(state, identifierAstNode.literal, {\r\n        kind: \"Undefined\" /* Undefined */,\r\n        xorNode: identifier,\r\n    });\r\n}\r\nfunction inspectIdentifierExpression(state, identifierExpr, isLeaf) {\r\n    // Don't add the identifier to scope if it's the leaf,\r\n    // and if the position is before the start of the identifier.\r\n    // 'a +| b'\r\n    // '|foo'\r\n    if (isLeaf && position_1.PositionUtils.isBeforeXorNode(state.activeNode.position, identifierExpr, false)) {\r\n        return;\r\n    }\r\n    let key;\r\n    switch (identifierExpr.kind) {\r\n        case \"Ast\" /* Ast */: {\r\n            if (identifierExpr.node.kind !== \"IdentifierExpression\" /* IdentifierExpression */) {\r\n                throw expectedNodeKindError(identifierExpr, \"IdentifierExpression\" /* IdentifierExpression */);\r\n            }\r\n            const identifierExprAstNode = identifierExpr.node;\r\n            const identifier = identifierExprAstNode.identifier;\r\n            const maybeInclusiveConstant = identifierExprAstNode.maybeInclusiveConstant;\r\n            key =\r\n                maybeInclusiveConstant !== undefined\r\n                    ? maybeInclusiveConstant.constantKind + identifier.literal\r\n                    : identifier.literal;\r\n            break;\r\n        }\r\n        case \"Context\" /* Context */: {\r\n            key = \"\";\r\n            const nodeIdMapCollection = state.nodeIdMapCollection;\r\n            // Add the optional inclusive constant `@` if it was parsed.\r\n            const maybeInclusiveConstant = parser_1.NodeIdMapUtils.maybeXorChildByAttributeIndex(nodeIdMapCollection, identifierExpr.node.id, 0, [\"Constant\" /* Constant */]);\r\n            if (maybeInclusiveConstant !== undefined) {\r\n                const inclusiveConstant = maybeInclusiveConstant.node;\r\n                // Adds the '@' prefix.\r\n                key = inclusiveConstant.constantKind;\r\n            }\r\n            const maybeIdentifier = parser_1.NodeIdMapUtils.maybeXorChildByAttributeIndex(nodeIdMapCollection, identifierExpr.node.id, 1, [\"Identifier\" /* Identifier */]);\r\n            if (maybeIdentifier !== undefined) {\r\n                const identifier = maybeIdentifier.node;\r\n                key += identifier.literal;\r\n            }\r\n            break;\r\n        }\r\n        default:\r\n            throw common_1.isNever(identifierExpr);\r\n    }\r\n    if (key.length) {\r\n        mightUpdateScope(state, key, {\r\n            kind: \"Undefined\" /* Undefined */,\r\n            xorNode: identifierExpr,\r\n        });\r\n    }\r\n}\r\n// If position is to the right of an equals sign,\r\n// then add all keys to the scope EXCEPT for the key that the position is under.\r\nfunction inspectLetExpression(state, letExpr) {\r\n    const maybePreviousAttributeIndex = activeNode_1.ActiveNodeUtils.expectPreviousXorNode(state.activeNode, state.nodeIndex).node.maybeAttributeIndex;\r\n    if (maybePreviousAttributeIndex !== 3 && !__1.InspectionUtils.isInKeyValuePairAssignment(state)) {\r\n        return;\r\n    }\r\n    const nodeIdMapCollection = state.nodeIdMapCollection;\r\n    let csvArray;\r\n    let maybeAncestorKeyValuePair;\r\n    // If ancestor is an expression\r\n    if (maybePreviousAttributeIndex === 3) {\r\n        csvArray = parser_1.NodeIdMapUtils.expectXorChildByAttributeIndex(nodeIdMapCollection, letExpr.node.id, 1, [\r\n            \"ArrayWrapper\" /* ArrayWrapper */,\r\n        ]);\r\n        maybeAncestorKeyValuePair = undefined;\r\n    }\r\n    else {\r\n        csvArray = activeNode_1.ActiveNodeUtils.expectPreviousXorNode(state.activeNode, state.nodeIndex, 1, [\r\n            \"ArrayWrapper\" /* ArrayWrapper */,\r\n        ]);\r\n        maybeAncestorKeyValuePair = activeNode_1.ActiveNodeUtils.expectPreviousXorNode(state.activeNode, state.nodeIndex, 3, [\r\n            \"IdentifierPairedExpression\" /* IdentifierPairedExpression */,\r\n        ]);\r\n    }\r\n    for (const keyValuePair of xorNodesOnCsvFromCsvArray(nodeIdMapCollection, csvArray)) {\r\n        if (maybeAncestorKeyValuePair && maybeAncestorKeyValuePair.node.id === keyValuePair.node.id) {\r\n            continue;\r\n        }\r\n        const keyValuePairId = keyValuePair.node.id;\r\n        const maybeKey = parser_1.NodeIdMapUtils.maybeAstChildByAttributeIndex(nodeIdMapCollection, keyValuePairId, 0, [\"Identifier\" /* Identifier */]);\r\n        if (maybeKey === undefined) {\r\n            continue;\r\n        }\r\n        const key = maybeKey;\r\n        const maybeValue = parser_1.NodeIdMapUtils.maybeXorChildByAttributeIndex(nodeIdMapCollection, keyValuePairId, 2, undefined);\r\n        mightUpdateScope(state, key.literal, {\r\n            kind: \"KeyValuePair\" /* KeyValuePair */,\r\n            key,\r\n            maybeValue,\r\n        });\r\n    }\r\n}\r\n// If position is to the right of an equals sign,\r\n// then add all keys to scope EXCEPT for the one the that position is under.\r\nfunction inspectRecordExpressionOrRecordLiteral(state, _) {\r\n    const nodeIdMapCollection = state.nodeIdMapCollection;\r\n    // Only add to scope if you're in the right hand of an assignment.\r\n    if (!__1.InspectionUtils.isInKeyValuePairAssignment(state)) {\r\n        return;\r\n    }\r\n    const csvArray = activeNode_1.ActiveNodeUtils.expectPreviousXorNode(state.activeNode, state.nodeIndex, 1, [\r\n        \"ArrayWrapper\" /* ArrayWrapper */,\r\n    ]);\r\n    const keyValuePair = activeNode_1.ActiveNodeUtils.expectPreviousXorNode(state.activeNode, state.nodeIndex, 3, [\r\n        \"GeneralizedIdentifierPairedAnyLiteral\" /* GeneralizedIdentifierPairedAnyLiteral */,\r\n        \"GeneralizedIdentifierPairedExpression\" /* GeneralizedIdentifierPairedExpression */,\r\n    ]);\r\n    for (const csv of xorNodesOnCsvFromCsvArray(nodeIdMapCollection, csvArray)) {\r\n        const nodeId = csv.node.id;\r\n        // If position is under this node then don't add it's key to the scope.\r\n        if (csv.node.id === keyValuePair.node.id) {\r\n            continue;\r\n        }\r\n        const maybeKey = parser_1.NodeIdMapUtils.maybeXorChildByAttributeIndex(nodeIdMapCollection, nodeId, 0, [\"GeneralizedIdentifier\" /* GeneralizedIdentifier */]);\r\n        if (maybeKey === undefined) {\r\n            continue;\r\n        }\r\n        const key = maybeKey;\r\n        const maybeValue = parser_1.NodeIdMapUtils.maybeXorChildByAttributeIndex(nodeIdMapCollection, nodeId, 2, undefined);\r\n        if (key.kind === \"Ast\" /* Ast */) {\r\n            const keyAstNode = key.node;\r\n            mightUpdateScope(state, keyAstNode.literal, {\r\n                kind: \"KeyValuePair\" /* KeyValuePair */,\r\n                key: keyAstNode,\r\n                maybeValue,\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction inspectSectionMember(state, sectionMember) {\r\n    if (!__1.InspectionUtils.isInKeyValuePairAssignment(state)) {\r\n        return;\r\n    }\r\n    const nodeIdMapCollection = state.nodeIdMapCollection;\r\n    const sectionMemberArray = activeNode_1.ActiveNodeUtils.expectNextXorNode(state.activeNode, state.nodeIndex, 1, [\r\n        \"ArrayWrapper\" /* ArrayWrapper */,\r\n    ]);\r\n    const sectionMembers = parser_1.NodeIdMapUtils.expectXorChildren(nodeIdMapCollection, sectionMemberArray.node.id);\r\n    for (const iterSectionMember of sectionMembers) {\r\n        // Ignore if it's the current SectionMember.\r\n        if (iterSectionMember.node.id === sectionMember.node.id) {\r\n            continue;\r\n        }\r\n        const maybeKeyValuePair = parser_1.NodeIdMapUtils.maybeXorChildByAttributeIndex(nodeIdMapCollection, iterSectionMember.node.id, 2, [\"IdentifierPairedExpression\" /* IdentifierPairedExpression */]);\r\n        if (maybeKeyValuePair === undefined) {\r\n            continue;\r\n        }\r\n        const keyValuePair = maybeKeyValuePair;\r\n        // Add name to scope.\r\n        const maybeName = parser_1.NodeIdMapUtils.maybeXorChildByAttributeIndex(nodeIdMapCollection, keyValuePair.node.id, 0, [\"Identifier\" /* Identifier */]);\r\n        if (maybeName === undefined || maybeName.kind === \"Context\" /* Context */) {\r\n            continue;\r\n        }\r\n        const name = maybeName.node;\r\n        const maybeValue = parser_1.NodeIdMapUtils.maybeXorChildByAttributeIndex(nodeIdMapCollection, keyValuePair.node.id, 2, undefined);\r\n        mightUpdateScope(state, name.literal, {\r\n            kind: \"SectionMember\" /* SectionMember */,\r\n            key: name,\r\n            maybeValue,\r\n        });\r\n    }\r\n}\r\nfunction expectedNodeKindError(xorNode, expected) {\r\n    const details = {\r\n        xorNodeId: xorNode.node.id,\r\n        expectedNodeKind: expected,\r\n        actualNodeKind: xorNode.node.kind,\r\n    };\r\n    return new common_1.CommonError.InvariantError(`expected xorNode to be of kind ${expected}`, details);\r\n}\r\nfunction isParentOfNodeKind(state, parentNodeKind) {\r\n    const maybeParent = activeNode_1.ActiveNodeUtils.maybeNextXorNode(state.activeNode, state.nodeIndex);\r\n    return maybeParent !== undefined ? maybeParent.node.kind === parentNodeKind : false;\r\n}\r\nfunction mightUpdateScope(state, key, scopeItem) {\r\n    const unsafeScope = state.result.scope;\r\n    const maybeScopeItem = unsafeScope.get(key);\r\n    const isUpdateNeeded = maybeScopeItem === undefined ||\r\n        (maybeScopeItem.kind === \"Undefined\" /* Undefined */ && scopeItem.kind !== \"Undefined\" /* Undefined */);\r\n    if (isUpdateNeeded) {\r\n        unsafeScope.set(key, scopeItem);\r\n    }\r\n}\r\n// Takes an XorNode TCsvArray and returns collection.elements.map(csv => csv.node),\r\n// plus extra boilerplate to handle TXorNode.\r\nfunction xorNodesOnCsvFromCsvArray(nodeIdMapCollection, csvArray) {\r\n    const csvNodes = parser_1.NodeIdMapUtils.expectXorChildren(nodeIdMapCollection, csvArray.node.id);\r\n    const result = [];\r\n    for (const csv of csvNodes) {\r\n        const maybeCsvNode = parser_1.NodeIdMapUtils.maybeXorChildByAttributeIndex(nodeIdMapCollection, csv.node.id, 0, undefined);\r\n        if (maybeCsvNode === undefined) {\r\n            break;\r\n        }\r\n        const csvNode = maybeCsvNode;\r\n        result.push(csvNode);\r\n    }\r\n    return result;\r\n}\r\n//# sourceMappingURL=identifier.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./identifier\"));\r\n__export(require(\"./invokeExpression\"));\r\n__export(require(\"./scope\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../../common\");\r\nconst parser_1 = require(\"../../parser\");\r\nconst activeNode_1 = require(\"../activeNode\");\r\nconst position_1 = require(\"../position\");\r\nfunction inspectInvokeExpression(activeNode, nodeIdMapCollection) {\r\n    const ancestors = activeNode.ancestry;\r\n    const numAncestors = activeNode.ancestry.length;\r\n    const position = activeNode.position;\r\n    for (let index = 0; index < numAncestors; index += 1) {\r\n        const xorNode = ancestors[index];\r\n        if (!isInvokeExpressionContent(position, xorNode)) {\r\n            continue;\r\n        }\r\n        return {\r\n            maybeInvokeExpression: {\r\n                xorNode: xorNode,\r\n                maybeName: maybeInvokeExpressionName(nodeIdMapCollection, xorNode.node.id),\r\n                maybeArguments: inspectInvokeExpressionArguments(nodeIdMapCollection, activeNode, index),\r\n            },\r\n        };\r\n    }\r\n    return {\r\n        maybeInvokeExpression: undefined,\r\n    };\r\n}\r\nexports.inspectInvokeExpression = inspectInvokeExpression;\r\nfunction isInvokeExpressionContent(position, xorNode) {\r\n    if (xorNode.node.kind !== \"InvokeExpression\" /* InvokeExpression */) {\r\n        return false;\r\n    }\r\n    // Check if position is in the wrapped contents (InvokeExpression arguments).\r\n    if (xorNode.kind === \"Ast\" /* Ast */) {\r\n        const invokeExprAstNode = xorNode.node;\r\n        if (!position_1.PositionUtils.isInAstNode(position, invokeExprAstNode.content, true, true)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nfunction maybeInvokeExpressionName(nodeIdMapCollection, nodeId) {\r\n    const invokeExprXorNode = parser_1.NodeIdMapUtils.expectXorNode(nodeIdMapCollection, nodeId);\r\n    if (invokeExprXorNode.node.kind !== \"InvokeExpression\" /* InvokeExpression */) {\r\n        const details = { invokeExprXorNode };\r\n        throw new common_1.CommonError.InvariantError(`expected invokeExprXorNode to have a Ast.NodeKind of ${\"InvokeExpression\" /* InvokeExpression */}`, details);\r\n    }\r\n    // The only place for an identifier in a RecursivePrimaryExpression is as the head, therefore an InvokeExpression\r\n    // only has a name if the InvokeExpression is the 0th element in the RecursivePrimaryExpressionArray.\r\n    let maybeName;\r\n    if (invokeExprXorNode.node.maybeAttributeIndex === 0) {\r\n        // Grab the RecursivePrimaryExpression's head if it's an IdentifierExpression\r\n        const recursiveArrayXorNode = parser_1.NodeIdMapUtils.expectParentXorNode(nodeIdMapCollection, invokeExprXorNode.node.id);\r\n        const recursiveExprXorNode = parser_1.NodeIdMapUtils.expectParentXorNode(nodeIdMapCollection, recursiveArrayXorNode.node.id);\r\n        const headXorNode = parser_1.NodeIdMapUtils.expectXorChildByAttributeIndex(nodeIdMapCollection, recursiveExprXorNode.node.id, 0, undefined);\r\n        if (headXorNode.node.kind === \"IdentifierExpression\" /* IdentifierExpression */) {\r\n            if (headXorNode.kind !== \"Ast\" /* Ast */) {\r\n                const details = {\r\n                    identifierExpressionNodeId: headXorNode.node.id,\r\n                    invokeExpressionNodeId: invokeExprXorNode.node.id,\r\n                };\r\n                throw new common_1.CommonError.InvariantError(`the younger IdentifierExpression sibling should've finished parsing before the InvokeExpression node was reached`, details);\r\n            }\r\n            const identifierExpression = headXorNode.node;\r\n            maybeName =\r\n                identifierExpression.maybeInclusiveConstant === undefined\r\n                    ? identifierExpression.identifier.literal\r\n                    : identifierExpression.maybeInclusiveConstant.constantKind +\r\n                        identifierExpression.identifier.literal;\r\n        }\r\n    }\r\n    return maybeName;\r\n}\r\nfunction inspectInvokeExpressionArguments(nodeIdMapCollection, activeNode, nodeIndex) {\r\n    // Grab arguments if they exist, else return early.\r\n    const maybeCsvArray = activeNode_1.ActiveNodeUtils.maybePreviousXorNode(activeNode, nodeIndex, 1, [\r\n        \"ArrayWrapper\" /* ArrayWrapper */,\r\n    ]);\r\n    if (maybeCsvArray === undefined) {\r\n        return undefined;\r\n    }\r\n    // const nodeIdMapCollection: NodeIdMap.Collection = state.nodeIdMapCollection;\r\n    // const position: Position = state.activeNode.position;\r\n    const csvArray = maybeCsvArray;\r\n    const csvNodes = parser_1.NodeIdMapUtils.expectXorChildren(nodeIdMapCollection, csvArray.node.id);\r\n    const numArguments = csvNodes.length;\r\n    const maybeAncestorCsv = activeNode_1.ActiveNodeUtils.maybePreviousXorNode(activeNode, nodeIndex, 2, [\r\n        \"Csv\" /* Csv */,\r\n    ]);\r\n    const maybePositionArgumentIndex = maybeAncestorCsv !== undefined ? maybeAncestorCsv.node.maybeAttributeIndex : undefined;\r\n    return {\r\n        numArguments,\r\n        positionArgumentIndex: maybePositionArgumentIndex !== undefined ? maybePositionArgumentIndex : 0,\r\n    };\r\n}\r\n//# sourceMappingURL=invokeExpression.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../../common\");\r\nconst identifier_1 = require(\"./identifier\");\r\nconst invokeExpression_1 = require(\"./invokeExpression\");\r\nfunction tryInspectScope(settings, maybeActiveNode, nodeIdMapCollection, leafNodeIds) {\r\n    if (maybeActiveNode === undefined) {\r\n        return {\r\n            kind: \"Ok\" /* Ok */,\r\n            value: DefaultIdentifierInspection,\r\n        };\r\n    }\r\n    const activeNode = maybeActiveNode;\r\n    try {\r\n        const triedInspectIdentifier = identifier_1.tryInspectIdentifier(settings, maybeActiveNode, nodeIdMapCollection, leafNodeIds);\r\n        if (common_1.ResultUtils.isErr(triedInspectIdentifier)) {\r\n            return triedInspectIdentifier;\r\n        }\r\n        const maybeInspectedInvokeExpression = invokeExpression_1.inspectInvokeExpression(activeNode, nodeIdMapCollection);\r\n        return common_1.ResultUtils.okFactory(Object.assign(Object.assign({}, triedInspectIdentifier.value), maybeInspectedInvokeExpression));\r\n    }\r\n    catch (err) {\r\n        return {\r\n            kind: \"Err\" /* Err */,\r\n            error: common_1.CommonError.ensureCommonError(settings.localizationTemplates, err),\r\n        };\r\n    }\r\n}\r\nexports.tryInspectScope = tryInspectScope;\r\nconst DefaultIdentifierInspection = {\r\n    scope: new Map(),\r\n    maybeInvokeExpression: undefined,\r\n};\r\n//# sourceMappingURL=scope.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=comment.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../common\");\r\nconst localization_1 = require(\"../localization\");\r\nclass LexError extends Error {\r\n    constructor(innerError) {\r\n        super(innerError.message);\r\n        this.innerError = innerError;\r\n    }\r\n}\r\nexports.LexError = LexError;\r\nclass BadLineNumberError extends Error {\r\n    constructor(templates, kind, lineNumber, numLines) {\r\n        super(localization_1.Localization.error_lex_badLineNumber(templates, kind));\r\n        this.kind = kind;\r\n        this.lineNumber = lineNumber;\r\n        this.numLines = numLines;\r\n    }\r\n}\r\nexports.BadLineNumberError = BadLineNumberError;\r\nclass BadRangeError extends Error {\r\n    constructor(templates, range, kind) {\r\n        super(localization_1.Localization.error_lex_badRange(templates, kind));\r\n        this.range = range;\r\n        this.kind = kind;\r\n    }\r\n}\r\nexports.BadRangeError = BadRangeError;\r\nclass BadStateError extends Error {\r\n    constructor(templates, innerError) {\r\n        super(localization_1.Localization.error_lex_badState(templates));\r\n        this.innerError = innerError;\r\n    }\r\n}\r\nexports.BadStateError = BadStateError;\r\nclass ErrorLineMapError extends Error {\r\n    constructor(templates, errorLineMap) {\r\n        super(localization_1.Localization.error_lex_lineMap(templates, errorLineMap));\r\n        this.errorLineMap = errorLineMap;\r\n    }\r\n}\r\nexports.ErrorLineMapError = ErrorLineMapError;\r\nclass EndOfStreamError extends Error {\r\n    constructor(templates) {\r\n        super(localization_1.Localization.error_lex_endOfStream(templates));\r\n    }\r\n}\r\nexports.EndOfStreamError = EndOfStreamError;\r\nclass ExpectedError extends Error {\r\n    constructor(templates, graphemePosition, kind) {\r\n        super(localization_1.Localization.error_lex_expectedKind(templates, kind));\r\n        this.graphemePosition = graphemePosition;\r\n        this.kind = kind;\r\n    }\r\n}\r\nexports.ExpectedError = ExpectedError;\r\nclass UnexpectedEofError extends Error {\r\n    constructor(templates, graphemePosition) {\r\n        super(localization_1.Localization.error_lex_endOfStreamPartwayRead(templates));\r\n        this.graphemePosition = graphemePosition;\r\n    }\r\n}\r\nexports.UnexpectedEofError = UnexpectedEofError;\r\nclass UnexpectedReadError extends Error {\r\n    constructor(templates, graphemePosition) {\r\n        super(localization_1.Localization.error_lex_unexpectedRead(templates));\r\n        this.graphemePosition = graphemePosition;\r\n    }\r\n}\r\nexports.UnexpectedReadError = UnexpectedReadError;\r\nclass UnterminatedMultilineTokenError extends Error {\r\n    constructor(templates, graphemePosition, kind) {\r\n        super(localization_1.Localization.error_lex_unterminatedMultilineToken(templates, kind));\r\n        this.graphemePosition = graphemePosition;\r\n        this.kind = kind;\r\n    }\r\n}\r\nexports.UnterminatedMultilineTokenError = UnterminatedMultilineTokenError;\r\nfunction isTLexError(x) {\r\n    return x instanceof LexError || x instanceof common_1.CommonError.CommonError;\r\n}\r\nexports.isTLexError = isTLexError;\r\nfunction isTInnerLexError(x) {\r\n    return (x instanceof BadLineNumberError ||\r\n        x instanceof BadRangeError ||\r\n        x instanceof BadStateError ||\r\n        x instanceof EndOfStreamError ||\r\n        x instanceof ErrorLineMapError ||\r\n        x instanceof ExpectedError ||\r\n        x instanceof UnexpectedEofError ||\r\n        x instanceof UnexpectedReadError ||\r\n        x instanceof UnterminatedMultilineTokenError);\r\n}\r\nexports.isTInnerLexError = isTInnerLexError;\r\n//# sourceMappingURL=error.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst LexError = require(\"./error\");\r\nexports.LexError = LexError;\r\nconst Lexer = require(\"./lexer\");\r\nexports.Lexer = Lexer;\r\n__export(require(\"./comment\"));\r\n__export(require(\"./keywords\"));\r\n__export(require(\"./lexerSnapshot\"));\r\n__export(require(\"./token\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Keywords = [\r\n    \"and\" /* And */,\r\n    \"as\" /* As */,\r\n    \"each\" /* Each */,\r\n    \"else\" /* Else */,\r\n    \"error\" /* Error */,\r\n    \"false\" /* False */,\r\n    \"if\" /* If */,\r\n    \"in\" /* In */,\r\n    \"is\" /* Is */,\r\n    \"let\" /* Let */,\r\n    \"meta\" /* Meta */,\r\n    \"not\" /* Not */,\r\n    \"or\" /* Or */,\r\n    \"otherwise\" /* Otherwise */,\r\n    \"section\" /* Section */,\r\n    \"shared\" /* Shared */,\r\n    \"then\" /* Then */,\r\n    \"true\" /* True */,\r\n    \"try\" /* Try */,\r\n    \"type\" /* Type */,\r\n    \"#binary\" /* HashBinary */,\r\n    \"#date\" /* HashDate */,\r\n    \"#datetime\" /* HashDateTime */,\r\n    \"#datetimezone\" /* HashDateTimeZone */,\r\n    \"#duration\" /* HashDuration */,\r\n    \"#infinity\" /* HashInfinity */,\r\n    \"#nan\" /* HashNan */,\r\n    \"#sections\" /* HashSections */,\r\n    \"#shared\" /* HashShared */,\r\n    \"#table\" /* HashTable */,\r\n    \"#time\" /* HashTime */,\r\n];\r\nexports.TExpressionKeywords = [\r\n    \"each\" /* Each */,\r\n    \"error\" /* Error */,\r\n    \"false\" /* False */,\r\n    \"#binary\" /* HashBinary */,\r\n    \"#date\" /* HashDate */,\r\n    \"#datetime\" /* HashDateTime */,\r\n    \"#datetimezone\" /* HashDateTimeZone */,\r\n    \"#duration\" /* HashDuration */,\r\n    \"#infinity\" /* HashInfinity */,\r\n    \"#nan\" /* HashNan */,\r\n    \"#table\" /* HashTable */,\r\n    \"#time\" /* HashTime */,\r\n    \"if\" /* If */,\r\n    \"let\" /* Let */,\r\n    \"not\" /* Not */,\r\n    \"true\" /* True */,\r\n    \"try\" /* Try */,\r\n    \"type\" /* Type */,\r\n];\r\n//# sourceMappingURL=keywords.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _1 = require(\".\");\r\nconst common_1 = require(\"../common\");\r\nfunction stateFrom(settings, text) {\r\n    const splitLines = splitOnLineTerminators(text);\r\n    const tokenizedLines = tokenizedLinesFrom(settings.localizationTemplates, splitLines, \"Default\" /* Default */);\r\n    return {\r\n        lines: tokenizedLines,\r\n        localizationTemplates: settings.localizationTemplates,\r\n    };\r\n}\r\nexports.stateFrom = stateFrom;\r\nfunction appendLine(state, text, lineTerminator) {\r\n    const lines = state.lines;\r\n    const numLines = lines.length;\r\n    const maybeLatestLine = lines[numLines - 1];\r\n    const lineModeStart = maybeLatestLine ? maybeLatestLine.lineModeEnd : \"Default\" /* Default */;\r\n    const untokenizedLine = lineFrom(text, lineTerminator, lineModeStart);\r\n    const tokenizedLine = tokenize(state.localizationTemplates, untokenizedLine, numLines);\r\n    return Object.assign(Object.assign({}, state), { lines: state.lines.concat(tokenizedLine) });\r\n}\r\nexports.appendLine = appendLine;\r\nfunction tryUpdateLine(state, lineNumber, text) {\r\n    const lines = state.lines;\r\n    const maybeError = maybeBadLineNumberError(state, lineNumber);\r\n    if (maybeError) {\r\n        return common_1.ResultUtils.errFactory(new _1.LexError.LexError(maybeError));\r\n    }\r\n    const line = lines[lineNumber];\r\n    const range = rangeFrom(line, lineNumber);\r\n    return tryUpdateRange(state, range, text);\r\n}\r\nexports.tryUpdateLine = tryUpdateLine;\r\nfunction tryUpdateRange(state, range, text) {\r\n    const maybeError = maybeBadRangeError(state, range);\r\n    if (maybeError) {\r\n        return common_1.ResultUtils.errFactory(new _1.LexError.LexError(maybeError));\r\n    }\r\n    const splitLines = splitOnLineTerminators(text);\r\n    const rangeStart = range.start;\r\n    const lineStart = state.lines[rangeStart.lineNumber];\r\n    const textPrefix = lineStart.text.substring(0, rangeStart.lineCodeUnit);\r\n    splitLines[0].text = textPrefix + splitLines[0].text;\r\n    const rangeEnd = range.end;\r\n    const lineEnd = state.lines[rangeEnd.lineNumber];\r\n    const textSuffix = lineEnd.text.substr(rangeEnd.lineCodeUnit);\r\n    const lastSplitLine = splitLines[splitLines.length - 1];\r\n    lastSplitLine.text = lastSplitLine.text + textSuffix;\r\n    // make sure we have a line terminator\r\n    lastSplitLine.lineTerminator = lineEnd.lineTerminator;\r\n    const maybePreviousLine = state.lines[rangeStart.lineNumber - 1];\r\n    const previousLineModeEnd = maybePreviousLine !== undefined ? maybePreviousLine.lineModeEnd : \"Default\" /* Default */;\r\n    const newLines = tokenizedLinesFrom(state.localizationTemplates, splitLines, previousLineModeEnd);\r\n    const lines = [\r\n        ...state.lines.slice(0, rangeStart.lineNumber),\r\n        ...newLines,\r\n        ...retokenizeLines(state, rangeEnd.lineNumber + 1, newLines[newLines.length - 1].lineModeEnd),\r\n    ];\r\n    return common_1.ResultUtils.okFactory({\r\n        lines,\r\n        localizationTemplates: state.localizationTemplates,\r\n    });\r\n}\r\nexports.tryUpdateRange = tryUpdateRange;\r\nfunction tryDeleteLine(state, lineNumber) {\r\n    const lines = state.lines;\r\n    const maybeError = maybeBadLineNumberError(state, lineNumber);\r\n    if (maybeError) {\r\n        common_1.ResultUtils.errFactory(new _1.LexError.LexError(maybeError));\r\n    }\r\n    return common_1.ResultUtils.okFactory(Object.assign(Object.assign({}, state), { lines: [...lines.slice(0, lineNumber), ...lines.slice(lineNumber + 1)] }));\r\n}\r\nexports.tryDeleteLine = tryDeleteLine;\r\n// deep state comparison\r\nfunction equalStates(leftState, rightState) {\r\n    return equalLines(leftState.lines, rightState.lines);\r\n}\r\nexports.equalStates = equalStates;\r\n// deep line comparison\r\n// partial equality as ILine.text is ignored\r\nfunction equalLines(leftLines, rightLines) {\r\n    if (leftLines.length !== rightLines.length) {\r\n        return false;\r\n    }\r\n    const numLines = leftLines.length;\r\n    for (let lineIndex = 0; lineIndex < numLines; lineIndex += 1) {\r\n        const left = leftLines[lineIndex];\r\n        const right = rightLines[lineIndex];\r\n        const leftTokens = left.tokens;\r\n        const rightTokens = right.tokens;\r\n        const isEqualQuickCheck = left.kind === right.kind &&\r\n            left.lineTerminator === right.lineTerminator &&\r\n            left.lineModeStart === right.lineModeStart &&\r\n            left.lineModeEnd === right.lineModeEnd &&\r\n            leftTokens.length === rightTokens.length;\r\n        if (!isEqualQuickCheck) {\r\n            return false;\r\n        }\r\n        // isEqualQuickCheck ensures tokens.length is the same\r\n        const numTokens = leftTokens.length;\r\n        for (let tokenIndex = 0; tokenIndex < numTokens; tokenIndex += 1) {\r\n            if (!equalTokens(leftTokens[tokenIndex], rightTokens[tokenIndex])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.equalLines = equalLines;\r\n// deep token comparison\r\nfunction equalTokens(leftToken, rightToken) {\r\n    return (leftToken.kind === rightToken.kind &&\r\n        leftToken.data === rightToken.data &&\r\n        leftToken.positionStart === rightToken.positionStart &&\r\n        leftToken.positionEnd === rightToken.positionEnd);\r\n}\r\nexports.equalTokens = equalTokens;\r\nfunction isErrorState(state) {\r\n    const linesWithErrors = state.lines.filter(isErrorLine);\r\n    return linesWithErrors.length !== 0;\r\n}\r\nexports.isErrorState = isErrorState;\r\nfunction isErrorLine(line) {\r\n    switch (line.kind) {\r\n        case \"Error\" /* Error */:\r\n        case \"TouchedWithError\" /* TouchedWithError */:\r\n            return true;\r\n        case \"Touched\" /* Touched */:\r\n        case \"Untouched\" /* Untouched */:\r\n            return false;\r\n        default:\r\n            throw common_1.isNever(line);\r\n    }\r\n}\r\nexports.isErrorLine = isErrorLine;\r\nfunction maybeErrorLineMap(state) {\r\n    const errorLines = new Map();\r\n    const lines = state.lines;\r\n    const numLines = lines.length;\r\n    let errorsExist = false;\r\n    for (let index = 0; index < numLines; index += 1) {\r\n        const line = lines[index];\r\n        if (isErrorLine(line)) {\r\n            errorLines.set(index, line);\r\n            errorsExist = true;\r\n        }\r\n    }\r\n    return errorsExist ? errorLines : undefined;\r\n}\r\nexports.maybeErrorLineMap = maybeErrorLineMap;\r\n// Takes a string and splits it on all valid Power Query terminators.\r\n// The split lines retain what newline was used to create the split.\r\nfunction splitOnLineTerminators(startingText) {\r\n    let lines = startingText.split(\"\\r\\n\").map((lineText) => {\r\n        return {\r\n            text: lineText,\r\n            lineTerminator: \"\\r\\n\",\r\n        };\r\n    });\r\n    const lineTerminators = [\r\n        \"\\n\",\r\n        \"\\u2028\",\r\n        \"\\u2029\",\r\n    ];\r\n    let index = 0;\r\n    while (index < lines.length) {\r\n        let indexWasExpanded = false;\r\n        for (const lineTerminator of lineTerminators) {\r\n            const splitLine = lines[index];\r\n            const text = splitLine.text;\r\n            if (text.indexOf(lineTerminator) !== -1) {\r\n                indexWasExpanded = true;\r\n                const split = text.split(lineTerminator).map((lineText) => {\r\n                    return {\r\n                        text: lineText,\r\n                        lineTerminator,\r\n                    };\r\n                });\r\n                split[split.length - 1].lineTerminator = splitLine.lineTerminator;\r\n                lines = [...lines.slice(0, index), ...split, ...lines.slice(index + 1)];\r\n            }\r\n        }\r\n        if (!indexWasExpanded) {\r\n            index += 1;\r\n        }\r\n    }\r\n    lines[lines.length - 1].lineTerminator = \"\";\r\n    return lines;\r\n}\r\nfunction lineFrom(text, lineTerminator, lineModeStart) {\r\n    return {\r\n        kind: \"Untouched\" /* Untouched */,\r\n        text,\r\n        lineTerminator,\r\n        lineModeStart,\r\n        lineModeEnd: \"Default\" /* Default */,\r\n        tokens: [],\r\n    };\r\n}\r\nfunction graphemePositionFrom(text, lineNumber, lineCodeUnit) {\r\n    return common_1.StringUtils.graphemePositionFrom(text, lineCodeUnit, lineNumber, undefined);\r\n}\r\nfunction rangeFrom(line, lineNumber) {\r\n    return {\r\n        start: {\r\n            lineNumber,\r\n            lineCodeUnit: 0,\r\n        },\r\n        end: {\r\n            lineNumber,\r\n            lineCodeUnit: line.text.length,\r\n        },\r\n    };\r\n}\r\nfunction tokenizedLinesFrom(localizationTemplates, splitLines, previousLineModeEnd) {\r\n    const numLines = splitLines.length;\r\n    const tokenizedLines = [];\r\n    for (let lineNumber = 0; lineNumber < numLines; lineNumber += 1) {\r\n        const splitLine = splitLines[lineNumber];\r\n        const untokenizedLine = lineFrom(splitLine.text, splitLine.lineTerminator, previousLineModeEnd);\r\n        const tokenizedLine = tokenize(localizationTemplates, untokenizedLine, lineNumber);\r\n        tokenizedLines.push(tokenizedLine);\r\n        previousLineModeEnd = tokenizedLine.lineModeEnd;\r\n    }\r\n    return tokenizedLines;\r\n}\r\n// If an earlier line changed its lineModeEnd, eg. inserting a `\"` to start a string literal,\r\n// then the proceeding lines would need to be retokenized.\r\n// Stops retokenizing when previous.lineModeEnd !== current.lineModeStart.\r\n// Returns lines in the range [lineNumber, lines.length -1]\r\nfunction retokenizeLines(state, lineNumber, previousLineModeEnd) {\r\n    const lines = state.lines;\r\n    const localizationTemplates = state.localizationTemplates;\r\n    if (lines[lineNumber] === undefined) {\r\n        return [];\r\n    }\r\n    const retokenizedLines = [];\r\n    if (previousLineModeEnd !== lines[lineNumber].lineModeStart) {\r\n        const offsetLineNumber = lineNumber;\r\n        let maybeCurrentLine = lines[lineNumber];\r\n        while (maybeCurrentLine) {\r\n            const line = maybeCurrentLine;\r\n            if (previousLineModeEnd !== line.lineModeStart) {\r\n                const untokenizedLine = lineFrom(line.text, line.lineTerminator, previousLineModeEnd);\r\n                const retokenizedLine = tokenize(localizationTemplates, untokenizedLine, offsetLineNumber);\r\n                retokenizedLines.push(retokenizedLine);\r\n                previousLineModeEnd = retokenizedLine.lineModeEnd;\r\n                lineNumber += 1;\r\n                maybeCurrentLine = lines[lineNumber];\r\n            }\r\n            else {\r\n                return [...retokenizedLines, ...lines.slice(lineNumber + 1)];\r\n            }\r\n        }\r\n        return retokenizedLines;\r\n    }\r\n    else {\r\n        return lines.slice(lineNumber);\r\n    }\r\n}\r\n// The main function of the lexer's tokenizer.\r\nfunction tokenize(localizationTemplates, line, lineNumber) {\r\n    switch (line.kind) {\r\n        // Cannot tokenize something that ended with an error,\r\n        // nothing has changed since the last tokenize.\r\n        // Update the line's text before trying again.\r\n        case \"Error\" /* Error */:\r\n            return line;\r\n        case \"Touched\" /* Touched */:\r\n            // The line was already fully lexed once.\r\n            // Without any text changes it should throw eof to help diagnose\r\n            // why it's trying to retokenize.\r\n            return Object.assign(Object.assign({}, line), { kind: \"Error\" /* Error */, error: new _1.LexError.LexError(new _1.LexError.EndOfStreamError(localizationTemplates)) });\r\n        // Cannot tokenize something that previously ended with an error.\r\n        // Update the line's text before trying again.\r\n        case \"TouchedWithError\" /* TouchedWithError */:\r\n            return {\r\n                kind: \"Error\" /* Error */,\r\n                text: line.text,\r\n                lineTerminator: line.lineTerminator,\r\n                lineModeStart: line.lineModeStart,\r\n                lineModeEnd: line.lineModeEnd,\r\n                tokens: line.tokens,\r\n                error: new _1.LexError.LexError(new _1.LexError.BadStateError(localizationTemplates, line.error)),\r\n            };\r\n        case \"Untouched\" /* Untouched */:\r\n            break;\r\n        default:\r\n            throw common_1.isNever(line);\r\n    }\r\n    const untouchedLine = line;\r\n    const text = untouchedLine.text;\r\n    const textLength = text.length;\r\n    // If there's nothing to tokenize set lineModeEnd to lineModeStart.\r\n    if (textLength === 0) {\r\n        return {\r\n            kind: \"Touched\" /* Touched */,\r\n            text: line.text,\r\n            lineTerminator: line.lineTerminator,\r\n            lineModeStart: line.lineModeStart,\r\n            lineModeEnd: line.lineModeStart,\r\n            tokens: [],\r\n        };\r\n    }\r\n    let lineMode = line.lineModeStart;\r\n    let currentPosition = 0;\r\n    if (lineMode === \"Default\" /* Default */) {\r\n        currentPosition = drainWhitespace(text, currentPosition);\r\n    }\r\n    const newTokens = [];\r\n    let continueLexing = currentPosition !== text.length;\r\n    let maybeError;\r\n    // While neither eof nor having encountered an error:\r\n    //  * Lex according to lineModeStart, starting from currentPosition.\r\n    //  * Update currentPosition and lineMode.\r\n    //  * Drain whitespace.\r\n    while (continueLexing) {\r\n        try {\r\n            let readOutcome;\r\n            switch (lineMode) {\r\n                case \"Comment\" /* Comment */:\r\n                    readOutcome = tokenizeMultilineCommentContentOrEnd(line, currentPosition);\r\n                    break;\r\n                case \"Default\" /* Default */:\r\n                    readOutcome = tokenizeDefault(localizationTemplates, line, lineNumber, currentPosition);\r\n                    break;\r\n                case \"QuotedIdentifier\" /* QuotedIdentifier */:\r\n                    readOutcome = tokenizeQuotedIdentifierContentOrEnd(line, currentPosition);\r\n                    break;\r\n                case \"String\" /* String */:\r\n                    readOutcome = tokenizeStringLiteralContentOrEnd(line, currentPosition);\r\n                    break;\r\n                default:\r\n                    throw common_1.isNever(lineMode);\r\n            }\r\n            lineMode = readOutcome.lineMode;\r\n            const token = readOutcome.token;\r\n            newTokens.push(token);\r\n            if (lineMode === \"Default\" /* Default */) {\r\n                currentPosition = drainWhitespace(text, token.positionEnd);\r\n            }\r\n            else {\r\n                currentPosition = token.positionEnd;\r\n            }\r\n            if (currentPosition === textLength) {\r\n                continueLexing = false;\r\n            }\r\n        }\r\n        catch (e) {\r\n            let error;\r\n            if (_1.LexError.isTInnerLexError(e)) {\r\n                error = new _1.LexError.LexError(e);\r\n            }\r\n            else {\r\n                error = common_1.CommonError.ensureCommonError(localizationTemplates, e);\r\n            }\r\n            continueLexing = false;\r\n            maybeError = error;\r\n        }\r\n    }\r\n    let partialTokenizeResult;\r\n    if (maybeError) {\r\n        if (newTokens.length) {\r\n            partialTokenizeResult = common_1.PartialResultUtils.mixedFactory({\r\n                tokens: newTokens,\r\n                lineModeEnd: lineMode,\r\n            }, maybeError);\r\n        }\r\n        else {\r\n            partialTokenizeResult = common_1.PartialResultUtils.errFactory(maybeError);\r\n        }\r\n    }\r\n    else {\r\n        partialTokenizeResult = common_1.PartialResultUtils.okFactory({\r\n            tokens: newTokens,\r\n            lineModeEnd: lineMode,\r\n        });\r\n    }\r\n    return updateLineState(line, partialTokenizeResult);\r\n}\r\n// Takes the return from a tokenizeX function to updates the TLine's state.\r\nfunction updateLineState(line, tokenizePartialResult) {\r\n    switch (tokenizePartialResult.kind) {\r\n        case \"Ok\" /* Ok */: {\r\n            const tokenizeChanges = tokenizePartialResult.value;\r\n            const newTokens = line.tokens.concat(tokenizeChanges.tokens);\r\n            return {\r\n                kind: \"Touched\" /* Touched */,\r\n                text: line.text,\r\n                lineTerminator: line.lineTerminator,\r\n                lineModeStart: line.lineModeStart,\r\n                lineModeEnd: tokenizeChanges.lineModeEnd,\r\n                tokens: newTokens,\r\n            };\r\n        }\r\n        case \"Mixed\" /* Mixed */: {\r\n            const tokenizeChanges = tokenizePartialResult.value;\r\n            const newTokens = line.tokens.concat(tokenizeChanges.tokens);\r\n            return {\r\n                kind: \"TouchedWithError\" /* TouchedWithError */,\r\n                text: line.text,\r\n                lineTerminator: line.lineTerminator,\r\n                lineModeStart: line.lineModeStart,\r\n                lineModeEnd: tokenizeChanges.lineModeEnd,\r\n                tokens: newTokens,\r\n                error: tokenizePartialResult.error,\r\n            };\r\n        }\r\n        case \"Err\" /* Err */:\r\n            return {\r\n                kind: \"Error\" /* Error */,\r\n                text: line.text,\r\n                lineModeStart: line.lineModeStart,\r\n                lineTerminator: line.lineTerminator,\r\n                lineModeEnd: line.lineModeEnd,\r\n                tokens: line.tokens,\r\n                error: tokenizePartialResult.error,\r\n            };\r\n        default:\r\n            throw common_1.isNever(tokenizePartialResult);\r\n    }\r\n}\r\n// read either \"*/\" or eof\r\nfunction tokenizeMultilineCommentContentOrEnd(line, positionStart) {\r\n    const text = line.text;\r\n    const indexOfCloseComment = text.indexOf(\"*/\", positionStart);\r\n    if (indexOfCloseComment === -1) {\r\n        return {\r\n            token: readRestOfLine(\"MultilineCommentContent\" /* MultilineCommentContent */, text, positionStart),\r\n            lineMode: \"Comment\" /* Comment */,\r\n        };\r\n    }\r\n    else {\r\n        const positionEnd = indexOfCloseComment + 2;\r\n        return {\r\n            token: readTokenFrom(\"MultilineCommentEnd\" /* MultilineCommentEnd */, text, positionStart, positionEnd),\r\n            lineMode: \"Default\" /* Default */,\r\n        };\r\n    }\r\n}\r\n// read either string literal end or eof\r\nfunction tokenizeQuotedIdentifierContentOrEnd(line, currentPosition) {\r\n    const read = tokenizeStringLiteralContentOrEnd(line, currentPosition);\r\n    switch (read.token.kind) {\r\n        case \"StringContent\" /* StringLiteralContent */:\r\n            return {\r\n                lineMode: \"QuotedIdentifier\" /* QuotedIdentifier */,\r\n                token: Object.assign(Object.assign({}, read.token), { kind: \"QuotedIdentifierContent\" /* QuotedIdentifierContent */ }),\r\n            };\r\n        case \"StringLiteralEnd\" /* StringLiteralEnd */:\r\n            return {\r\n                lineMode: \"Default\" /* Default */,\r\n                token: Object.assign(Object.assign({}, read.token), { kind: \"QuotedIdentifierEnd\" /* QuotedIdentifierEnd */ }),\r\n            };\r\n        default:\r\n            const details = { read };\r\n            throw new common_1.CommonError.InvariantError(\"tokenizeStringLiteralContentOrEnd returned an unexpected kind\", details);\r\n    }\r\n}\r\n// read either string literal end or eof\r\nfunction tokenizeStringLiteralContentOrEnd(line, currentPosition) {\r\n    const text = line.text;\r\n    const maybePositionEnd = maybeIndexOfStringEnd(text, currentPosition);\r\n    if (maybePositionEnd === undefined) {\r\n        return {\r\n            token: readRestOfLine(\"StringContent\" /* StringLiteralContent */, text, currentPosition),\r\n            lineMode: \"String\" /* String */,\r\n        };\r\n    }\r\n    else {\r\n        const positionEnd = maybePositionEnd + 1;\r\n        return {\r\n            token: readTokenFrom(\"StringLiteralEnd\" /* StringLiteralEnd */, text, currentPosition, positionEnd),\r\n            lineMode: \"Default\" /* Default */,\r\n        };\r\n    }\r\n}\r\nfunction tokenizeDefault(localizationTemplates, line, lineNumber, positionStart) {\r\n    const text = line.text;\r\n    const chr1 = text[positionStart];\r\n    let token;\r\n    let lineMode = \"Default\" /* Default */;\r\n    if (chr1 === \"!\") {\r\n        token = readConstant(\"Bang\" /* Bang */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \"&\") {\r\n        token = readConstant(\"Ampersand\" /* Ampersand */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \"(\") {\r\n        token = readConstant(\"LeftParenthesis\" /* LeftParenthesis */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \")\") {\r\n        token = readConstant(\"RightParenthesis\" /* RightParenthesis */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \"*\") {\r\n        token = readConstant(\"Asterisk\" /* Asterisk */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \"+\") {\r\n        token = readConstant(\"Plus\" /* Plus */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \",\") {\r\n        token = readConstant(\"Comma\" /* Comma */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \"-\") {\r\n        token = readConstant(\"Minus\" /* Minus */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \";\") {\r\n        token = readConstant(\"Semicolon\" /* Semicolon */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \"?\") {\r\n        token = readConstant(\"QuestionMark\" /* QuestionMark */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \"@\") {\r\n        token = readConstant(\"AtSign\" /* AtSign */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \"[\") {\r\n        token = readConstant(\"LeftBracket\" /* LeftBracket */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \"]\") {\r\n        token = readConstant(\"RightBracket\" /* RightBracket */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \"{\") {\r\n        token = readConstant(\"LeftBrace\" /* LeftBrace */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === \"}\") {\r\n        token = readConstant(\"RightBrace\" /* RightBrace */, text, positionStart, 1);\r\n    }\r\n    else if (chr1 === '\"') {\r\n        const read = readOrStartStringLiteral(text, positionStart);\r\n        token = read.token;\r\n        lineMode = read.lineMode;\r\n    }\r\n    else if (chr1 === \"0\") {\r\n        const chr2 = text[positionStart + 1];\r\n        if (chr2 === \"x\" || chr2 === \"X\") {\r\n            token = readHexLiteral(localizationTemplates, text, lineNumber, positionStart);\r\n        }\r\n        else {\r\n            token = readNumericLiteral(localizationTemplates, text, lineNumber, positionStart);\r\n        }\r\n    }\r\n    else if (\"1\" <= chr1 && chr1 <= \"9\") {\r\n        token = readNumericLiteral(localizationTemplates, text, lineNumber, positionStart);\r\n    }\r\n    else if (chr1 === \".\") {\r\n        const chr2 = text[positionStart + 1];\r\n        if (chr2 === undefined) {\r\n            throw new _1.LexError.UnexpectedEofError(localizationTemplates, graphemePositionFrom(text, lineNumber, positionStart));\r\n        }\r\n        else if (\"1\" <= chr2 && chr2 <= \"9\") {\r\n            token = readNumericLiteral(localizationTemplates, text, lineNumber, positionStart);\r\n        }\r\n        else if (chr2 === \".\") {\r\n            const chr3 = text[positionStart + 2];\r\n            if (chr3 === \".\") {\r\n                token = readConstant(\"Ellipsis\" /* Ellipsis */, text, positionStart, 3);\r\n            }\r\n            else {\r\n                token = readConstant(\"DotDot\" /* DotDot */, text, positionStart, 2);\r\n            }\r\n        }\r\n        else {\r\n            throw unexpectedReadError(localizationTemplates, text, lineNumber, positionStart);\r\n        }\r\n    }\r\n    else if (chr1 === \">\") {\r\n        const chr2 = text[positionStart + 1];\r\n        if (chr2 === \"=\") {\r\n            token = readConstant(\"GreaterThanEqualTo\" /* GreaterThanEqualTo */, text, positionStart, 2);\r\n        }\r\n        else {\r\n            token = readConstant(\"GreaterThan\" /* GreaterThan */, text, positionStart, 1);\r\n        }\r\n    }\r\n    else if (chr1 === \"<\") {\r\n        const chr2 = text[positionStart + 1];\r\n        if (chr2 === \"=\") {\r\n            token = readConstant(\"LessThanEqualTo\" /* LessThanEqualTo */, text, positionStart, 2);\r\n        }\r\n        else if (chr2 === \">\") {\r\n            token = readConstant(\"NotEqual\" /* NotEqual */, text, positionStart, 2);\r\n        }\r\n        else {\r\n            token = readConstant(\"LessThan\" /* LessThan */, text, positionStart, 1);\r\n        }\r\n    }\r\n    else if (chr1 === \"=\") {\r\n        const chr2 = text[positionStart + 1];\r\n        if (chr2 === \">\") {\r\n            token = readConstant(\"FatArrow\" /* FatArrow */, text, positionStart, 2);\r\n        }\r\n        else {\r\n            token = readConstant(\"Equal\" /* Equal */, text, positionStart, 1);\r\n        }\r\n    }\r\n    else if (chr1 === \"/\") {\r\n        const chr2 = text[positionStart + 1];\r\n        if (chr2 === \"/\") {\r\n            token = readLineComment(text, positionStart);\r\n        }\r\n        else if (chr2 === \"*\") {\r\n            const read = readOrStartMultilineComment(text, positionStart);\r\n            token = read.token;\r\n            lineMode = read.lineMode;\r\n        }\r\n        else {\r\n            token = readConstant(\"Division\" /* Division */, text, positionStart, 1);\r\n        }\r\n    }\r\n    else if (chr1 === \"#\") {\r\n        const chr2 = text[positionStart + 1];\r\n        if (chr2 === '\"') {\r\n            const read = readOrStartQuotedIdentifier(text, positionStart);\r\n            token = read.token;\r\n            lineMode = read.lineMode;\r\n        }\r\n        else {\r\n            token = readKeyword(localizationTemplates, text, lineNumber, positionStart);\r\n        }\r\n    }\r\n    else {\r\n        token = readKeywordOrIdentifier(localizationTemplates, text, lineNumber, positionStart);\r\n    }\r\n    return {\r\n        token,\r\n        lineMode,\r\n    };\r\n}\r\n// newlines are not considered whitespace\r\nfunction drainWhitespace(text, position) {\r\n    let continueDraining = text[position] !== undefined;\r\n    while (continueDraining) {\r\n        const maybeLength = common_1.StringUtils.maybeRegexMatchLength(common_1.Pattern.RegExpWhitespace, text, position);\r\n        if (maybeLength) {\r\n            position += maybeLength;\r\n        }\r\n        else {\r\n            continueDraining = false;\r\n        }\r\n    }\r\n    return position;\r\n}\r\nfunction readOrStartStringLiteral(text, currentPosition) {\r\n    const maybePositionEnd = maybeIndexOfStringEnd(text, currentPosition + 1);\r\n    if (maybePositionEnd !== undefined) {\r\n        const positionEnd = maybePositionEnd + 1;\r\n        return {\r\n            token: readTokenFrom(\"StringLiteral\" /* StringLiteral */, text, currentPosition, positionEnd),\r\n            lineMode: \"Default\" /* Default */,\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            token: readRestOfLine(\"StringLiteralStart\" /* StringLiteralStart */, text, currentPosition),\r\n            lineMode: \"String\" /* String */,\r\n        };\r\n    }\r\n}\r\nfunction readHexLiteral(localizationTemplates, text, lineNumber, positionStart) {\r\n    const maybePositionEnd = maybeIndexOfRegexEnd(common_1.Pattern.RegExpHex, text, positionStart);\r\n    if (maybePositionEnd === undefined) {\r\n        throw new _1.LexError.ExpectedError(localizationTemplates, graphemePositionFrom(text, lineNumber, positionStart), \"HexLiteral\" /* HexLiteral */);\r\n    }\r\n    const positionEnd = maybePositionEnd;\r\n    return readTokenFrom(\"HexLiteral\" /* HexLiteral */, text, positionStart, positionEnd);\r\n}\r\nfunction readNumericLiteral(localizationTemplates, text, lineNumber, positionStart) {\r\n    const maybePositionEnd = maybeIndexOfRegexEnd(common_1.Pattern.RegExpNumeric, text, positionStart);\r\n    if (maybePositionEnd === undefined) {\r\n        throw new _1.LexError.ExpectedError(localizationTemplates, graphemePositionFrom(text, lineNumber, positionStart), \"Numeric\" /* Numeric */);\r\n    }\r\n    const positionEnd = maybePositionEnd;\r\n    return readTokenFrom(\"NumericLiteral\" /* NumericLiteral */, text, positionStart, positionEnd);\r\n}\r\nfunction readLineComment(text, positionStart) {\r\n    return readRestOfLine(\"LineComment\" /* LineComment */, text, positionStart);\r\n}\r\nfunction readOrStartMultilineComment(text, positionStart) {\r\n    const indexOfCloseComment = text.indexOf(\"*/\", positionStart + 2);\r\n    if (indexOfCloseComment === -1) {\r\n        return {\r\n            token: readRestOfLine(\"MultilineCommentStart\" /* MultilineCommentStart */, text, positionStart),\r\n            lineMode: \"Comment\" /* Comment */,\r\n        };\r\n    }\r\n    else {\r\n        const positionEnd = indexOfCloseComment + 2;\r\n        return {\r\n            token: readTokenFrom(\"MultilineComment\" /* MultilineComment */, text, positionStart, positionEnd),\r\n            lineMode: \"Default\" /* Default */,\r\n        };\r\n    }\r\n}\r\nfunction readKeyword(localizationTemplates, text, lineNumber, positionStart) {\r\n    const maybeLineToken = maybeReadKeyword(text, positionStart);\r\n    if (maybeLineToken) {\r\n        return maybeLineToken;\r\n    }\r\n    else {\r\n        throw unexpectedReadError(localizationTemplates, text, lineNumber, positionStart);\r\n    }\r\n}\r\nfunction maybeReadKeyword(text, currentPosition) {\r\n    const identifierPositionStart = text[currentPosition] === \"#\" ? currentPosition + 1 : currentPosition;\r\n    const maybeIdentifierPositionEnd = maybeIndexOfRegexEnd(common_1.Pattern.RegExpIdentifier, text, identifierPositionStart);\r\n    if (maybeIdentifierPositionEnd === undefined) {\r\n        return undefined;\r\n    }\r\n    const identifierPositionEnd = maybeIdentifierPositionEnd;\r\n    const data = text.substring(currentPosition, identifierPositionEnd);\r\n    const maybeKeywordTokenKind = maybeKeywordLineTokenKindFrom(data);\r\n    if (maybeKeywordTokenKind === undefined) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return {\r\n            kind: maybeKeywordTokenKind,\r\n            positionStart: currentPosition,\r\n            positionEnd: identifierPositionEnd,\r\n            data,\r\n        };\r\n    }\r\n}\r\nfunction readOrStartQuotedIdentifier(text, currentPosition) {\r\n    const maybePositionEnd = maybeIndexOfStringEnd(text, currentPosition + 2);\r\n    if (maybePositionEnd !== undefined) {\r\n        const positionEnd = maybePositionEnd + 1;\r\n        return {\r\n            token: readTokenFrom(\"Identifier\" /* Identifier */, text, currentPosition, positionEnd),\r\n            lineMode: \"Default\" /* Default */,\r\n        };\r\n    }\r\n    else {\r\n        return {\r\n            token: readRestOfLine(\"QuotedIdentifierStart\" /* QuotedIdentifierStart */, text, currentPosition),\r\n            lineMode: \"QuotedIdentifier\" /* QuotedIdentifier */,\r\n        };\r\n    }\r\n}\r\n// The case for quoted identifier has already been taken care of.\r\n// The null-literal is also read here.\r\nfunction readKeywordOrIdentifier(localizationTemplates, text, lineNumber, positionStart) {\r\n    // keyword\r\n    if (text[positionStart] === \"#\") {\r\n        return readKeyword(localizationTemplates, text, lineNumber, positionStart);\r\n    }\r\n    // either keyword or identifier\r\n    else {\r\n        const maybePositionEnd = maybeIndexOfRegexEnd(common_1.Pattern.RegExpIdentifier, text, positionStart);\r\n        if (maybePositionEnd === undefined) {\r\n            throw new _1.LexError.ExpectedError(localizationTemplates, graphemePositionFrom(text, lineNumber, positionStart), \"KeywordOrIdentifier\" /* KeywordOrIdentifier */);\r\n        }\r\n        const positionEnd = maybePositionEnd;\r\n        const data = text.substring(positionStart, positionEnd);\r\n        const maybeKeywordTokenKind = maybeKeywordLineTokenKindFrom(data);\r\n        let tokenKind;\r\n        if (maybeKeywordTokenKind !== undefined) {\r\n            tokenKind = maybeKeywordTokenKind;\r\n        }\r\n        else if (data === \"null\") {\r\n            tokenKind = \"NullLiteral\" /* NullLiteral */;\r\n        }\r\n        else {\r\n            tokenKind = \"Identifier\" /* Identifier */;\r\n        }\r\n        return {\r\n            kind: tokenKind,\r\n            positionStart,\r\n            positionEnd,\r\n            data,\r\n        };\r\n    }\r\n}\r\nfunction readConstant(lineTokenKind, text, positionStart, length) {\r\n    const positionEnd = positionStart + length;\r\n    return readTokenFrom(lineTokenKind, text, positionStart, positionEnd);\r\n}\r\nfunction readTokenFrom(lineTokenKind, text, positionStart, positionEnd) {\r\n    return {\r\n        kind: lineTokenKind,\r\n        positionStart,\r\n        positionEnd,\r\n        data: text.substring(positionStart, positionEnd),\r\n    };\r\n}\r\nfunction readRestOfLine(lineTokenKind, text, positionStart) {\r\n    const positionEnd = text.length;\r\n    return readTokenFrom(lineTokenKind, text, positionStart, positionEnd);\r\n}\r\nfunction maybeIndexOfRegexEnd(pattern, text, positionStart) {\r\n    const maybeLength = common_1.StringUtils.maybeRegexMatchLength(pattern, text, positionStart);\r\n    return maybeLength !== undefined ? positionStart + maybeLength : undefined;\r\n}\r\nfunction maybeKeywordLineTokenKindFrom(data) {\r\n    switch (data) {\r\n        case \"and\" /* And */:\r\n            return \"KeywordAnd\" /* KeywordAnd */;\r\n        case \"as\" /* As */:\r\n            return \"KeywordAs\" /* KeywordAs */;\r\n        case \"each\" /* Each */:\r\n            return \"KeywordEach\" /* KeywordEach */;\r\n        case \"else\" /* Else */:\r\n            return \"KeywordElse\" /* KeywordElse */;\r\n        case \"error\" /* Error */:\r\n            return \"KeywordError\" /* KeywordError */;\r\n        case \"false\" /* False */:\r\n            return \"KeywordFalse\" /* KeywordFalse */;\r\n        case \"if\" /* If */:\r\n            return \"KeywordIf\" /* KeywordIf */;\r\n        case \"in\" /* In */:\r\n            return \"KeywordIn\" /* KeywordIn */;\r\n        case \"is\" /* Is */:\r\n            return \"KeywordIs\" /* KeywordIs */;\r\n        case \"let\" /* Let */:\r\n            return \"KeywordLet\" /* KeywordLet */;\r\n        case \"meta\" /* Meta */:\r\n            return \"KeywordMeta\" /* KeywordMeta */;\r\n        case \"not\" /* Not */:\r\n            return \"KeywordNot\" /* KeywordNot */;\r\n        case \"or\" /* Or */:\r\n            return \"KeywordOr\" /* KeywordOr */;\r\n        case \"otherwise\" /* Otherwise */:\r\n            return \"KeywordOtherwise\" /* KeywordOtherwise */;\r\n        case \"section\" /* Section */:\r\n            return \"KeywordSection\" /* KeywordSection */;\r\n        case \"shared\" /* Shared */:\r\n            return \"KeywordShared\" /* KeywordShared */;\r\n        case \"then\" /* Then */:\r\n            return \"KeywordThen\" /* KeywordThen */;\r\n        case \"true\" /* True */:\r\n            return \"KeywordTrue\" /* KeywordTrue */;\r\n        case \"try\" /* Try */:\r\n            return \"KeywordTry\" /* KeywordTry */;\r\n        case \"type\" /* Type */:\r\n            return \"KeywordType\" /* KeywordType */;\r\n        case \"#binary\" /* HashBinary */:\r\n            return \"KeywordHashBinary\" /* KeywordHashBinary */;\r\n        case \"#date\" /* HashDate */:\r\n            return \"KeywordHashDate\" /* KeywordHashDate */;\r\n        case \"#datetime\" /* HashDateTime */:\r\n            return \"KeywordHashDateTime\" /* KeywordHashDateTime */;\r\n        case \"#datetimezone\" /* HashDateTimeZone */:\r\n            return \"KeywordHashDateTimeZone\" /* KeywordHashDateTimeZone */;\r\n        case \"#duration\" /* HashDuration */:\r\n            return \"KeywordHashDuration\" /* KeywordHashDuration */;\r\n        case \"#infinity\" /* HashInfinity */:\r\n            return \"KeywordHashInfinity\" /* KeywordHashInfinity */;\r\n        case \"#nan\" /* HashNan */:\r\n            return \"KeywordHashNan\" /* KeywordHashNan */;\r\n        case \"#sections\" /* HashSections */:\r\n            return \"KeywordHashSections\" /* KeywordHashSections */;\r\n        case \"#shared\" /* HashShared */:\r\n            return \"KeywordHashShared\" /* KeywordHashShared */;\r\n        case \"#table\" /* HashTable */:\r\n            return \"KeywordHashTable\" /* KeywordHashTable */;\r\n        case \"#time\" /* HashTime */:\r\n            return \"KeywordHashTime\" /* KeywordHashTime */;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nfunction maybeIndexOfStringEnd(text, positionStart) {\r\n    let indexLow = positionStart;\r\n    let positionEnd = text.indexOf('\"', indexLow);\r\n    while (positionEnd !== -1) {\r\n        if (text[positionEnd + 1] === '\"') {\r\n            indexLow = positionEnd + 2;\r\n            positionEnd = text.indexOf('\"', indexLow);\r\n        }\r\n        else {\r\n            return positionEnd;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction unexpectedReadError(localizationTemplates, text, lineNumber, lineCodeUnit) {\r\n    return new _1.LexError.UnexpectedReadError(localizationTemplates, graphemePositionFrom(text, lineNumber, lineCodeUnit));\r\n}\r\nfunction maybeBadLineNumberError(state, lineNumber) {\r\n    const numLines = state.lines.length;\r\n    if (lineNumber >= numLines) {\r\n        return new _1.LexError.BadLineNumberError(state.localizationTemplates, \"GreaterThanNumLines\" /* GreaterThanNumLines */, lineNumber, numLines);\r\n    }\r\n    else if (lineNumber < 0) {\r\n        return new _1.LexError.BadLineNumberError(state.localizationTemplates, \"LessThanZero\" /* LessThanZero */, lineNumber, numLines);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\n// Validator for Range.\r\nfunction maybeBadRangeError(state, range) {\r\n    const start = range.start;\r\n    const end = range.end;\r\n    const numLines = state.lines.length;\r\n    let maybeKind;\r\n    if (start.lineNumber === end.lineNumber && start.lineCodeUnit > end.lineCodeUnit) {\r\n        maybeKind = \"SameLine_LineCodeUnitStart_Higher\" /* SameLine_LineCodeUnitStart_Higher */;\r\n    }\r\n    else if (start.lineNumber > end.lineNumber) {\r\n        maybeKind = \"LineNumberStart_GreaterThan_LineNumberEnd\" /* LineNumberStart_GreaterThan_LineNumberEnd */;\r\n    }\r\n    else if (start.lineNumber < 0) {\r\n        maybeKind = \"LineNumberStart_LessThan_Zero\" /* LineNumberStart_LessThan_Zero */;\r\n    }\r\n    else if (start.lineNumber >= numLines) {\r\n        maybeKind = \"LineNumberStart_GreaterThan_NumLines\" /* LineNumberStart_GreaterThan_NumLines */;\r\n    }\r\n    else if (end.lineNumber >= numLines) {\r\n        maybeKind = \"LineNumberEnd_GreaterThan_NumLines\" /* LineNumberEnd_GreaterThan_NumLines */;\r\n    }\r\n    if (maybeKind) {\r\n        const kind = maybeKind;\r\n        return new _1.LexError.BadRangeError(state.localizationTemplates, range, kind);\r\n    }\r\n    const lines = state.lines;\r\n    const rangeStart = range.start;\r\n    const rangeEnd = range.end;\r\n    const lineStart = lines[rangeStart.lineNumber];\r\n    const lineEnd = lines[rangeEnd.lineNumber];\r\n    if (rangeStart.lineCodeUnit > lineStart.text.length) {\r\n        maybeKind = \"LineCodeUnitStart_GreaterThan_LineLength\" /* LineCodeUnitStart_GreaterThan_LineLength */;\r\n    }\r\n    else if (rangeEnd.lineCodeUnit > lineEnd.text.length) {\r\n        maybeKind = \"LineCodeUnitEnd_GreaterThan_LineLength\" /* LineCodeUnitEnd_GreaterThan_LineLength */;\r\n    }\r\n    if (maybeKind) {\r\n        return new _1.LexError.BadRangeError(state.localizationTemplates, range, maybeKind);\r\n    }\r\n    return undefined;\r\n}\r\n//# sourceMappingURL=lexer.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _1 = require(\".\");\r\nconst common_1 = require(\"../common\");\r\nclass LexerSnapshot {\r\n    constructor(text, tokens, comments, lineTerminators) {\r\n        this.text = text;\r\n        this.tokens = tokens;\r\n        this.comments = comments;\r\n        this.lineTerminators = lineTerminators;\r\n    }\r\n    static tryFrom(state) {\r\n        try {\r\n            return common_1.ResultUtils.okFactory(LexerSnapshot.factory(state));\r\n        }\r\n        catch (e) {\r\n            let error;\r\n            if (_1.LexError.isTInnerLexError(e)) {\r\n                error = new _1.LexError.LexError(e);\r\n            }\r\n            else {\r\n                error = common_1.CommonError.ensureCommonError(state.localizationTemplates, e);\r\n            }\r\n            return common_1.ResultUtils.errFactory(error);\r\n        }\r\n    }\r\n    static graphemePositionStartFrom(text, lineTerminators, flatLineToken) {\r\n        const positionStart = flatLineToken.positionStart;\r\n        const positionEnd = flatLineToken.positionEnd;\r\n        let substringPositionStart = 0;\r\n        let substringPositionEnd = text.length;\r\n        for (const lineTerminator of lineTerminators) {\r\n            if (lineTerminator.codeUnit < positionStart.codeUnit) {\r\n                substringPositionStart = lineTerminator.codeUnit + lineTerminator.text.length;\r\n            }\r\n            if (lineTerminator.codeUnit >= positionEnd.codeUnit) {\r\n                substringPositionEnd = lineTerminator.codeUnit + lineTerminator.text.length;\r\n                break;\r\n            }\r\n        }\r\n        return common_1.StringUtils.graphemePositionFrom(text.substring(substringPositionStart, substringPositionEnd), positionStart.lineCodeUnit, positionStart.lineNumber, positionEnd.codeUnit);\r\n    }\r\n    graphemePositionStartFrom(token) {\r\n        return LexerSnapshot.graphemePositionStartFrom(this.text, this.lineTerminators, token);\r\n    }\r\n    columnNumberStartFrom(token) {\r\n        return this.graphemePositionStartFrom(token).columnNumber;\r\n    }\r\n    static factory(state) {\r\n        // class properties\r\n        const tokens = [];\r\n        const comments = [];\r\n        const flattenedLines = flattenLineTokens(state);\r\n        const flatTokens = flattenedLines.flatLineTokens;\r\n        const numFlatTokens = flatTokens.length;\r\n        const text = flattenedLines.text;\r\n        const localizationTemplates = state.localizationTemplates;\r\n        let flatIndex = 0;\r\n        while (flatIndex < numFlatTokens) {\r\n            const flatToken = flatTokens[flatIndex];\r\n            switch (flatToken.kind) {\r\n                case \"LineComment\" /* LineComment */:\r\n                    comments.push(readLineComment(flatToken));\r\n                    break;\r\n                case \"MultilineComment\" /* MultilineComment */:\r\n                    comments.push(readSingleLineMultilineComment(flatToken));\r\n                    break;\r\n                case \"MultilineCommentStart\" /* MultilineCommentStart */: {\r\n                    const concatenatedTokenRead = readMultilineComment(localizationTemplates, flattenedLines, flatToken);\r\n                    comments.push(concatenatedTokenRead.comment);\r\n                    flatIndex = concatenatedTokenRead.flatIndexEnd;\r\n                    break;\r\n                }\r\n                case \"QuotedIdentifierStart\" /* QuotedIdentifierStart */: {\r\n                    const concatenatedTokenRead = readQuotedIdentifier(localizationTemplates, flattenedLines, flatToken);\r\n                    tokens.push(concatenatedTokenRead.token);\r\n                    flatIndex = concatenatedTokenRead.flatIndexEnd;\r\n                    break;\r\n                }\r\n                case \"StringLiteralStart\" /* StringLiteralStart */: {\r\n                    const concatenatedTokenRead = readStringLiteral(localizationTemplates, flattenedLines, flatToken);\r\n                    tokens.push(concatenatedTokenRead.token);\r\n                    flatIndex = concatenatedTokenRead.flatIndexEnd;\r\n                    break;\r\n                }\r\n                default:\r\n                    // UNSAFE MARKER\r\n                    //\r\n                    // Purpose of code block:\r\n                    //      Translate LineTokenKind to LineToken.\r\n                    //\r\n                    // Why are you trying to avoid a safer approach?\r\n                    //      A proper mapping would require a switch statement, one case per kind in LineNodeKind\r\n                    //\r\n                    // Why is it safe?\r\n                    //      Almost all of LineTokenKind and TokenKind have a 1-to-1 mapping.\r\n                    //      The edge cases (multiline tokens) have already been taken care of above.\r\n                    //      set(remaining variants of LineTokenKind) === set(LineKind)\r\n                    const positionStart = flatToken.positionStart;\r\n                    const positionEnd = flatToken.positionEnd;\r\n                    tokens.push({\r\n                        kind: flatToken.kind,\r\n                        data: flatToken.data,\r\n                        positionStart,\r\n                        positionEnd,\r\n                    });\r\n            }\r\n            flatIndex += 1;\r\n        }\r\n        return new LexerSnapshot(text, tokens, comments, flattenedLines.lineTerminators);\r\n    }\r\n}\r\nexports.LexerSnapshot = LexerSnapshot;\r\nfunction readLineComment(flatToken) {\r\n    const positionStart = flatToken.positionStart;\r\n    const positionEnd = flatToken.positionEnd;\r\n    return {\r\n        kind: \"Line\" /* Line */,\r\n        data: flatToken.data,\r\n        containsNewline: true,\r\n        positionStart,\r\n        positionEnd,\r\n    };\r\n}\r\n// a multiline comment that spans a single line\r\nfunction readSingleLineMultilineComment(flatToken) {\r\n    const positionStart = flatToken.positionStart;\r\n    const positionEnd = flatToken.positionEnd;\r\n    return {\r\n        kind: \"Multiline\" /* Multiline */,\r\n        data: flatToken.data,\r\n        containsNewline: positionStart.lineNumber !== positionEnd.lineNumber,\r\n        positionStart,\r\n        positionEnd,\r\n    };\r\n}\r\nfunction readMultilineComment(localizationTemplates, flattenedLines, tokenStart) {\r\n    const collection = collectWhileContent(flattenedLines.flatLineTokens, tokenStart, \"MultilineCommentContent\" /* MultilineCommentContent */);\r\n    const maybeTokenEnd = collection.maybeTokenEnd;\r\n    if (!maybeTokenEnd) {\r\n        throw new _1.LexError.UnterminatedMultilineTokenError(localizationTemplates, LexerSnapshot.graphemePositionStartFrom(flattenedLines.text, flattenedLines.lineTerminators, tokenStart), \"MultilineComment\" /* MultilineComment */);\r\n    }\r\n    else if (maybeTokenEnd.kind !== \"MultilineCommentEnd\" /* MultilineCommentEnd */) {\r\n        const details = { foundTokenEnd: maybeTokenEnd };\r\n        const message = \"once a multiline token starts it should either reach a paired end token, or eof\";\r\n        throw new common_1.CommonError.InvariantError(message, details);\r\n    }\r\n    else {\r\n        const tokenEnd = maybeTokenEnd;\r\n        const positionStart = tokenStart.positionStart;\r\n        const positionEnd = tokenEnd.positionEnd;\r\n        return {\r\n            comment: {\r\n                kind: \"Multiline\" /* Multiline */,\r\n                data: flattenedLines.text.substring(positionStart.codeUnit, positionEnd.codeUnit),\r\n                containsNewline: positionStart.lineNumber !== positionEnd.lineNumber,\r\n                positionStart,\r\n                positionEnd,\r\n            },\r\n            flatIndexEnd: tokenEnd.flatIndex,\r\n        };\r\n    }\r\n}\r\nfunction readQuotedIdentifier(localizationTemplates, flattenedLines, tokenStart) {\r\n    const collection = collectWhileContent(flattenedLines.flatLineTokens, tokenStart, \"QuotedIdentifierContent\" /* QuotedIdentifierContent */);\r\n    const maybeTokenEnd = collection.maybeTokenEnd;\r\n    if (!maybeTokenEnd) {\r\n        throw new _1.LexError.UnterminatedMultilineTokenError(localizationTemplates, LexerSnapshot.graphemePositionStartFrom(flattenedLines.text, flattenedLines.lineTerminators, tokenStart), \"QuotedIdentifier\" /* QuotedIdentifier */);\r\n    }\r\n    else if (maybeTokenEnd.kind !== \"QuotedIdentifierEnd\" /* QuotedIdentifierEnd */) {\r\n        const details = { foundTokenEnd: maybeTokenEnd };\r\n        const message = \"once a multiline token starts it should either reach a paired end token, or eof\";\r\n        throw new common_1.CommonError.InvariantError(message, details);\r\n    }\r\n    else {\r\n        const tokenEnd = maybeTokenEnd;\r\n        const positionStart = tokenStart.positionStart;\r\n        const positionEnd = tokenEnd.positionEnd;\r\n        return {\r\n            token: {\r\n                kind: \"Identifier\" /* Identifier */,\r\n                data: flattenedLines.text.substring(positionStart.codeUnit, positionEnd.codeUnit),\r\n                positionStart,\r\n                positionEnd,\r\n            },\r\n            flatIndexEnd: tokenEnd.flatIndex,\r\n        };\r\n    }\r\n}\r\nfunction readStringLiteral(localizationTemplates, flattenedLines, tokenStart) {\r\n    const collection = collectWhileContent(flattenedLines.flatLineTokens, tokenStart, \"StringContent\" /* StringLiteralContent */);\r\n    const maybeTokenEnd = collection.maybeTokenEnd;\r\n    if (!maybeTokenEnd) {\r\n        throw new _1.LexError.UnterminatedMultilineTokenError(localizationTemplates, LexerSnapshot.graphemePositionStartFrom(flattenedLines.text, flattenedLines.lineTerminators, tokenStart), \"String\" /* String */);\r\n    }\r\n    else if (maybeTokenEnd.kind !== \"StringLiteralEnd\" /* StringLiteralEnd */) {\r\n        const details = { foundTokenEnd: maybeTokenEnd };\r\n        const message = \"once a multiline token starts it should either reach a paired end token, or eof\";\r\n        throw new common_1.CommonError.InvariantError(message, details);\r\n    }\r\n    else {\r\n        const tokenEnd = maybeTokenEnd;\r\n        const positionStart = tokenStart.positionStart;\r\n        const positionEnd = tokenEnd.positionEnd;\r\n        return {\r\n            token: {\r\n                kind: \"StringLiteral\" /* StringLiteral */,\r\n                data: flattenedLines.text.substring(positionStart.codeUnit, positionEnd.codeUnit),\r\n                positionStart,\r\n                positionEnd,\r\n            },\r\n            flatIndexEnd: tokenEnd.flatIndex,\r\n        };\r\n    }\r\n}\r\nfunction collectWhileContent(flatTokens, tokenStart, contentKind) {\r\n    const collectedTokens = [];\r\n    const numTokens = flatTokens.length;\r\n    let flatIndex = tokenStart.flatIndex + 1;\r\n    while (flatIndex < numTokens) {\r\n        const token = flatTokens[flatIndex];\r\n        if (token.kind !== contentKind) {\r\n            break;\r\n        }\r\n        collectedTokens.push(token);\r\n        flatIndex += 1;\r\n    }\r\n    return {\r\n        tokenStart,\r\n        collectedTokens: collectedTokens,\r\n        maybeTokenEnd: flatTokens[flatIndex],\r\n    };\r\n}\r\nfunction flattenLineTokens(state) {\r\n    const lines = state.lines;\r\n    const lineTerminators = [];\r\n    const numLines = lines.length;\r\n    let text = \"\";\r\n    const flatLineTokens = [];\r\n    let lineTextOffset = 0;\r\n    let flatIndex = 0;\r\n    for (let lineNumber = 0; lineNumber < numLines; lineNumber += 1) {\r\n        const line = lines[lineNumber];\r\n        text += line.text;\r\n        if (lineNumber !== numLines - 1) {\r\n            text += line.lineTerminator;\r\n        }\r\n        for (const lineToken of line.tokens) {\r\n            const linePositionStart = lineToken.positionStart;\r\n            const linePositionEnd = lineToken.positionEnd;\r\n            flatLineTokens.push({\r\n                kind: lineToken.kind,\r\n                data: lineToken.data,\r\n                positionStart: {\r\n                    codeUnit: lineTextOffset + linePositionStart,\r\n                    lineCodeUnit: linePositionStart,\r\n                    lineNumber,\r\n                },\r\n                positionEnd: {\r\n                    codeUnit: lineTextOffset + linePositionEnd,\r\n                    lineCodeUnit: linePositionEnd,\r\n                    lineNumber,\r\n                },\r\n                flatIndex,\r\n            });\r\n            flatIndex += 1;\r\n        }\r\n        const lineTerminatorCodeUnit = lineTextOffset + line.text.length;\r\n        lineTerminators.push({\r\n            codeUnit: lineTerminatorCodeUnit,\r\n            text: line.lineTerminator,\r\n        });\r\n        lineTextOffset = lineTerminatorCodeUnit + line.lineTerminator.length;\r\n    }\r\n    return {\r\n        text,\r\n        lineTerminators,\r\n        flatLineTokens,\r\n    };\r\n}\r\n//# sourceMappingURL=lexerSnapshot.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=token.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar localization_1 = require(\"./localization\");\r\nexports.Localization = localization_1.Localization;\r\nvar templates_1 = require(\"./templates\");\r\nexports.DefaultTemplates = templates_1.DefaultTemplates;\r\nexports.TemplatesByLocale = templates_1.TemplatesByLocale;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../common\");\r\nfunction localizeTokenKind(localizationTemplates, tokenKind) {\r\n    switch (tokenKind) {\r\n        case \"Ampersand\" /* Ampersand */:\r\n            return localizationTemplates.tokenKind_ampersand;\r\n        case \"Asterisk\" /* Asterisk */:\r\n            return localizationTemplates.tokenKind_asterisk;\r\n        case \"AtSign\" /* AtSign */:\r\n            return localizationTemplates.tokenKind_atSign;\r\n        case \"Bang\" /* Bang */:\r\n            return localizationTemplates.tokenKind_bang;\r\n        case \"Comma\" /* Comma */:\r\n            return localizationTemplates.tokenKind_comma;\r\n        case \"Division\" /* Division */:\r\n            return localizationTemplates.tokenKind_division;\r\n        case \"DotDot\" /* DotDot */:\r\n            return localizationTemplates.tokenKind_dotDot;\r\n        case \"Ellipsis\" /* Ellipsis */:\r\n            return localizationTemplates.tokenKind_ellipsis;\r\n        case \"Equal\" /* Equal */:\r\n            return localizationTemplates.tokenKind_equal;\r\n        case \"FatArrow\" /* FatArrow */:\r\n            return localizationTemplates.tokenKind_fatArrow;\r\n        case \"GreaterThan\" /* GreaterThan */:\r\n            return localizationTemplates.tokenKind_greaterThan;\r\n        case \"GreaterThanEqualTo\" /* GreaterThanEqualTo */:\r\n            return localizationTemplates.tokenKind_greaterThanEqualTo;\r\n        case \"HexLiteral\" /* HexLiteral */:\r\n            return localizationTemplates.tokenKind_hexLiteral;\r\n        case \"Identifier\" /* Identifier */:\r\n            return localizationTemplates.tokenKind_identifier;\r\n        case \"KeywordAnd\" /* KeywordAnd */:\r\n            return localizationTemplates.tokenKind_keywordAnd;\r\n        case \"KeywordAs\" /* KeywordAs */:\r\n            return localizationTemplates.tokenKind_keywordAs;\r\n        case \"KeywordEach\" /* KeywordEach */:\r\n            return localizationTemplates.tokenKind_keywordEach;\r\n        case \"KeywordElse\" /* KeywordElse */:\r\n            return localizationTemplates.tokenKind_keywordElse;\r\n        case \"KeywordError\" /* KeywordError */:\r\n            return localizationTemplates.tokenKind_keywordError;\r\n        case \"KeywordFalse\" /* KeywordFalse */:\r\n            return localizationTemplates.tokenKind_keywordFalse;\r\n        case \"KeywordHashBinary\" /* KeywordHashBinary */:\r\n            return localizationTemplates.tokenKind_keywordHashBinary;\r\n        case \"KeywordHashDate\" /* KeywordHashDate */:\r\n            return localizationTemplates.tokenKind_keywordHashDate;\r\n        case \"KeywordHashDateTime\" /* KeywordHashDateTime */:\r\n            return localizationTemplates.tokenKind_keywordHashDateTime;\r\n        case \"KeywordHashDateTimeZone\" /* KeywordHashDateTimeZone */:\r\n            return localizationTemplates.tokenKind_keywordHashDateTimeZone;\r\n        case \"KeywordHashDuration\" /* KeywordHashDuration */:\r\n            return localizationTemplates.tokenKind_keywordHashDuration;\r\n        case \"KeywordHashInfinity\" /* KeywordHashInfinity */:\r\n            return localizationTemplates.tokenKind_keywordHashInfinity;\r\n        case \"KeywordHashNan\" /* KeywordHashNan */:\r\n            return localizationTemplates.tokenKind_keywordHashNan;\r\n        case \"KeywordHashSections\" /* KeywordHashSections */:\r\n            return localizationTemplates.tokenKind_keywordHashSections;\r\n        case \"KeywordHashShared\" /* KeywordHashShared */:\r\n            return localizationTemplates.tokenKind_keywordShared;\r\n        case \"KeywordHashTable\" /* KeywordHashTable */:\r\n            return localizationTemplates.tokenKind_keywordHashTable;\r\n        case \"KeywordHashTime\" /* KeywordHashTime */:\r\n            return localizationTemplates.tokenKind_keywordHashTime;\r\n        case \"KeywordIf\" /* KeywordIf */:\r\n            return localizationTemplates.tokenKind_keywordIf;\r\n        case \"KeywordIn\" /* KeywordIn */:\r\n            return localizationTemplates.tokenKind_keywordIn;\r\n        case \"KeywordIs\" /* KeywordIs */:\r\n            return localizationTemplates.tokenKind_keywordIs;\r\n        case \"KeywordLet\" /* KeywordLet */:\r\n            return localizationTemplates.tokenKind_keywordLet;\r\n        case \"KeywordMeta\" /* KeywordMeta */:\r\n            return localizationTemplates.tokenKind_keywordMeta;\r\n        case \"KeywordNot\" /* KeywordNot */:\r\n            return localizationTemplates.tokenKind_notEqual;\r\n        case \"KeywordOr\" /* KeywordOr */:\r\n            return localizationTemplates.tokenKind_keywordOr;\r\n        case \"KeywordOtherwise\" /* KeywordOtherwise */:\r\n            return localizationTemplates.tokenKind_keywordOtherwise;\r\n        case \"KeywordSection\" /* KeywordSection */:\r\n            return localizationTemplates.tokenKind_keywordSection;\r\n        case \"KeywordShared\" /* KeywordShared */:\r\n            return localizationTemplates.tokenKind_keywordShared;\r\n        case \"KeywordThen\" /* KeywordThen */:\r\n            return localizationTemplates.tokenKind_keywordThen;\r\n        case \"KeywordTrue\" /* KeywordTrue */:\r\n            return localizationTemplates.tokenKind_keywordTrue;\r\n        case \"KeywordTry\" /* KeywordTry */:\r\n            return localizationTemplates.tokenKind_keywordTry;\r\n        case \"KeywordType\" /* KeywordType */:\r\n            return localizationTemplates.tokenKind_keywordType;\r\n        case \"LeftBrace\" /* LeftBrace */:\r\n            return localizationTemplates.tokenKind_leftBrace;\r\n        case \"LeftBracket\" /* LeftBracket */:\r\n            return localizationTemplates.tokenKind_leftBracket;\r\n        case \"LeftParenthesis\" /* LeftParenthesis */:\r\n            return localizationTemplates.tokenKind_leftParenthesis;\r\n        case \"LessThan\" /* LessThan */:\r\n            return localizationTemplates.tokenKind_lessThan;\r\n        case \"LessThanEqualTo\" /* LessThanEqualTo */:\r\n            return localizationTemplates.tokenKind_lessThanEqualTo;\r\n        case \"Minus\" /* Minus */:\r\n            return localizationTemplates.tokenKind_minus;\r\n        case \"NotEqual\" /* NotEqual */:\r\n            return localizationTemplates.tokenKind_notEqual;\r\n        case \"NullLiteral\" /* NullLiteral */:\r\n            return localizationTemplates.tokenKind_nullLiteral;\r\n        case \"NumericLiteral\" /* NumericLiteral */:\r\n            return localizationTemplates.tokenKind_numericLiteral;\r\n        case \"Plus\" /* Plus */:\r\n            return localizationTemplates.tokenKind_plus;\r\n        case \"QuestionMark\" /* QuestionMark */:\r\n            return localizationTemplates.tokenKind_questionMark;\r\n        case \"RightBrace\" /* RightBrace */:\r\n            return localizationTemplates.tokenKind_rightBrace;\r\n        case \"RightBracket\" /* RightBracket */:\r\n            return localizationTemplates.tokenKind_rightBracket;\r\n        case \"RightParenthesis\" /* RightParenthesis */:\r\n            return localizationTemplates.tokenKind_rightParenthesis;\r\n        case \"Semicolon\" /* Semicolon */:\r\n            return localizationTemplates.tokenKind_semicolon;\r\n        case \"StringLiteral\" /* StringLiteral */:\r\n            return localizationTemplates.tokenKind_stringLiteral;\r\n        default:\r\n            throw common_1.isNever(tokenKind);\r\n    }\r\n}\r\nexports.localizeTokenKind = localizeTokenKind;\r\nexports.Localization = {\r\n    error_common_invariantError: (templates, invariantBroken, maybeJsonifyableDetails) => {\r\n        if (maybeJsonifyableDetails !== undefined) {\r\n            return common_1.StringUtils.expectFormat(templates.error_common_invariantError_1_details, new Map([\r\n                [\"invariantBroken\", invariantBroken],\r\n                [\"details\", JSON.stringify(maybeJsonifyableDetails, undefined, 4)],\r\n            ]));\r\n        }\r\n        else {\r\n            return common_1.StringUtils.expectFormat(templates.error_common_invariantError_2_noDetails, new Map([[\"invariantBroken\", invariantBroken]]));\r\n        }\r\n    },\r\n    error_common_unknown: (templates, message) => {\r\n        return common_1.StringUtils.expectFormat(templates.error_common_unknown, message);\r\n    },\r\n    error_lex_badLineNumber: (templates, kind) => {\r\n        switch (kind) {\r\n            case \"GreaterThanNumLines\" /* GreaterThanNumLines */:\r\n                return templates.error_lex_badLineNumber_1_greaterThanNumLines;\r\n            case \"LessThanZero\" /* LessThanZero */:\r\n                return templates.error_lex_badLineNumber_2_lessThanZero;\r\n            default:\r\n                throw common_1.isNever(kind);\r\n        }\r\n    },\r\n    error_lex_badRange: (templates, kind) => {\r\n        switch (kind) {\r\n            case \"SameLine_LineCodeUnitStart_Higher\" /* SameLine_LineCodeUnitStart_Higher */:\r\n                return templates.error_lex_badRange_7_sameLine_codeUnitStartGreaterThanCodeUnitEnd;\r\n            case \"LineNumberStart_GreaterThan_LineNumberEnd\" /* LineNumberStart_GreaterThan_LineNumberEnd */:\r\n                return templates.error_lex_badRange_4_lineNumberStart_greaterThanLineNumberEnd;\r\n            case \"LineNumberStart_LessThan_Zero\" /* LineNumberStart_LessThan_Zero */:\r\n                return templates.error_lex_badRange_6_lineNumberStart_lessThanZero;\r\n            case \"LineNumberStart_GreaterThan_NumLines\" /* LineNumberStart_GreaterThan_NumLines */:\r\n                return templates.error_lex_badRange_5_lineNumberStart_greaterThanNumLines;\r\n            case \"LineNumberEnd_GreaterThan_NumLines\" /* LineNumberEnd_GreaterThan_NumLines */:\r\n                return templates.error_lex_badRange_2_lineNumberEnd_greaterThanLineNumbers;\r\n            case \"LineCodeUnitStart_GreaterThan_LineLength\" /* LineCodeUnitStart_GreaterThan_LineLength */:\r\n                return templates.error_lex_badRange_3_lineNumberStart_greaterThanLineLength;\r\n            case \"LineCodeUnitEnd_GreaterThan_LineLength\" /* LineCodeUnitEnd_GreaterThan_LineLength */:\r\n                return templates.error_lex_badRange_1_lineNumberEnd_greaterThanLineLength;\r\n            default:\r\n                throw common_1.isNever(kind);\r\n        }\r\n    },\r\n    error_lex_badState: (templates) => templates.error_lex_badState,\r\n    error_lex_endOfStream: (templates) => templates.error_lex_endOfStream,\r\n    error_lex_endOfStreamPartwayRead: (templates) => templates.error_lex_endOfStreamPartwayRead,\r\n    error_lex_expectedKind: (templates, kind) => {\r\n        switch (kind) {\r\n            case \"HexLiteral\" /* HexLiteral */:\r\n                return templates.error_lex_expectedKind_1_hex;\r\n            case \"KeywordOrIdentifier\" /* KeywordOrIdentifier */:\r\n                return templates.error_lex_expectedKind_2_keywordOrIdentifier;\r\n            case \"Numeric\" /* Numeric */:\r\n                return templates.error_lex_expectedKind_3_numeric;\r\n            default:\r\n                throw common_1.isNever(kind);\r\n        }\r\n    },\r\n    error_lex_lineMap: (templates, errorLineMap) => {\r\n        const lineNumbers = [...errorLineMap.keys()]\r\n            .map((lineNumber) => lineNumber.toString())\r\n            .join(\",\");\r\n        return common_1.StringUtils.expectFormat(templates.error_lex_lineMap, new Map([[\"lineNumbers\", lineNumbers]]));\r\n    },\r\n    error_lex_unexpectedRead: (templates) => templates.error_lex_unexpectedRead,\r\n    error_lex_unterminatedMultilineToken: (templates, kind) => {\r\n        switch (kind) {\r\n            case \"MultilineComment\" /* MultilineComment */:\r\n                return templates.error_lex_unterminatedMultilineToken_1_comment;\r\n            case \"QuotedIdentifier\" /* QuotedIdentifier */:\r\n                return templates.error_lex_unterminatedMultilineToken_2_quotedIdentifier;\r\n            case \"String\" /* String */:\r\n                return templates.error_lex_unterminatedMultilineToken_3_string;\r\n            default:\r\n                throw common_1.isNever(kind);\r\n        }\r\n    },\r\n    error_parse_csvContinuation: (templates, kind) => {\r\n        switch (kind) {\r\n            case \"DanglingComma\" /* DanglingComma */:\r\n                return templates.error_parse_csvContinuation_1_danglingComma;\r\n            case \"LetExpression\" /* LetExpression */:\r\n                return templates.error_parse_csvContinuation_2_letExpression;\r\n            default:\r\n                throw common_1.isNever(kind);\r\n        }\r\n    },\r\n    error_parse_expectAnyTokenKind: (templates, expectedAnyTokenKinds, maybeFoundToken) => {\r\n        const localizedExpectedAnyTokenKinds = expectedAnyTokenKinds\r\n            .map((tokenKind) => localizeTokenKind(templates, tokenKind))\r\n            .join(\", \");\r\n        if (maybeFoundToken !== undefined) {\r\n            return common_1.StringUtils.expectFormat(templates.error_parse_expectAnyTokenKind_1_other, new Map([\r\n                [\"foundTokenKind\", localizeTokenKind(templates, maybeFoundToken.token.kind)],\r\n                [\"expectedAnyTokenKinds\", localizedExpectedAnyTokenKinds],\r\n            ]));\r\n        }\r\n        else {\r\n            return common_1.StringUtils.expectFormat(templates.error_parse_expectAnyTokenKind_2_endOfStream, new Map([[\"expectedAnyTokenKinds\", localizedExpectedAnyTokenKinds]]));\r\n        }\r\n    },\r\n    error_parse_expectGeneralizedIdentifier: (templates, maybeFoundToken) => {\r\n        if (maybeFoundToken !== undefined) {\r\n            return templates.error_parse_expectGeneralizedIdentifier_1_other;\r\n        }\r\n        else {\r\n            return templates.error_parse_expectGeneralizedIdentifier_2_endOfStream;\r\n        }\r\n    },\r\n    error_parse_expectTokenKind: (templates, expectedTokenKind, maybeFoundToken) => {\r\n        const localizedExpectedTokenKind = localizeTokenKind(templates, expectedTokenKind);\r\n        if (maybeFoundToken !== undefined) {\r\n            return common_1.StringUtils.expectFormat(templates.error_parse_expectTokenKind_1_other, new Map([\r\n                [\"expectedTokenKind\", localizedExpectedTokenKind],\r\n                [\"foundTokenKind\", localizeTokenKind(templates, maybeFoundToken.token.kind)],\r\n            ]));\r\n        }\r\n        else {\r\n            return common_1.StringUtils.expectFormat(templates.error_parse_expectTokenKind_2_endOfStream, new Map([[\"expectedTokenKind\", localizedExpectedTokenKind]]));\r\n        }\r\n    },\r\n    error_parse_invalidPrimitiveType: (templates, token) => {\r\n        return common_1.StringUtils.expectFormat(templates.error_parse_invalidPrimitiveType, new Map([[\"foundTokenKind\", localizeTokenKind(templates, token.kind)]]));\r\n    },\r\n    error_parse_requiredParameterAfterOptional: (templates) => templates.error_parse_requiredParameterAfterOptional,\r\n    error_parse_unterminated_bracket: (templates) => templates.error_parse_unterminated_bracket,\r\n    error_parse_unterminated_parenthesis: (templates) => templates.error_parse_unterminated_parenthesis,\r\n    error_parse_unusedTokens: (templates) => templates.error_parse_unusedTokens,\r\n};\r\n//# sourceMappingURL=localization.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst enUs = require(\"./templates/en-US.json\");\r\nexports.TemplatesByLocale = new Map([[\"en-us\", enUs]]);\r\nexports.DefaultTemplates = enUs;\r\n//# sourceMappingURL=templates.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=IParser.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst __1 = require(\"..\");\r\nconst common_1 = require(\"../../common\");\r\nconst nodeIdMap_1 = require(\"../nodeIdMap\");\r\n// ---------------------------\r\n// ---------- State ----------\r\n// ---------------------------\r\n// If you have a custom parser + parser state, then you'll have to create your own newState function.\r\n// See `benchmark.ts` for an example.\r\nfunction newState(settings, lexerSnapshot) {\r\n    const maybeCurrentToken = lexerSnapshot.tokens[0];\r\n    return {\r\n        localizationTemplates: settings.localizationTemplates,\r\n        lexerSnapshot,\r\n        tokenIndex: 0,\r\n        maybeCurrentToken,\r\n        maybeCurrentTokenKind: maybeCurrentToken !== undefined ? maybeCurrentToken.kind : undefined,\r\n        contextState: __1.ParseContextUtils.newState(),\r\n        maybeCurrentContextNode: undefined,\r\n    };\r\n}\r\nexports.newState = newState;\r\nfunction applyState(originalState, otherState) {\r\n    originalState.tokenIndex = otherState.tokenIndex;\r\n    originalState.maybeCurrentToken = otherState.maybeCurrentToken;\r\n    originalState.maybeCurrentTokenKind = otherState.maybeCurrentTokenKind;\r\n    originalState.contextState = otherState.contextState;\r\n    originalState.maybeCurrentContextNode = otherState.maybeCurrentContextNode;\r\n}\r\nexports.applyState = applyState;\r\n// Due to performance reasons the backup no longer can include a naive deep copy of the context state.\r\n// Instead it's assumed that a backup is made immediately before a try/catch read block.\r\n// This means the state begins in a parsing context and the backup will either be immediately consumed or dropped.\r\n// Therefore we only care about the delta between before and after the try/catch block.\r\n// Thanks to the invariants above and the fact the ids for nodes are an auto-incrementing integer\r\n// we can easily just drop all delete all context nodes past the id of when the backup was created.\r\nfunction fastStateBackup(state) {\r\n    return {\r\n        tokenIndex: state.tokenIndex,\r\n        contextStateIdCounter: state.contextState.idCounter,\r\n        maybeContextNodeId: state.maybeCurrentContextNode !== undefined ? state.maybeCurrentContextNode.id : undefined,\r\n    };\r\n}\r\nexports.fastStateBackup = fastStateBackup;\r\n// See state.fastSnapshot for more information.\r\nfunction applyFastStateBackup(state, backup) {\r\n    state.tokenIndex = backup.tokenIndex;\r\n    state.maybeCurrentToken = state.lexerSnapshot.tokens[state.tokenIndex];\r\n    state.maybeCurrentTokenKind = state.maybeCurrentToken !== undefined ? state.maybeCurrentToken.kind : undefined;\r\n    const contextState = state.contextState;\r\n    const nodeIdMapCollection = state.contextState.nodeIdMapCollection;\r\n    const backupIdCounter = backup.contextStateIdCounter;\r\n    contextState.idCounter = backupIdCounter;\r\n    const newContextNodeIds = [];\r\n    const newAstNodeIds = [];\r\n    for (const nodeId of nodeIdMapCollection.astNodeById.keys()) {\r\n        if (nodeId > backupIdCounter) {\r\n            newAstNodeIds.push(nodeId);\r\n        }\r\n    }\r\n    for (const nodeId of nodeIdMapCollection.contextNodeById.keys()) {\r\n        if (nodeId > backupIdCounter) {\r\n            newContextNodeIds.push(nodeId);\r\n        }\r\n    }\r\n    for (const nodeId of newAstNodeIds.sort().reverse()) {\r\n        const maybeParent = nodeIdMapCollection.parentIdById.get(nodeId);\r\n        const parentWillBeDeleted = maybeParent !== undefined && maybeParent >= backupIdCounter;\r\n        __1.ParseContextUtils.deleteAst(state.contextState, nodeId, parentWillBeDeleted);\r\n    }\r\n    for (const nodeId of newContextNodeIds.sort().reverse()) {\r\n        __1.ParseContextUtils.deleteContext(state.contextState, nodeId);\r\n    }\r\n    if (backup.maybeContextNodeId) {\r\n        state.maybeCurrentContextNode = nodeIdMap_1.NodeIdMapUtils.expectContextNode(state.contextState.nodeIdMapCollection.contextNodeById, backup.maybeContextNodeId);\r\n    }\r\n    else {\r\n        state.maybeCurrentContextNode = undefined;\r\n    }\r\n}\r\nexports.applyFastStateBackup = applyFastStateBackup;\r\nfunction startContext(state, nodeKind) {\r\n    const newContextNode = __1.ParseContextUtils.startContext(state.contextState, nodeKind, state.tokenIndex, state.maybeCurrentToken, state.maybeCurrentContextNode);\r\n    state.maybeCurrentContextNode = newContextNode;\r\n}\r\nexports.startContext = startContext;\r\nfunction endContext(state, astNode) {\r\n    if (state.maybeCurrentContextNode === undefined) {\r\n        throw new common_1.CommonError.InvariantError(\"maybeContextNode should be truthy, can't end a context if it doesn't exist.\");\r\n    }\r\n    const maybeParentOfContextNode = __1.ParseContextUtils.endContext(state.contextState, state.maybeCurrentContextNode, astNode);\r\n    state.maybeCurrentContextNode = maybeParentOfContextNode;\r\n}\r\nexports.endContext = endContext;\r\nfunction deleteContext(state, maybeNodeId) {\r\n    let nodeId;\r\n    if (maybeNodeId === undefined) {\r\n        if (state.maybeCurrentContextNode === undefined) {\r\n            throw new common_1.CommonError.InvariantError(\"maybeContextNode should be truthy, can't delete a context if it doesn't exist.\");\r\n        }\r\n        else {\r\n            const currentContextNode = state.maybeCurrentContextNode;\r\n            nodeId = currentContextNode.id;\r\n        }\r\n    }\r\n    else {\r\n        nodeId = maybeNodeId;\r\n    }\r\n    state.maybeCurrentContextNode = __1.ParseContextUtils.deleteContext(state.contextState, nodeId);\r\n}\r\nexports.deleteContext = deleteContext;\r\nfunction incrementAttributeCounter(state) {\r\n    if (state.maybeCurrentContextNode === undefined) {\r\n        throw new common_1.CommonError.InvariantError(`maybeCurrentContextNode should be truthy`);\r\n    }\r\n    const currentContextNode = state.maybeCurrentContextNode;\r\n    currentContextNode.attributeCounter += 1;\r\n}\r\nexports.incrementAttributeCounter = incrementAttributeCounter;\r\n// -------------------------\r\n// ---------- IsX ----------\r\n// -------------------------\r\nfunction isTokenKind(state, tokenKind, tokenIndex) {\r\n    const maybeToken = state.lexerSnapshot.tokens[tokenIndex];\r\n    if (maybeToken) {\r\n        return maybeToken.kind === tokenKind;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexports.isTokenKind = isTokenKind;\r\nfunction isNextTokenKind(state, tokenKind) {\r\n    return isTokenKind(state, tokenKind, state.tokenIndex + 1);\r\n}\r\nexports.isNextTokenKind = isNextTokenKind;\r\nfunction isOnTokenKind(state, tokenKind, tokenIndex = state.tokenIndex) {\r\n    return isTokenKind(state, tokenKind, tokenIndex);\r\n}\r\nexports.isOnTokenKind = isOnTokenKind;\r\nfunction isOnConstantKind(state, constantKind) {\r\n    if (isOnTokenKind(state, \"Identifier\" /* Identifier */)) {\r\n        const currentToken = state.lexerSnapshot.tokens[state.tokenIndex];\r\n        if (currentToken === undefined || currentToken.data === undefined) {\r\n            const details = { currentToken };\r\n            throw new common_1.CommonError.InvariantError(`expected data on Token`, details);\r\n        }\r\n        const data = currentToken.data;\r\n        return data === constantKind;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexports.isOnConstantKind = isOnConstantKind;\r\nfunction isOnGeneralizedIdentifierStart(state, tokenIndex = state.tokenIndex) {\r\n    const maybeToken = state.lexerSnapshot.tokens[tokenIndex];\r\n    if (maybeToken === undefined) {\r\n        return false;\r\n    }\r\n    const tokenKind = maybeToken.kind;\r\n    switch (tokenKind) {\r\n        case \"Identifier\" /* Identifier */:\r\n        case \"KeywordAnd\" /* KeywordAnd */:\r\n        case \"KeywordAs\" /* KeywordAs */:\r\n        case \"KeywordEach\" /* KeywordEach */:\r\n        case \"KeywordElse\" /* KeywordElse */:\r\n        case \"KeywordError\" /* KeywordError */:\r\n        case \"KeywordFalse\" /* KeywordFalse */:\r\n        case \"KeywordHashBinary\" /* KeywordHashBinary */:\r\n        case \"KeywordHashDate\" /* KeywordHashDate */:\r\n        case \"KeywordHashDateTime\" /* KeywordHashDateTime */:\r\n        case \"KeywordHashDateTimeZone\" /* KeywordHashDateTimeZone */:\r\n        case \"KeywordHashDuration\" /* KeywordHashDuration */:\r\n        case \"KeywordHashInfinity\" /* KeywordHashInfinity */:\r\n        case \"KeywordHashNan\" /* KeywordHashNan */:\r\n        case \"KeywordHashSections\" /* KeywordHashSections */:\r\n        case \"KeywordHashShared\" /* KeywordHashShared */:\r\n        case \"KeywordHashTable\" /* KeywordHashTable */:\r\n        case \"KeywordHashTime\" /* KeywordHashTime */:\r\n        case \"KeywordIf\" /* KeywordIf */:\r\n        case \"KeywordIn\" /* KeywordIn */:\r\n        case \"KeywordIs\" /* KeywordIs */:\r\n        case \"KeywordLet\" /* KeywordLet */:\r\n        case \"KeywordMeta\" /* KeywordMeta */:\r\n        case \"KeywordNot\" /* KeywordNot */:\r\n        case \"KeywordOr\" /* KeywordOr */:\r\n        case \"KeywordOtherwise\" /* KeywordOtherwise */:\r\n        case \"KeywordSection\" /* KeywordSection */:\r\n        case \"KeywordShared\" /* KeywordShared */:\r\n        case \"KeywordThen\" /* KeywordThen */:\r\n        case \"KeywordTrue\" /* KeywordTrue */:\r\n        case \"KeywordTry\" /* KeywordTry */:\r\n        case \"KeywordType\" /* KeywordType */:\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nexports.isOnGeneralizedIdentifierStart = isOnGeneralizedIdentifierStart;\r\n// Assumes a call to readPrimaryExpression has already happened.\r\nfunction isRecursivePrimaryExpressionNext(state, tokenIndexStart = state.tokenIndex) {\r\n    return (\r\n    // section-access-expression\r\n    // this.isOnTokenKind(TokenKind.Bang)\r\n    // field-access-expression\r\n    isTokenKind(state, \"LeftBrace\" /* LeftBrace */, tokenIndexStart) ||\r\n        // item-access-expression\r\n        isTokenKind(state, \"LeftBracket\" /* LeftBracket */, tokenIndexStart) ||\r\n        // invoke-expression\r\n        isTokenKind(state, \"LeftParenthesis\" /* LeftParenthesis */, tokenIndexStart));\r\n}\r\nexports.isRecursivePrimaryExpressionNext = isRecursivePrimaryExpressionNext;\r\n// -----------------------------\r\n// ---------- Expects ----------\r\n// -----------------------------\r\nfunction expectContextNodeMetadata(state) {\r\n    if (state.maybeCurrentContextNode === undefined) {\r\n        throw new common_1.CommonError.InvariantError(\"maybeCurrentContextNode should be truthy\");\r\n    }\r\n    const currentContextNode = state.maybeCurrentContextNode;\r\n    const maybeTokenStart = currentContextNode.maybeTokenStart;\r\n    if (maybeTokenStart === undefined) {\r\n        throw new common_1.CommonError.InvariantError(`maybeTokenStart should be truthy`);\r\n    }\r\n    const tokenStart = maybeTokenStart;\r\n    // inclusive token index\r\n    const tokenIndexEnd = state.tokenIndex - 1;\r\n    const maybeTokenEnd = state.lexerSnapshot.tokens[tokenIndexEnd];\r\n    if (maybeTokenEnd === undefined) {\r\n        throw new common_1.CommonError.InvariantError(`maybeTokenEnd should be truthy`);\r\n    }\r\n    const tokenEnd = maybeTokenEnd;\r\n    const tokenRange = {\r\n        tokenIndexStart: currentContextNode.tokenIndexStart,\r\n        tokenIndexEnd,\r\n        positionStart: tokenStart.positionStart,\r\n        positionEnd: tokenEnd.positionEnd,\r\n    };\r\n    const contextNode = state.maybeCurrentContextNode;\r\n    return {\r\n        id: contextNode.id,\r\n        maybeAttributeIndex: currentContextNode.maybeAttributeIndex,\r\n        tokenRange,\r\n    };\r\n}\r\nexports.expectContextNodeMetadata = expectContextNodeMetadata;\r\nfunction expectTokenAt(state, tokenIndex) {\r\n    const lexerSnapshot = state.lexerSnapshot;\r\n    const maybeToken = lexerSnapshot.tokens[tokenIndex];\r\n    if (maybeToken) {\r\n        return maybeToken;\r\n    }\r\n    else {\r\n        throw new common_1.CommonError.InvariantError(`this.tokens[${tokenIndex}] is falsey`);\r\n    }\r\n}\r\nexports.expectTokenAt = expectTokenAt;\r\n// -------------------------------\r\n// ---------- Csv Tests ----------\r\n// -------------------------------\r\n// All of these tests assume you're in a given context and have just read a `,`.\r\n// Eg. testCsvEndLetExpression assumes you're in a LetExpression context and have just read a `,`.\r\nfunction testCsvContinuationLetExpression(state) {\r\n    if (state.maybeCurrentTokenKind === \"KeywordIn\" /* KeywordIn */) {\r\n        return new __1.ParseError.ExpectedCsvContinuationError(state.localizationTemplates, \"LetExpression\" /* LetExpression */, maybeCurrentTokenWithColumnNumber(state));\r\n    }\r\n    return undefined;\r\n}\r\nexports.testCsvContinuationLetExpression = testCsvContinuationLetExpression;\r\nfunction testCsvContinuationDanglingComma(state, tokenKind) {\r\n    if (state.maybeCurrentTokenKind === tokenKind) {\r\n        return new __1.ParseError.ExpectedCsvContinuationError(state.localizationTemplates, \"DanglingComma\" /* DanglingComma */, maybeCurrentTokenWithColumnNumber(state));\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nexports.testCsvContinuationDanglingComma = testCsvContinuationDanglingComma;\r\n// ---------------------------\r\n// ---------- Tests ----------\r\n// ---------------------------\r\nfunction testIsOnTokenKind(state, expectedTokenKind) {\r\n    if (expectedTokenKind !== state.maybeCurrentTokenKind) {\r\n        const maybeToken = maybeCurrentTokenWithColumnNumber(state);\r\n        return new __1.ParseError.ExpectedTokenKindError(state.localizationTemplates, expectedTokenKind, maybeToken);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nexports.testIsOnTokenKind = testIsOnTokenKind;\r\nfunction testIsOnAnyTokenKind(state, expectedAnyTokenKinds) {\r\n    const isError = state.maybeCurrentTokenKind === undefined || expectedAnyTokenKinds.indexOf(state.maybeCurrentTokenKind) === -1;\r\n    if (isError) {\r\n        const maybeToken = maybeCurrentTokenWithColumnNumber(state);\r\n        return new __1.ParseError.ExpectedAnyTokenKindError(state.localizationTemplates, expectedAnyTokenKinds, maybeToken);\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nexports.testIsOnAnyTokenKind = testIsOnAnyTokenKind;\r\nfunction testNoMoreTokens(state) {\r\n    if (state.tokenIndex !== state.lexerSnapshot.tokens.length) {\r\n        const token = expectTokenAt(state, state.tokenIndex);\r\n        return new __1.ParseError.UnusedTokensRemainError(state.localizationTemplates, token, state.lexerSnapshot.graphemePositionStartFrom(token));\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nexports.testNoMoreTokens = testNoMoreTokens;\r\n// -------------------------------------\r\n// ---------- Error factories ----------\r\n// -------------------------------------\r\nfunction unterminatedParenthesesError(state) {\r\n    const token = expectTokenAt(state, state.tokenIndex);\r\n    return new __1.ParseError.UnterminatedParenthesesError(state.localizationTemplates, token, state.lexerSnapshot.graphemePositionStartFrom(token));\r\n}\r\nexports.unterminatedParenthesesError = unterminatedParenthesesError;\r\nfunction unterminatedBracketError(state) {\r\n    const token = expectTokenAt(state, state.tokenIndex);\r\n    return new __1.ParseError.UnterminatedBracketError(state.localizationTemplates, token, state.lexerSnapshot.graphemePositionStartFrom(token));\r\n}\r\nexports.unterminatedBracketError = unterminatedBracketError;\r\n// ---------------------------------------------\r\n// ---------- Column number factories ----------\r\n// ---------------------------------------------\r\nfunction maybeCurrentTokenWithColumnNumber(state) {\r\n    return maybeTokenWithColumnNumber(state, state.tokenIndex);\r\n}\r\nexports.maybeCurrentTokenWithColumnNumber = maybeCurrentTokenWithColumnNumber;\r\nfunction maybeTokenWithColumnNumber(state, tokenIndex) {\r\n    const maybeToken = state.lexerSnapshot.tokens[tokenIndex];\r\n    if (maybeToken === undefined) {\r\n        return undefined;\r\n    }\r\n    const currentToken = maybeToken;\r\n    return {\r\n        token: currentToken,\r\n        columnNumber: state.lexerSnapshot.columnNumberStartFrom(currentToken),\r\n    };\r\n}\r\nexports.maybeTokenWithColumnNumber = maybeTokenWithColumnNumber;\r\n//# sourceMappingURL=IParserStateUtils.js.map","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst IParserStateUtils = require(\"./IParserStateUtils\");\r\nexports.IParserStateUtils = IParserStateUtils;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=ast.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../../common\");\r\nfunction maybeUnaryOperatorKindFrom(maybeTokenKind) {\r\n    switch (maybeTokenKind) {\r\n        case \"Plus\" /* Plus */:\r\n            return \"+\" /* Positive */;\r\n        case \"Minus\" /* Minus */:\r\n            return \"-\" /* Negative */;\r\n        case \"KeywordNot\" /* KeywordNot */:\r\n            return \"not\" /* Not */;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexports.maybeUnaryOperatorKindFrom = maybeUnaryOperatorKindFrom;\r\nfunction maybeArithmeticOperatorKindFrom(maybeTokenKind) {\r\n    switch (maybeTokenKind) {\r\n        case \"Asterisk\" /* Asterisk */:\r\n            return \"*\" /* Multiplication */;\r\n        case \"Division\" /* Division */:\r\n            return \"/\" /* Division */;\r\n        case \"Plus\" /* Plus */:\r\n            return \"+\" /* Addition */;\r\n        case \"Minus\" /* Minus */:\r\n            return \"-\" /* Subtraction */;\r\n        case \"Ampersand\" /* Ampersand */:\r\n            return \"&\" /* And */;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexports.maybeArithmeticOperatorKindFrom = maybeArithmeticOperatorKindFrom;\r\nfunction maybeEqualityOperatorKindFrom(maybeTokenKind) {\r\n    switch (maybeTokenKind) {\r\n        case \"Equal\" /* Equal */:\r\n            return \"=\" /* EqualTo */;\r\n        case \"NotEqual\" /* NotEqual */:\r\n            return \"<>\" /* NotEqualTo */;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexports.maybeEqualityOperatorKindFrom = maybeEqualityOperatorKindFrom;\r\nfunction maybeLogicalOperatorKindFrom(maybeTokenKind) {\r\n    switch (maybeTokenKind) {\r\n        case \"KeywordAnd\" /* KeywordAnd */:\r\n            return \"and\" /* And */;\r\n        case \"KeywordOr\" /* KeywordOr */:\r\n            return \"or\" /* Or */;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexports.maybeLogicalOperatorKindFrom = maybeLogicalOperatorKindFrom;\r\nfunction maybeRelationalOperatorKindFrom(maybeTokenKind) {\r\n    switch (maybeTokenKind) {\r\n        case \"LessThan\" /* LessThan */:\r\n            return \"<\" /* LessThan */;\r\n        case \"LessThanEqualTo\" /* LessThanEqualTo */:\r\n            return \"<=\" /* LessThanEqualTo */;\r\n        case \"GreaterThan\" /* GreaterThan */:\r\n            return \">\" /* GreaterThan */;\r\n        case \"GreaterThanEqualTo\" /* GreaterThanEqualTo */:\r\n            return \">=\" /* GreaterThanEqualTo */;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexports.maybeRelationalOperatorKindFrom = maybeRelationalOperatorKindFrom;\r\nfunction maybeBinOpExpressionOperatorKindFrom(maybeTokenKind) {\r\n    switch (maybeTokenKind) {\r\n        // ArithmeticOperator\r\n        case \"Asterisk\" /* Asterisk */:\r\n            return \"*\" /* Multiplication */;\r\n        case \"Division\" /* Division */:\r\n            return \"/\" /* Division */;\r\n        case \"Plus\" /* Plus */:\r\n            return \"+\" /* Addition */;\r\n        case \"Minus\" /* Minus */:\r\n            return \"-\" /* Subtraction */;\r\n        case \"Ampersand\" /* Ampersand */:\r\n            return \"&\" /* And */;\r\n        // EqualityOperator\r\n        case \"Equal\" /* Equal */:\r\n            return \"=\" /* EqualTo */;\r\n        case \"NotEqual\" /* NotEqual */:\r\n            return \"<>\" /* NotEqualTo */;\r\n        // LogicalOperator\r\n        case \"KeywordAnd\" /* KeywordAnd */:\r\n            return \"and\" /* And */;\r\n        case \"KeywordOr\" /* KeywordOr */:\r\n            return \"or\" /* Or */;\r\n        // RelationalOperator\r\n        case \"LessThan\" /* LessThan */:\r\n            return \"<\" /* LessThan */;\r\n        case \"LessThanEqualTo\" /* LessThanEqualTo */:\r\n            return \"<=\" /* LessThanEqualTo */;\r\n        case \"GreaterThan\" /* GreaterThan */:\r\n            return \">\" /* GreaterThan */;\r\n        case \"GreaterThanEqualTo\" /* GreaterThanEqualTo */:\r\n            return \">=\" /* GreaterThanEqualTo */;\r\n        // Keyword operator\r\n        case \"KeywordAs\" /* KeywordAs */:\r\n            return \"as\" /* As */;\r\n        case \"KeywordIs\" /* KeywordIs */:\r\n            return \"is\" /* Is */;\r\n        case \"KeywordMeta\" /* KeywordMeta */:\r\n            return \"meta\" /* Meta */;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexports.maybeBinOpExpressionOperatorKindFrom = maybeBinOpExpressionOperatorKindFrom;\r\nfunction binOpExpressionOperatorPrecedence(operator) {\r\n    switch (operator) {\r\n        case \"meta\" /* Meta */:\r\n            return 110;\r\n        case \"*\" /* Multiplication */:\r\n        case \"/\" /* Division */:\r\n            return 100;\r\n        case \"+\" /* Addition */:\r\n        case \"-\" /* Subtraction */:\r\n        case \"&\" /* And */:\r\n            return 90;\r\n        case \">\" /* GreaterThan */:\r\n        case \">=\" /* GreaterThanEqualTo */:\r\n        case \"<\" /* LessThan */:\r\n        case \"<=\" /* LessThanEqualTo */:\r\n            return 80;\r\n        case \"=\" /* EqualTo */:\r\n        case \"<>\" /* NotEqualTo */:\r\n            return 70;\r\n        case \"as\" /* As */:\r\n            return 60;\r\n        case \"is\" /* Is */:\r\n            return 50;\r\n        case \"and\" /* And */:\r\n            return 40;\r\n        case \"or\" /* Or */:\r\n            return 30;\r\n        default:\r\n            throw common_1.isNever(operator);\r\n    }\r\n}\r\nexports.binOpExpressionOperatorPrecedence = binOpExpressionOperatorPrecedence;\r\nfunction maybeLiteralKindFrom(maybeTokenKind) {\r\n    switch (maybeTokenKind) {\r\n        case \"HexLiteral\" /* HexLiteral */:\r\n        case \"KeywordHashNan\" /* KeywordHashNan */:\r\n        case \"KeywordHashInfinity\" /* KeywordHashInfinity */:\r\n        case \"NumericLiteral\" /* NumericLiteral */:\r\n            return \"Numeric\" /* Numeric */;\r\n        case \"KeywordFalse\" /* KeywordFalse */:\r\n        case \"KeywordTrue\" /* KeywordTrue */:\r\n            return \"Logical\" /* Logical */;\r\n        case \"NullLiteral\" /* NullLiteral */:\r\n            return \"Null\" /* Null */;\r\n        case \"StringLiteral\" /* StringLiteral */:\r\n            return \"Str\" /* Str */;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexports.maybeLiteralKindFrom = maybeLiteralKindFrom;\r\nfunction primitiveTypeConstantKindFrom(node) {\r\n    switch (node.kind) {\r\n        case \"AsNullablePrimitiveType\" /* AsNullablePrimitiveType */:\r\n            return primitiveTypeConstantKindFrom(node.paired);\r\n        case \"NullablePrimitiveType\" /* NullablePrimitiveType */:\r\n            return node.paired.primitiveType.constantKind;\r\n        case \"PrimitiveType\" /* PrimitiveType */:\r\n            return node.primitiveType.constantKind;\r\n        default:\r\n            throw common_1.isNever(node);\r\n    }\r\n}\r\nexports.primitiveTypeConstantKindFrom = primitiveTypeConstantKindFrom;\r\nfunction isPrimitiveTypeConstantKind(maybePrimitiveTypeConstantKind) {\r\n    switch (maybePrimitiveTypeConstantKind) {\r\n        case \"nullable\" /* Nullable */:\r\n        case \"optional\" /* Optional */:\r\n        case \"any\" /* Any */:\r\n        case \"anynonnull\" /* AnyNonNull */:\r\n        case \"binary\" /* Binary */:\r\n        case \"date\" /* Date */:\r\n        case \"datetime\" /* DateTime */:\r\n        case \"datetimezone\" /* DateTimeZone */:\r\n        case \"duration\" /* Duration */:\r\n        case \"function\" /* Function */:\r\n        case \"list\" /* List */:\r\n        case \"logical\" /* Logical */:\r\n        case \"none\" /* None */:\r\n        case \"number\" /* Number */:\r\n        case \"record\" /* Record */:\r\n        case \"table\" /* Table */:\r\n        case \"text\" /* Text */:\r\n        case \"time\" /* Time */:\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nexports.isPrimitiveTypeConstantKind = isPrimitiveTypeConstantKind;\r\nfunction isTBinOpExpression(node) {\r\n    switch (node.kind) {\r\n        case \"ArithmeticExpression\" /* ArithmeticExpression */:\r\n        case \"AsExpression\" /* AsExpression */:\r\n        case \"EqualityExpression\" /* EqualityExpression */:\r\n        case \"IsExpression\" /* IsExpression */:\r\n        case \"LogicalExpression\" /* LogicalExpression */:\r\n        case \"MetadataExpression\" /* MetadataExpression */:\r\n        case \"RelationalExpression\" /* RelationalExpression */:\r\n            return true;\r\n        default:\r\n            return false;\r\n    }\r\n}\r\nexports.isTBinOpExpression = isTBinOpExpression;\r\nfunction isPairedWrapperConstantKinds(x, y) {\r\n    if (x.length !== 1 || y.length !== 1) {\r\n        return false;\r\n    }\r\n    // If given x === ')' and y === '(', then swap positions.\r\n    const low = x < y ? x : y;\r\n    const high = low === x ? y : x;\r\n    return ((low === \"{\" /* LeftBrace */ && high === \"}\" /* RightBrace */) ||\r\n        (low === \"[\" /* LeftBracket */ && high === \"]\" /* RightBracket */) ||\r\n        (low === \"(\" /* LeftParenthesis */ && high === \")\" /* RightParenthesis */));\r\n}\r\nexports.isPairedWrapperConstantKinds = isPairedWrapperConstantKinds;\r\nfunction testAnyNodeKind(value, allowedNodeKinds, details = undefined) {\r\n    return allowedNodeKinds.indexOf(value) === -1\r\n        ? new common_1.CommonError.InvariantError(`NodeKind value is not an allowed NodeKind value`, details)\r\n        : undefined;\r\n}\r\nexports.testAnyNodeKind = testAnyNodeKind;\r\n//# sourceMappingURL=astUtils.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Ast = require(\"./ast\");\r\nexports.Ast = Ast;\r\nconst AstUtils = require(\"./astUtils\");\r\nexports.AstUtils = AstUtils;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=context.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../../common\");\r\nconst nodeIdMap_1 = require(\"../nodeIdMap\");\r\nfunction newState() {\r\n    return {\r\n        root: {\r\n            maybeNode: undefined,\r\n        },\r\n        nodeIdMapCollection: {\r\n            astNodeById: new Map(),\r\n            contextNodeById: new Map(),\r\n            parentIdById: new Map(),\r\n            childIdsById: new Map(),\r\n            maybeRightMostLeaf: undefined,\r\n        },\r\n        idCounter: 0,\r\n        leafNodeIds: [],\r\n    };\r\n}\r\nexports.newState = newState;\r\nfunction nextId(state) {\r\n    state.idCounter += 1;\r\n    return state.idCounter;\r\n}\r\nexports.nextId = nextId;\r\nfunction nextAttributeIndex(parentNode) {\r\n    const result = parentNode.attributeCounter;\r\n    parentNode.attributeCounter += 1;\r\n    return result;\r\n}\r\nexports.nextAttributeIndex = nextAttributeIndex;\r\nfunction startContext(state, nodeKind, tokenIndexStart, maybeTokenStart, maybeParentNode) {\r\n    const nodeIdMapCollection = state.nodeIdMapCollection;\r\n    let maybeAttributeIndex;\r\n    const nodeId = nextId(state);\r\n    // If a parent context Node exists, update the parent/child mapping attributes and attributeCounter.\r\n    if (maybeParentNode) {\r\n        const childIdsById = nodeIdMapCollection.childIdsById;\r\n        const parentNode = maybeParentNode;\r\n        const parentId = parentNode.id;\r\n        maybeAttributeIndex = nextAttributeIndex(parentNode);\r\n        nodeIdMapCollection.parentIdById.set(nodeId, parentId);\r\n        const maybeExistingChildren = childIdsById.get(parentId);\r\n        if (maybeExistingChildren) {\r\n            const existingChildren = maybeExistingChildren;\r\n            childIdsById.set(parentId, [...existingChildren, nodeId]);\r\n        }\r\n        else {\r\n            childIdsById.set(parentId, [nodeId]);\r\n        }\r\n    }\r\n    const contextNode = {\r\n        id: nodeId,\r\n        kind: nodeKind,\r\n        tokenIndexStart,\r\n        maybeTokenStart,\r\n        attributeCounter: 0,\r\n        isClosed: false,\r\n        maybeAttributeIndex,\r\n    };\r\n    nodeIdMapCollection.contextNodeById.set(nodeId, contextNode);\r\n    if (state.root.maybeNode === undefined) {\r\n        state.root.maybeNode = contextNode;\r\n    }\r\n    return contextNode;\r\n}\r\nexports.startContext = startContext;\r\n// Returns the Node's parent context (if one exists).\r\nfunction endContext(state, contextNode, astNode) {\r\n    const nodeIdMapCollection = state.nodeIdMapCollection;\r\n    contextNode.isClosed = true;\r\n    if (astNode.isLeaf) {\r\n        state.leafNodeIds.push(contextNode.id);\r\n    }\r\n    // Ending a context should return the context's parent node (if one exists).\r\n    const maybeParentId = nodeIdMapCollection.parentIdById.get(contextNode.id);\r\n    const maybeParentNode = maybeParentId !== undefined ? nodeIdMapCollection.contextNodeById.get(maybeParentId) : undefined;\r\n    // Move nodeId from contextNodeMap to astNodeMap.\r\n    if (!nodeIdMapCollection.contextNodeById.delete(contextNode.id)) {\r\n        throw new common_1.CommonError.InvariantError(\"can't end a context that doesn't belong to state\");\r\n    }\r\n    nodeIdMapCollection.astNodeById.set(astNode.id, astNode);\r\n    // Update maybeRightMostLeaf when applicable\r\n    if (astNode.isLeaf) {\r\n        if (nodeIdMapCollection.maybeRightMostLeaf === undefined ||\r\n            nodeIdMapCollection.maybeRightMostLeaf.tokenRange.tokenIndexStart < astNode.tokenRange.tokenIndexStart) {\r\n            const unsafeNodeIdMapCollection = nodeIdMapCollection;\r\n            unsafeNodeIdMapCollection.maybeRightMostLeaf = astNode;\r\n        }\r\n    }\r\n    return maybeParentNode;\r\n}\r\nexports.endContext = endContext;\r\nfunction deleteAst(state, nodeId, parentWillBeDeleted) {\r\n    const nodeIdMapCollection = state.nodeIdMapCollection;\r\n    const astNodeById = nodeIdMapCollection.astNodeById;\r\n    const parentIdById = nodeIdMapCollection.parentIdById;\r\n    const childIdsById = nodeIdMapCollection.childIdsById;\r\n    if (!astNodeById.has(nodeId)) {\r\n        const details = { nodeId };\r\n        throw new common_1.CommonError.InvariantError(`Ast nodeId not in state.`, details);\r\n    }\r\n    // If Node was a leaf node, remove it from the list of leaf nodes.\r\n    removeLeafOrNoop(state, nodeId);\r\n    const maybeParentId = parentIdById.get(nodeId);\r\n    const maybeChildIds = childIdsById.get(nodeId);\r\n    // Not a leaf node.\r\n    if (maybeChildIds !== undefined) {\r\n        const childIds = maybeChildIds;\r\n        const details = {\r\n            childIds,\r\n            nodeId,\r\n        };\r\n        throw new common_1.CommonError.InvariantError(`Ast maybeChildIds !== undefined`, details);\r\n    }\r\n    // Is a leaf node, not root node.\r\n    // Delete the node from the list of children under the node's parent.\r\n    else if (maybeParentId) {\r\n        const parentId = maybeParentId;\r\n        if (astNodeById.has(parentId) && !parentWillBeDeleted) {\r\n            const details = {\r\n                parentId,\r\n                nodeId,\r\n            };\r\n            throw new common_1.CommonError.InvariantError(`parent is a Ast node not marked for deletion`, details);\r\n        }\r\n        removeOrReplaceChildId(nodeIdMapCollection, parentId, nodeId, undefined);\r\n    }\r\n    // Else is root node, is leaf node.\r\n    // No children updates need to be taken.\r\n    // Remove the node from existence.\r\n    astNodeById.delete(nodeId);\r\n    childIdsById.delete(nodeId);\r\n    parentIdById.delete(nodeId);\r\n}\r\nexports.deleteAst = deleteAst;\r\nfunction deleteContext(state, nodeId) {\r\n    const nodeIdMapCollection = state.nodeIdMapCollection;\r\n    const contextNodeById = nodeIdMapCollection.contextNodeById;\r\n    const parentIdById = nodeIdMapCollection.parentIdById;\r\n    const childIdsById = nodeIdMapCollection.childIdsById;\r\n    const maybeContextNode = contextNodeById.get(nodeId);\r\n    if (maybeContextNode === undefined) {\r\n        const details = { nodeId };\r\n        throw new common_1.CommonError.InvariantError(`Context nodeId not in state.`, details);\r\n    }\r\n    const contextNode = maybeContextNode;\r\n    // If Node was a leaf node, remove it from the list of leaf nodes.\r\n    removeLeafOrNoop(state, nodeId);\r\n    const maybeParentId = parentIdById.get(nodeId);\r\n    const maybeChildIds = childIdsById.get(nodeId);\r\n    // Not a leaf node.\r\n    if (maybeChildIds !== undefined) {\r\n        const childIds = maybeChildIds;\r\n        if (childIds.length !== 1) {\r\n            const details = {\r\n                childIds,\r\n                nodeId,\r\n            };\r\n            throw new common_1.CommonError.InvariantError(`Context childIds.length !== 0`, details);\r\n        }\r\n        const childId = childIds[0];\r\n        // Not a leaf node, is the Root node.\r\n        // Promote the child to the root if it's a Context node.\r\n        if (maybeParentId === undefined) {\r\n            parentIdById.delete(childId);\r\n            const maybeChildContext = contextNodeById.get(childId);\r\n            if (maybeChildContext) {\r\n                const childContext = maybeChildContext;\r\n                state.root.maybeNode = childContext;\r\n            }\r\n        }\r\n        // Not a leaf node, not the Root node.\r\n        // Replace the node from the list of children under the node's parent using the node's child\r\n        else {\r\n            const parentId = maybeParentId;\r\n            removeOrReplaceChildId(nodeIdMapCollection, parentId, nodeId, childId);\r\n        }\r\n        // The child Node inherits the attributeIndex.\r\n        const childXorNode = nodeIdMap_1.NodeIdMapUtils.expectXorNode(state.nodeIdMapCollection, childId);\r\n        const mutableChildXorNode = childXorNode.node;\r\n        mutableChildXorNode.maybeAttributeIndex = contextNode.maybeAttributeIndex;\r\n    }\r\n    // Is a leaf node, not root node.\r\n    // Delete the node from the list of children under the node's parent.\r\n    else if (maybeParentId) {\r\n        const parentId = maybeParentId;\r\n        removeOrReplaceChildId(nodeIdMapCollection, parentId, nodeId, undefined);\r\n    }\r\n    // Else is root node, is leaf node.\r\n    // No children updates need to be taken.\r\n    // Remove the node from existence.\r\n    contextNodeById.delete(nodeId);\r\n    childIdsById.delete(nodeId);\r\n    parentIdById.delete(nodeId);\r\n    // Return the node's parent if it exits\r\n    return maybeParentId !== undefined ? nodeIdMap_1.NodeIdMapUtils.expectContextNode(contextNodeById, maybeParentId) : undefined;\r\n}\r\nexports.deleteContext = deleteContext;\r\nfunction removeLeafOrNoop(state, nodeId) {\r\n    const leafNodeIds = state.leafNodeIds;\r\n    const maybeLeafIndex = leafNodeIds.indexOf(nodeId);\r\n    if (maybeLeafIndex !== -1) {\r\n        const leafIndex = maybeLeafIndex;\r\n        state.leafNodeIds = [...leafNodeIds.slice(0, leafIndex), ...leafNodeIds.slice(leafIndex + 1)];\r\n    }\r\n}\r\nfunction removeOrReplaceChildId(nodeIdMapCollection, parentId, childId, maybeReplacementId) {\r\n    const childIdsById = nodeIdMapCollection.childIdsById;\r\n    const childIds = nodeIdMap_1.NodeIdMapUtils.expectChildIds(childIdsById, parentId);\r\n    const replacementIndex = childIds.indexOf(childId);\r\n    if (replacementIndex === -1) {\r\n        const details = {\r\n            parentId,\r\n            childId,\r\n        };\r\n        throw new common_1.CommonError.InvariantError(`childId isn't a child of parentId`, details);\r\n    }\r\n    const beforeChildId = childIds.slice(0, replacementIndex);\r\n    const afterChildId = childIds.slice(replacementIndex + 1);\r\n    let maybeNewChildIds;\r\n    if (maybeReplacementId) {\r\n        const replacementId = maybeReplacementId;\r\n        nodeIdMapCollection.parentIdById.set(replacementId, parentId);\r\n        if (childIds.length === 1) {\r\n            maybeNewChildIds = [replacementId];\r\n        }\r\n        else {\r\n            maybeNewChildIds = [...beforeChildId, replacementId, ...afterChildId];\r\n        }\r\n    }\r\n    else {\r\n        if (childIds.length === 1) {\r\n            maybeNewChildIds = undefined;\r\n        }\r\n        else {\r\n            maybeNewChildIds = [...beforeChildId, ...afterChildId];\r\n        }\r\n    }\r\n    if (maybeNewChildIds) {\r\n        const newChildIds = maybeNewChildIds;\r\n        childIdsById.set(parentId, newChildIds);\r\n    }\r\n    else {\r\n        childIdsById.delete(parentId);\r\n    }\r\n    const maybeParent = nodeIdMapCollection.contextNodeById.get(parentId) || undefined;\r\n    if (maybeParent !== undefined && maybeReplacementId === undefined) {\r\n        maybeParent.attributeCounter -= 1;\r\n    }\r\n}\r\n//# sourceMappingURL=contextUtils.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ParseContext = require(\"./context\");\r\nexports.ParseContext = ParseContext;\r\nconst ParseContextUtils = require(\"./contextUtils\");\r\nexports.ParseContextUtils = ParseContextUtils;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../common\");\r\nconst localization_1 = require(\"../localization\");\r\nclass ParseError extends Error {\r\n    constructor(innerError, state) {\r\n        super(innerError.message);\r\n        this.innerError = innerError;\r\n        this.state = state;\r\n    }\r\n}\r\nexports.ParseError = ParseError;\r\nclass ExpectedCsvContinuationError extends Error {\r\n    constructor(templates, kind, maybeFoundToken) {\r\n        super(localization_1.Localization.error_parse_csvContinuation(templates, kind));\r\n        this.kind = kind;\r\n        this.maybeFoundToken = maybeFoundToken;\r\n    }\r\n}\r\nexports.ExpectedCsvContinuationError = ExpectedCsvContinuationError;\r\nclass ExpectedAnyTokenKindError extends Error {\r\n    constructor(templates, expectedAnyTokenKinds, maybeFoundToken) {\r\n        super(localization_1.Localization.error_parse_expectAnyTokenKind(templates, expectedAnyTokenKinds, maybeFoundToken));\r\n        this.expectedAnyTokenKinds = expectedAnyTokenKinds;\r\n        this.maybeFoundToken = maybeFoundToken;\r\n    }\r\n}\r\nexports.ExpectedAnyTokenKindError = ExpectedAnyTokenKindError;\r\nclass ExpectedTokenKindError extends Error {\r\n    constructor(templates, expectedTokenKind, maybeFoundToken) {\r\n        super(localization_1.Localization.error_parse_expectTokenKind(templates, expectedTokenKind, maybeFoundToken));\r\n        this.expectedTokenKind = expectedTokenKind;\r\n        this.maybeFoundToken = maybeFoundToken;\r\n    }\r\n}\r\nexports.ExpectedTokenKindError = ExpectedTokenKindError;\r\nclass ExpectedGeneralizedIdentifierError extends Error {\r\n    constructor(templates, maybeFoundToken) {\r\n        super(localization_1.Localization.error_parse_expectGeneralizedIdentifier(templates, maybeFoundToken));\r\n        this.maybeFoundToken = maybeFoundToken;\r\n    }\r\n}\r\nexports.ExpectedGeneralizedIdentifierError = ExpectedGeneralizedIdentifierError;\r\nclass InvalidPrimitiveTypeError extends Error {\r\n    constructor(templates, token, positionStart) {\r\n        super(localization_1.Localization.error_parse_invalidPrimitiveType(templates, token));\r\n        this.token = token;\r\n        this.positionStart = positionStart;\r\n    }\r\n}\r\nexports.InvalidPrimitiveTypeError = InvalidPrimitiveTypeError;\r\nclass RequiredParameterAfterOptionalParameterError extends Error {\r\n    constructor(templates, missingOptionalToken, positionStart) {\r\n        super(localization_1.Localization.error_parse_requiredParameterAfterOptional(templates));\r\n        this.missingOptionalToken = missingOptionalToken;\r\n        this.positionStart = positionStart;\r\n    }\r\n}\r\nexports.RequiredParameterAfterOptionalParameterError = RequiredParameterAfterOptionalParameterError;\r\nclass UnterminatedBracketError extends Error {\r\n    constructor(templates, openBracketToken, positionStart) {\r\n        super(localization_1.Localization.error_parse_unterminated_bracket(templates));\r\n        this.openBracketToken = openBracketToken;\r\n        this.positionStart = positionStart;\r\n    }\r\n}\r\nexports.UnterminatedBracketError = UnterminatedBracketError;\r\nclass UnterminatedParenthesesError extends Error {\r\n    constructor(templates, openParenthesesToken, positionStart) {\r\n        super(localization_1.Localization.error_parse_unterminated_parenthesis(templates));\r\n        this.openParenthesesToken = openParenthesesToken;\r\n        this.positionStart = positionStart;\r\n    }\r\n}\r\nexports.UnterminatedParenthesesError = UnterminatedParenthesesError;\r\nclass UnusedTokensRemainError extends Error {\r\n    constructor(templates, firstUnusedToken, positionStart) {\r\n        super(localization_1.Localization.error_parse_unusedTokens(templates));\r\n        this.firstUnusedToken = firstUnusedToken;\r\n        this.positionStart = positionStart;\r\n    }\r\n}\r\nexports.UnusedTokensRemainError = UnusedTokensRemainError;\r\nfunction isTParseError(x) {\r\n    return x instanceof ParseError || x instanceof common_1.CommonError.CommonError;\r\n}\r\nexports.isTParseError = isTParseError;\r\nfunction isTInnerParseError(x) {\r\n    return (x instanceof ExpectedAnyTokenKindError ||\r\n        x instanceof ExpectedCsvContinuationError ||\r\n        x instanceof ExpectedGeneralizedIdentifierError ||\r\n        x instanceof ExpectedTokenKindError ||\r\n        x instanceof InvalidPrimitiveTypeError ||\r\n        x instanceof RequiredParameterAfterOptionalParameterError ||\r\n        x instanceof UnterminatedBracketError ||\r\n        x instanceof UnterminatedParenthesesError ||\r\n        x instanceof UnusedTokensRemainError);\r\n}\r\nexports.isTInnerParseError = isTInnerParseError;\r\nfunction maybeTokenFrom(err) {\r\n    if ((err instanceof ExpectedAnyTokenKindError ||\r\n        err instanceof ExpectedCsvContinuationError ||\r\n        err instanceof ExpectedGeneralizedIdentifierError ||\r\n        err instanceof ExpectedTokenKindError) &&\r\n        err.maybeFoundToken) {\r\n        return err.maybeFoundToken.token;\r\n    }\r\n    else if (err instanceof InvalidPrimitiveTypeError) {\r\n        return err.token;\r\n    }\r\n    else if (err instanceof RequiredParameterAfterOptionalParameterError) {\r\n        return err.missingOptionalToken;\r\n    }\r\n    else if (err instanceof UnterminatedBracketError) {\r\n        return err.openBracketToken;\r\n    }\r\n    else if (err instanceof UnterminatedParenthesesError) {\r\n        return err.openParenthesesToken;\r\n    }\r\n    else if (err instanceof UnusedTokensRemainError) {\r\n        return err.firstUnusedToken;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nexports.maybeTokenFrom = maybeTokenFrom;\r\n//# sourceMappingURL=error.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst ParseError = require(\"./error\");\r\nexports.ParseError = ParseError;\r\nconst Parser = require(\"./parsers\");\r\nexports.Parser = Parser;\r\n__export(require(\"./ast\"));\r\n__export(require(\"./context\"));\r\n__export(require(\"./IParser\"));\r\n__export(require(\"./IParserState\"));\r\n__export(require(\"./nodeIdMap\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst NodeIdMap = require(\"./nodeIdMap\");\r\nexports.NodeIdMap = NodeIdMap;\r\nconst NodeIdMapUtils = require(\"./nodeIdMapUtils\");\r\nexports.NodeIdMapUtils = NodeIdMapUtils;\r\n__export(require(\"./xorNode\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=nodeIdMap.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../../common\");\r\nfunction xorNodeFromAst(node) {\r\n    return {\r\n        kind: \"Ast\" /* Ast */,\r\n        node,\r\n    };\r\n}\r\nexports.xorNodeFromAst = xorNodeFromAst;\r\nfunction xorNodeFromContext(node) {\r\n    return {\r\n        kind: \"Context\" /* Context */,\r\n        node,\r\n    };\r\n}\r\nexports.xorNodeFromContext = xorNodeFromContext;\r\nfunction maybeXorNode(nodeIdMapCollection, nodeId) {\r\n    const maybeAstNode = nodeIdMapCollection.astNodeById.get(nodeId);\r\n    if (maybeAstNode) {\r\n        const astNode = maybeAstNode;\r\n        return {\r\n            kind: \"Ast\" /* Ast */,\r\n            node: astNode,\r\n        };\r\n    }\r\n    const maybeContextNode = nodeIdMapCollection.contextNodeById.get(nodeId);\r\n    if (maybeContextNode) {\r\n        const contextNode = maybeContextNode;\r\n        return {\r\n            kind: \"Context\" /* Context */,\r\n            node: contextNode,\r\n        };\r\n    }\r\n    return undefined;\r\n}\r\nexports.maybeXorNode = maybeXorNode;\r\nfunction maybeNthSiblingXorNode(nodeIdMapCollection, rootId, offset) {\r\n    const childXorNode = expectXorNode(nodeIdMapCollection, rootId);\r\n    if (childXorNode.node.maybeAttributeIndex === undefined) {\r\n        return undefined;\r\n    }\r\n    const attributeIndex = childXorNode.node.maybeAttributeIndex + offset;\r\n    if (attributeIndex < 0) {\r\n        return undefined;\r\n    }\r\n    const parentXorNode = expectParentXorNode(nodeIdMapCollection, rootId, undefined);\r\n    const childIds = expectChildIds(nodeIdMapCollection.childIdsById, parentXorNode.node.id);\r\n    if (childIds.length >= attributeIndex) {\r\n        return undefined;\r\n    }\r\n    return maybeXorNode(nodeIdMapCollection, childIds[attributeIndex]);\r\n}\r\nexports.maybeNthSiblingXorNode = maybeNthSiblingXorNode;\r\nfunction maybeNextSiblingXorNode(nodeIdMapCollection, nodeId) {\r\n    return maybeNthSiblingXorNode(nodeIdMapCollection, nodeId, 1);\r\n}\r\nexports.maybeNextSiblingXorNode = maybeNextSiblingXorNode;\r\nfunction maybeParentXorNode(nodeIdMapCollection, childId, maybeAllowedNodeKinds = undefined) {\r\n    const maybeAstNode = maybeParentAstNode(nodeIdMapCollection, childId, maybeAllowedNodeKinds);\r\n    if (maybeAstNode !== undefined) {\r\n        return xorNodeFromAst(maybeAstNode);\r\n    }\r\n    const maybeContextNode = maybeParentContextNode(nodeIdMapCollection, childId, maybeAllowedNodeKinds);\r\n    if (maybeContextNode !== undefined) {\r\n        return xorNodeFromContext(maybeContextNode);\r\n    }\r\n    return undefined;\r\n}\r\nexports.maybeParentXorNode = maybeParentXorNode;\r\nfunction maybeParentAstNode(nodeIdMapCollection, childId, maybeAllowedNodeKinds = undefined) {\r\n    const maybeParentId = nodeIdMapCollection.parentIdById.get(childId);\r\n    if (maybeParentId === undefined) {\r\n        return undefined;\r\n    }\r\n    const maybeParent = nodeIdMapCollection.astNodeById.get(maybeParentId);\r\n    if (maybeParent === undefined) {\r\n        return undefined;\r\n    }\r\n    const parent = maybeParent;\r\n    if (maybeAllowedNodeKinds !== undefined && maybeAllowedNodeKinds.indexOf(parent.kind) === -1) {\r\n        return undefined;\r\n    }\r\n    return parent;\r\n}\r\nexports.maybeParentAstNode = maybeParentAstNode;\r\nfunction maybeParentContextNode(nodeIdMapCollection, childId, maybeAllowedNodeKinds = undefined) {\r\n    const maybeParentId = nodeIdMapCollection.parentIdById.get(childId);\r\n    if (maybeParentId === undefined) {\r\n        return undefined;\r\n    }\r\n    const maybeParent = nodeIdMapCollection.contextNodeById.get(maybeParentId);\r\n    if (maybeParent === undefined) {\r\n        return undefined;\r\n    }\r\n    const parent = maybeParent;\r\n    if (maybeAllowedNodeKinds !== undefined && maybeAllowedNodeKinds.indexOf(parent.kind) === -1) {\r\n        return undefined;\r\n    }\r\n    return parent;\r\n}\r\nexports.maybeParentContextNode = maybeParentContextNode;\r\nfunction maybeAstChildren(nodeIdMapCollection, parentId) {\r\n    const maybeChildIds = nodeIdMapCollection.childIdsById.get(parentId);\r\n    if (maybeChildIds === undefined) {\r\n        return undefined;\r\n    }\r\n    const childIds = maybeChildIds;\r\n    const astNodeById = nodeIdMapCollection.astNodeById;\r\n    return childIds.map(childId => expectAstNode(astNodeById, childId));\r\n}\r\nexports.maybeAstChildren = maybeAstChildren;\r\n// Both Ast.TNode and ParserContext.Node store an attribute index\r\n// when defined represents which child index they are under for their parent.\r\n//\r\n// This function grabs the parent and if they have a child matching the attribute index it is returned as an XorNode.\r\n// If the parent doesn't have a matching child that means (assuming a valid attributeIndex is given) the parent is\r\n// a ParserContext.Node which failed to fully parse all of their attributes.\r\n//\r\n// An optional array of Ast.NodeKind can be given for validation purposes.\r\n// If the child's node kind isn't in the given array, then an exception is thrown.\r\nfunction maybeXorChildByAttributeIndex(nodeIdMapCollection, parentId, attributeIndex, maybeChildNodeKinds) {\r\n    // Grab the node's childIds.\r\n    const maybeChildIds = nodeIdMapCollection.childIdsById.get(parentId);\r\n    if (maybeChildIds === undefined) {\r\n        return undefined;\r\n    }\r\n    const childIds = maybeChildIds;\r\n    // Iterate over the children and try to find one which matches attributeIndex.\r\n    for (const childId of childIds) {\r\n        const xorNode = expectXorNode(nodeIdMapCollection, childId);\r\n        if (xorNode.node.maybeAttributeIndex === attributeIndex) {\r\n            // If a Ast.NodeKind is given, validate the Ast.TNode at the given index matches the Ast.NodeKind.\r\n            if (maybeChildNodeKinds !== undefined && maybeChildNodeKinds.indexOf(xorNode.node.kind) === -1) {\r\n                const details = {\r\n                    childId,\r\n                    expectedAny: maybeChildNodeKinds,\r\n                    actual: xorNode.node.kind,\r\n                };\r\n                throw new common_1.CommonError.InvariantError(`incorrect node kind for attribute`, details);\r\n            }\r\n            else {\r\n                return xorNode;\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nexports.maybeXorChildByAttributeIndex = maybeXorChildByAttributeIndex;\r\nfunction maybeAstChildByAttributeIndex(nodeIdMapCollection, parentId, attributeIndex, maybeChildNodeKinds) {\r\n    const maybeNode = maybeXorChildByAttributeIndex(nodeIdMapCollection, parentId, attributeIndex, maybeChildNodeKinds);\r\n    if (maybeNode === undefined || maybeNode.kind === \"Context\" /* Context */) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return maybeNode.node;\r\n    }\r\n}\r\nexports.maybeAstChildByAttributeIndex = maybeAstChildByAttributeIndex;\r\nfunction maybeContextChildByAttributeIndex(nodeIdMapCollection, parentId, attributeIndex, maybeChildNodeKinds) {\r\n    const maybeNode = maybeXorChildByAttributeIndex(nodeIdMapCollection, parentId, attributeIndex, maybeChildNodeKinds);\r\n    if (maybeNode === undefined || maybeNode.kind === \"Ast\" /* Ast */) {\r\n        return undefined;\r\n    }\r\n    else {\r\n        return maybeNode.node;\r\n    }\r\n}\r\nexports.maybeContextChildByAttributeIndex = maybeContextChildByAttributeIndex;\r\nfunction maybeInvokeExpressionName(nodeIdMapCollection, nodeId) {\r\n    const invokeExprXorNode = expectXorNode(nodeIdMapCollection, nodeId);\r\n    if (invokeExprXorNode.node.kind !== \"InvokeExpression\" /* InvokeExpression */) {\r\n        const details = { invokeExprXorNode };\r\n        throw new common_1.CommonError.InvariantError(`expected invokeExprXorNode to have a Ast.NodeKind of ${\"InvokeExpression\" /* InvokeExpression */}`, details);\r\n    }\r\n    // The only place for an identifier in a RecursivePrimaryExpression is as the head, therefore an InvokeExpression\r\n    // only has a name if the InvokeExpression is the 0th element in the RecursivePrimaryExpressionArray.\r\n    let maybeName;\r\n    if (invokeExprXorNode.node.maybeAttributeIndex === 0) {\r\n        // Grab the RecursivePrimaryExpression's head if it's an IdentifierExpression\r\n        const recursiveArrayXorNode = expectParentXorNode(nodeIdMapCollection, invokeExprXorNode.node.id);\r\n        const recursiveExprXorNode = expectParentXorNode(nodeIdMapCollection, recursiveArrayXorNode.node.id);\r\n        const headXorNode = expectXorChildByAttributeIndex(nodeIdMapCollection, recursiveExprXorNode.node.id, 0, undefined);\r\n        if (headXorNode.node.kind === \"IdentifierExpression\" /* IdentifierExpression */) {\r\n            if (headXorNode.kind !== \"Ast\" /* Ast */) {\r\n                const details = {\r\n                    identifierExpressionNodeId: headXorNode.node.id,\r\n                    invokeExpressionNodeId: invokeExprXorNode.node.id,\r\n                };\r\n                throw new common_1.CommonError.InvariantError(`the younger IdentifierExpression sibling should've finished parsing before the InvokeExpression node was reached`, details);\r\n            }\r\n            const identifierExpression = headXorNode.node;\r\n            maybeName =\r\n                identifierExpression.maybeInclusiveConstant === undefined\r\n                    ? identifierExpression.identifier.literal\r\n                    : identifierExpression.maybeInclusiveConstant.constantKind +\r\n                        identifierExpression.identifier.literal;\r\n        }\r\n    }\r\n    return maybeName;\r\n}\r\nexports.maybeInvokeExpressionName = maybeInvokeExpressionName;\r\nfunction expectAstNode(astNodeById, nodeId) {\r\n    return expectInMap(astNodeById, nodeId, \"astNodeById\");\r\n}\r\nexports.expectAstNode = expectAstNode;\r\nfunction expectContextNode(contextNodeById, nodeId) {\r\n    return expectInMap(contextNodeById, nodeId, \"contextNodeById\");\r\n}\r\nexports.expectContextNode = expectContextNode;\r\nfunction expectXorNode(nodeIdMapCollection, nodeId) {\r\n    const maybeNode = maybeXorNode(nodeIdMapCollection, nodeId);\r\n    if (maybeNode === undefined) {\r\n        const details = { nodeId };\r\n        throw new common_1.CommonError.InvariantError(`nodeId wasn't an astNode nor contextNode`, details);\r\n    }\r\n    return maybeNode;\r\n}\r\nexports.expectXorNode = expectXorNode;\r\nfunction expectParentXorNode(nodeIdMapCollection, nodeId, maybeAllowedNodeKinds = undefined) {\r\n    const maybeNode = maybeParentXorNode(nodeIdMapCollection, nodeId, maybeAllowedNodeKinds);\r\n    if (maybeNode === undefined) {\r\n        const details = { nodeId };\r\n        throw new common_1.CommonError.InvariantError(`nodeId doesn't have a parent`, details);\r\n    }\r\n    return maybeNode;\r\n}\r\nexports.expectParentXorNode = expectParentXorNode;\r\nfunction expectParentAstNode(nodeIdMapCollection, nodeId, maybeAllowedNodeKinds = undefined) {\r\n    const maybeNode = maybeParentAstNode(nodeIdMapCollection, nodeId, maybeAllowedNodeKinds);\r\n    if (maybeNode === undefined) {\r\n        const details = { nodeId };\r\n        throw new common_1.CommonError.InvariantError(`nodeId doesn't have a parent`, details);\r\n    }\r\n    return maybeNode;\r\n}\r\nexports.expectParentAstNode = expectParentAstNode;\r\nfunction expectXorChildByAttributeIndex(nodeIdMapCollection, parentId, attributeIndex, maybeChildNodeKinds) {\r\n    const maybeNode = maybeXorChildByAttributeIndex(nodeIdMapCollection, parentId, attributeIndex, maybeChildNodeKinds);\r\n    if (maybeNode === undefined) {\r\n        const details = { parentId, attributeIndex };\r\n        throw new common_1.CommonError.InvariantError(`parentId doesn't have a child at the given index`, details);\r\n    }\r\n    return maybeNode;\r\n}\r\nexports.expectXorChildByAttributeIndex = expectXorChildByAttributeIndex;\r\nfunction expectAstChildByAttributeIndex(nodeIdMapCollection, parentId, attributeIndex, maybeChildNodeKinds) {\r\n    const maybeNode = maybeAstChildByAttributeIndex(nodeIdMapCollection, parentId, attributeIndex, maybeChildNodeKinds);\r\n    if (maybeNode === undefined) {\r\n        const details = { parentId, attributeIndex };\r\n        throw new common_1.CommonError.InvariantError(`parentId doesn't have an Ast child at the given index`, details);\r\n    }\r\n    return maybeNode;\r\n}\r\nexports.expectAstChildByAttributeIndex = expectAstChildByAttributeIndex;\r\nfunction expectContextChildByAttributeIndex(nodeIdMapCollection, parentId, attributeIndex, maybeChildNodeKinds) {\r\n    const maybeNode = maybeContextChildByAttributeIndex(nodeIdMapCollection, parentId, attributeIndex, maybeChildNodeKinds);\r\n    if (maybeNode === undefined) {\r\n        const details = { parentId, attributeIndex };\r\n        throw new common_1.CommonError.InvariantError(`parentId doesn't have a context child at the given index`, details);\r\n    }\r\n    return maybeNode;\r\n}\r\nexports.expectContextChildByAttributeIndex = expectContextChildByAttributeIndex;\r\nfunction expectXorNodes(nodeIdMapCollection, nodeIds) {\r\n    return nodeIds.map(nodeId => expectXorNode(nodeIdMapCollection, nodeId));\r\n}\r\nexports.expectXorNodes = expectXorNodes;\r\nfunction expectChildIds(childIdsById, nodeId) {\r\n    return expectInMap(childIdsById, nodeId, \"childIdsById\");\r\n}\r\nexports.expectChildIds = expectChildIds;\r\nfunction expectAstChildren(nodeIdMapCollection, parentId) {\r\n    const astNodeById = nodeIdMapCollection.astNodeById;\r\n    return expectChildIds(nodeIdMapCollection.childIdsById, parentId).map(childId => expectAstNode(astNodeById, childId));\r\n}\r\nexports.expectAstChildren = expectAstChildren;\r\nfunction expectXorChildren(nodeIdMapCollection, parentId) {\r\n    const maybeChildIds = nodeIdMapCollection.childIdsById.get(parentId);\r\n    if (maybeChildIds === undefined) {\r\n        return [];\r\n    }\r\n    const childIds = maybeChildIds;\r\n    return expectXorNodes(nodeIdMapCollection, childIds);\r\n}\r\nexports.expectXorChildren = expectXorChildren;\r\n// There are a few assumed invariants about children:\r\n//  * Children are read left to right.\r\n//  * Children are placed in childIdsById in the order they were read.\r\n//  * Therefore the right-most child is the most recently read which also appears last in the document.\r\nfunction maybeRightMostLeaf(nodeIdMapCollection, rootId, maybeCondition = undefined) {\r\n    const astNodeById = nodeIdMapCollection.astNodeById;\r\n    let nodeIdsToExplore = [rootId];\r\n    let maybeRightMost;\r\n    while (nodeIdsToExplore.length) {\r\n        const nodeId = nodeIdsToExplore.pop();\r\n        const maybeAstNode = astNodeById.get(nodeId);\r\n        let addChildren = false;\r\n        // Check if Ast.TNode or ParserContext.Node\r\n        if (maybeAstNode !== undefined) {\r\n            const astNode = maybeAstNode;\r\n            if (maybeCondition && !maybeCondition(astNode)) {\r\n                continue;\r\n            }\r\n            // Is leaf, check if it's more right than the previous record.\r\n            // As it's a leaf there are no children to add.\r\n            if (astNode.isLeaf) {\r\n                // Is the first leaf encountered.\r\n                if (maybeRightMost === undefined) {\r\n                    maybeRightMost = astNode;\r\n                }\r\n                // Compare current leaf node to the existing record.\r\n                else if (astNode.tokenRange.tokenIndexStart > maybeRightMost.tokenRange.tokenIndexStart) {\r\n                    maybeRightMost = astNode;\r\n                }\r\n            }\r\n            // Is not a leaf, no previous record exists.\r\n            // Add all children to the queue.\r\n            else if (maybeRightMost === undefined) {\r\n                addChildren = true;\r\n            }\r\n            // Is not a leaf, previous record exists.\r\n            // Check if we can cull the branch, otherwise add all children to the queue.\r\n            else if (astNode.tokenRange.tokenIndexEnd > maybeRightMost.tokenRange.tokenIndexStart) {\r\n                addChildren = true;\r\n            }\r\n        }\r\n        // Must be a ParserContext.Node.\r\n        // Add all children to the queue as ParserContext.Nodes can have Ast children which are leafs.\r\n        else {\r\n            addChildren = true;\r\n        }\r\n        if (addChildren) {\r\n            const maybeChildIds = nodeIdMapCollection.childIdsById.get(nodeId);\r\n            if (maybeChildIds !== undefined) {\r\n                // Add the child ids in reversed order to prioritize visiting the right most nodes first.\r\n                const childIds = maybeChildIds;\r\n                const reversedChildIds = [...childIds];\r\n                reversedChildIds.reverse();\r\n                nodeIdsToExplore = [...reversedChildIds, ...nodeIdsToExplore];\r\n            }\r\n        }\r\n    }\r\n    return maybeRightMost;\r\n}\r\nexports.maybeRightMostLeaf = maybeRightMostLeaf;\r\nfunction maybeRightMostLeafWhere(nodeIdMapCollection, rootId, maybeCondition) {\r\n    return maybeRightMostLeaf(nodeIdMapCollection, rootId, maybeCondition);\r\n}\r\nexports.maybeRightMostLeafWhere = maybeRightMostLeafWhere;\r\nfunction leftMostXorNode(nodeIdMapCollection, rootId) {\r\n    let currentNode = expectXorNode(nodeIdMapCollection, rootId);\r\n    let potentialNode = expectXorChildByAttributeIndex(nodeIdMapCollection, currentNode.node.id, 0, undefined);\r\n    while (potentialNode !== undefined) {\r\n        currentNode = potentialNode;\r\n        potentialNode = expectXorChildByAttributeIndex(nodeIdMapCollection, currentNode.node.id, 0, undefined);\r\n    }\r\n    return currentNode;\r\n}\r\nexports.leftMostXorNode = leftMostXorNode;\r\nfunction isTUnaryType(xorNode) {\r\n    return xorNode.node.kind === \"UnaryExpression\" /* UnaryExpression */ || isTTypeExpression(xorNode);\r\n}\r\nexports.isTUnaryType = isTUnaryType;\r\nfunction isTTypeExpression(xorNode) {\r\n    return xorNode.node.kind === \"TypePrimaryType\" /* TypePrimaryType */ || isTPrimaryExpression(xorNode);\r\n}\r\nexports.isTTypeExpression = isTTypeExpression;\r\nfunction isTPrimaryExpression(xorNode) {\r\n    switch (xorNode.node.kind) {\r\n        case \"LiteralExpression\" /* LiteralExpression */:\r\n        case \"ListExpression\" /* ListExpression */:\r\n        case \"RecordExpression\" /* RecordExpression */:\r\n        case \"IdentifierExpression\" /* IdentifierExpression */:\r\n        case \"ParenthesizedExpression\" /* ParenthesizedExpression */:\r\n        case \"InvokeExpression\" /* InvokeExpression */:\r\n        case \"RecursivePrimaryExpression\" /* RecursivePrimaryExpression */:\r\n        case \"NotImplementedExpression\" /* NotImplementedExpression */:\r\n            return true;\r\n        default:\r\n            return isTFieldAccessExpression(xorNode);\r\n    }\r\n}\r\nexports.isTPrimaryExpression = isTPrimaryExpression;\r\nfunction isTFieldAccessExpression(xorNode) {\r\n    return xorNode.node.kind === \"FieldSelector\" /* FieldSelector */ || xorNode.node.kind === \"FieldProjection\" /* FieldProjection */;\r\n}\r\nexports.isTFieldAccessExpression = isTFieldAccessExpression;\r\nfunction expectAncestry(nodeIdMapCollection, rootId) {\r\n    const ancestryIds = [rootId];\r\n    let maybeParentId = nodeIdMapCollection.parentIdById.get(rootId);\r\n    while (maybeParentId) {\r\n        const parentId = maybeParentId;\r\n        ancestryIds.push(parentId);\r\n        maybeParentId = nodeIdMapCollection.parentIdById.get(parentId);\r\n    }\r\n    return expectXorNodes(nodeIdMapCollection, ancestryIds);\r\n}\r\nexports.expectAncestry = expectAncestry;\r\nfunction xorNodeTokenRange(nodeIdMapCollection, xorNode) {\r\n    switch (xorNode.kind) {\r\n        case \"Ast\" /* Ast */: {\r\n            const tokenRange = xorNode.node.tokenRange;\r\n            return {\r\n                tokenIndexStart: tokenRange.tokenIndexStart,\r\n                tokenIndexEnd: tokenRange.tokenIndexEnd,\r\n            };\r\n        }\r\n        case \"Context\" /* Context */: {\r\n            const contextNode = xorNode.node;\r\n            let tokenIndexEnd;\r\n            const maybeRightMostChild = maybeRightMostLeaf(nodeIdMapCollection, xorNode.node.id);\r\n            if (maybeRightMostChild === undefined) {\r\n                tokenIndexEnd = contextNode.tokenIndexStart;\r\n            }\r\n            else {\r\n                const rightMostChild = maybeRightMostChild;\r\n                tokenIndexEnd = rightMostChild.tokenRange.tokenIndexEnd;\r\n            }\r\n            return {\r\n                tokenIndexStart: contextNode.tokenIndexStart,\r\n                tokenIndexEnd,\r\n            };\r\n        }\r\n        default:\r\n            throw common_1.isNever(xorNode);\r\n    }\r\n}\r\nexports.xorNodeTokenRange = xorNodeTokenRange;\r\nfunction expectInMap(map, nodeId, mapName) {\r\n    const maybeValue = map.get(nodeId);\r\n    if (maybeValue === undefined) {\r\n        const details = { nodeId };\r\n        throw new common_1.CommonError.InvariantError(`nodeId wasn't in ${mapName}`, details);\r\n    }\r\n    return maybeValue;\r\n}\r\n//# sourceMappingURL=nodeIdMapUtils.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=xorNode.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _1 = require(\".\");\r\nconst __1 = require(\"..\");\r\nconst common_1 = require(\"../../common\");\r\nconst IParserState_1 = require(\"../IParserState\");\r\nconst common_2 = require(\"./common\");\r\n// If the Naive parser were to parse the expression '1' it would need to recurse down a dozen or so constructs,\r\n// which at each step would create a new context node, parse LiteralExpression, then traverse back up while\r\n// cleaning the no-op context nodes along the way. Two key optimizations are used to prevent that.\r\n//\r\n// 1)\r\n// The reading of binary expressions (expressions linked by TBinOpExpressionOperator) has been flattened.\r\n// A TUnaryExpression read first, then while a TBinOpExpressionOperator is next it will read the operator\r\n// constant and then the right hand of the TBinOpExpression. All expressions erad will be placed in a flat list.\r\n// Once no more expressions can be read the flat list will be shaped into a proper Ast.\r\n// This eliminates several no-op functions calls on the call stack when reading a bare TUnaryExpression (eg. `1`).\r\n//\r\n// 2)\r\n// readUnaryExpression uses limited look ahead to eliminate several function calls on the call stack.\r\nexports.CombinatorialParser = {\r\n    // 12.1.6 Identifiers\r\n    readIdentifier: _1.Naive.readIdentifier,\r\n    readGeneralizedIdentifier: _1.Naive.readGeneralizedIdentifier,\r\n    readKeyword: _1.Naive.readKeyword,\r\n    // 12.2.1 Documents\r\n    readDocument: _1.Naive.readDocument,\r\n    // 12.2.2 Section Documents\r\n    readSectionDocument: _1.Naive.readSectionDocument,\r\n    readSectionMembers: _1.Naive.readSectionMembers,\r\n    readSectionMember: _1.Naive.readSectionMember,\r\n    // 12.2.3.1 Expressions\r\n    readExpression: _1.Naive.readExpression,\r\n    // 12.2.3.2 Logical expressions\r\n    readLogicalExpression,\r\n    // 12.2.3.3 Is expression\r\n    readIsExpression,\r\n    readNullablePrimitiveType: _1.Naive.readNullablePrimitiveType,\r\n    // 12.2.3.4 As expression\r\n    readAsExpression,\r\n    // 12.2.3.5 Equality expression\r\n    readEqualityExpression,\r\n    // 12.2.3.6 Relational expression\r\n    readRelationalExpression,\r\n    // 12.2.3.7 Arithmetic expressions\r\n    readArithmeticExpression,\r\n    // 12.2.3.8 Metadata expression\r\n    readMetadataExpression,\r\n    // 12.2.3.9 Unary expression\r\n    readUnaryExpression,\r\n    // 12.2.3.10 Primary expression\r\n    readPrimaryExpression: _1.Naive.readPrimaryExpression,\r\n    readRecursivePrimaryExpression: _1.Naive.readRecursivePrimaryExpression,\r\n    // 12.2.3.11 Literal expression\r\n    readLiteralExpression: _1.Naive.readLiteralExpression,\r\n    // 12.2.3.12 Identifier expression\r\n    readIdentifierExpression: _1.Naive.readIdentifierExpression,\r\n    // 12.2.3.14 Parenthesized expression\r\n    readParenthesizedExpression: _1.Naive.readParenthesizedExpression,\r\n    // 12.2.3.15 Not-implemented expression\r\n    readNotImplementedExpression: _1.Naive.readNotImplementedExpression,\r\n    // 12.2.3.16 Invoke expression\r\n    readInvokeExpression: _1.Naive.readInvokeExpression,\r\n    // 12.2.3.17 List expression\r\n    readListExpression: _1.Naive.readListExpression,\r\n    readListItem: _1.Naive.readListItem,\r\n    // 12.2.3.18 Record expression\r\n    readRecordExpression: _1.Naive.readRecordExpression,\r\n    // 12.2.3.19 Item access expression\r\n    readItemAccessExpression: _1.Naive.readItemAccessExpression,\r\n    // 12.2.3.20 Field access expression\r\n    readFieldSelection: _1.Naive.readFieldSelection,\r\n    readFieldProjection: _1.Naive.readFieldProjection,\r\n    readFieldSelector: _1.Naive.readFieldSelector,\r\n    // 12.2.3.21 Function expression\r\n    readFunctionExpression: _1.Naive.readFunctionExpression,\r\n    readParameterList: _1.Naive.readParameterList,\r\n    readAsType: _1.Naive.readAsType,\r\n    // 12.2.3.22 Each expression\r\n    readEachExpression: _1.Naive.readEachExpression,\r\n    // 12.2.3.23 Let expression\r\n    readLetExpression: _1.Naive.readLetExpression,\r\n    // 12.2.3.24 If expression\r\n    readIfExpression: _1.Naive.readIfExpression,\r\n    // 12.2.3.25 Type expression\r\n    readTypeExpression: _1.Naive.readTypeExpression,\r\n    readType: _1.Naive.readType,\r\n    readPrimaryType: _1.Naive.readPrimaryType,\r\n    readRecordType: _1.Naive.readRecordType,\r\n    readTableType: _1.Naive.readTableType,\r\n    readFieldSpecificationList: _1.Naive.readFieldSpecificationList,\r\n    readListType: _1.Naive.readListType,\r\n    readFunctionType: _1.Naive.readFunctionType,\r\n    readParameterSpecificationList: _1.Naive.readParameterSpecificationList,\r\n    readNullableType: _1.Naive.readNullableType,\r\n    // 12.2.3.26 Error raising expression\r\n    readErrorRaisingExpression: _1.Naive.readErrorRaisingExpression,\r\n    // 12.2.3.27 Error handling expression\r\n    readErrorHandlingExpression: _1.Naive.readErrorHandlingExpression,\r\n    // 12.2.4 Literal Attributes\r\n    readRecordLiteral: _1.Naive.readRecordLiteral,\r\n    readFieldNamePairedAnyLiterals: _1.Naive.readFieldNamePairedAnyLiterals,\r\n    readListLiteral: _1.Naive.readListLiteral,\r\n    readAnyLiteral: _1.Naive.readAnyLiteral,\r\n    readPrimitiveType: _1.Naive.readPrimitiveType,\r\n    // Disambiguation\r\n    disambiguateBracket: _1.Naive.disambiguateBracket,\r\n    disambiguateParenthesis: _1.Naive.disambiguateParenthesis,\r\n    // key-value pairs\r\n    readIdentifierPairedExpressions: _1.Naive.readIdentifierPairedExpressions,\r\n    readIdentifierPairedExpression: _1.Naive.readIdentifierPairedExpression,\r\n    readGeneralizedIdentifierPairedExpressions: _1.Naive.readGeneralizedIdentifierPairedExpressions,\r\n    readGeneralizedIdentifierPairedExpression: _1.Naive.readGeneralizedIdentifierPairedExpression,\r\n};\r\nfunction readLogicalExpression(state, parser) {\r\n    return readBinOpExpression(state, parser, \"LogicalExpression\" /* LogicalExpression */);\r\n}\r\nfunction readIsExpression(state, parser) {\r\n    return readBinOpExpression(state, parser, \"IsExpression\" /* IsExpression */);\r\n}\r\nfunction readAsExpression(state, parser) {\r\n    return readBinOpExpression(state, parser, \"AsExpression\" /* AsExpression */);\r\n}\r\nfunction readEqualityExpression(state, parser) {\r\n    return readBinOpExpression(state, parser, \"EqualityExpression\" /* EqualityExpression */);\r\n}\r\nfunction readRelationalExpression(state, parser) {\r\n    return readBinOpExpression(state, parser, \"RelationalExpression\" /* RelationalExpression */);\r\n}\r\nfunction readArithmeticExpression(state, parser) {\r\n    return readBinOpExpression(state, parser, \"ArithmeticExpression\" /* ArithmeticExpression */);\r\n}\r\nfunction readMetadataExpression(state, parser) {\r\n    return readBinOpExpression(state, parser, \"MetadataExpression\" /* MetadataExpression */);\r\n}\r\nfunction readBinOpExpression(state, parser, nodeKind) {\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const placeholderContextId = state.maybeCurrentContextNode.id;\r\n    // operators/operatorConstants are of length N\r\n    // expressions are of length N + 1\r\n    let operators = [];\r\n    let operatorConstants = [];\r\n    let expressions = [\r\n        parser.readUnaryExpression(state, parser),\r\n    ];\r\n    let maybeOperator = __1.AstUtils.maybeBinOpExpressionOperatorKindFrom(state.maybeCurrentTokenKind);\r\n    while (maybeOperator !== undefined) {\r\n        const operator = maybeOperator;\r\n        operators.push(operator);\r\n        operatorConstants.push(common_2.readTokenKindAsConstant(state, state.maybeCurrentTokenKind, maybeOperator));\r\n        switch (operator) {\r\n            case \"as\" /* As */:\r\n            case \"is\" /* Is */:\r\n                expressions.push(parser.readNullablePrimitiveType(state, parser));\r\n                break;\r\n            default:\r\n                expressions.push(parser.readUnaryExpression(state, parser));\r\n                break;\r\n        }\r\n        maybeOperator = __1.AstUtils.maybeBinOpExpressionOperatorKindFrom(state.maybeCurrentTokenKind);\r\n    }\r\n    // There was a single TUnaryExpression, not a TBinOpExpression.\r\n    if (expressions.length === 1) {\r\n        IParserState_1.IParserStateUtils.deleteContext(state, placeholderContextId);\r\n        return expressions[0];\r\n    }\r\n    // Build up the Ast by using the lowest precedence operator and the two adjacent expressions,\r\n    // which might be previously built TBinOpExpression nodes.\r\n    const nodeIdMapCollection = state.contextState.nodeIdMapCollection;\r\n    const newNodeThreshold = state.contextState.idCounter;\r\n    let placeholderContextChildren = nodeIdMapCollection.childIdsById.get(placeholderContextId);\r\n    while (operators.length) {\r\n        let minPrecedenceIndex = -1;\r\n        let minPrecedence = Number.MAX_SAFE_INTEGER;\r\n        for (let index = 0; index < operators.length; index += 1) {\r\n            const currentPrecedence = __1.AstUtils.binOpExpressionOperatorPrecedence(operators[index]);\r\n            if (minPrecedence > currentPrecedence) {\r\n                minPrecedence = currentPrecedence;\r\n                minPrecedenceIndex = index;\r\n            }\r\n        }\r\n        const newBinOpExpressionId = __1.ParseContextUtils.nextId(state.contextState);\r\n        const left = expressions[minPrecedenceIndex];\r\n        const operator = operators[minPrecedenceIndex];\r\n        const operatorConstant = operatorConstants[minPrecedenceIndex];\r\n        const right = expressions[minPrecedenceIndex + 1];\r\n        left.maybeAttributeIndex = 0;\r\n        operatorConstant.maybeAttributeIndex = 1;\r\n        right.maybeAttributeIndex = 2;\r\n        const leftTokenRange = left.tokenRange;\r\n        const rightTokenRange = right.tokenRange;\r\n        const newBinOpExpression = {\r\n            kind: binOpExpressionNodeKindFrom(operator),\r\n            id: newBinOpExpressionId,\r\n            // maybeAttributeIndex is fixed after all TBinOpExpressions have been created.\r\n            maybeAttributeIndex: 0,\r\n            tokenRange: {\r\n                tokenIndexStart: leftTokenRange.tokenIndexStart,\r\n                tokenIndexEnd: rightTokenRange.tokenIndexEnd,\r\n                positionStart: leftTokenRange.positionStart,\r\n                positionEnd: rightTokenRange.positionEnd,\r\n            },\r\n            isLeaf: false,\r\n            left: left,\r\n            operator,\r\n            operatorConstant,\r\n            right,\r\n        };\r\n        operators = common_1.ArrayUtils.removeAtIndex(operators, minPrecedenceIndex);\r\n        operatorConstants = common_1.ArrayUtils.removeAtIndex(operatorConstants, minPrecedenceIndex);\r\n        expressions = expressions = [\r\n            ...expressions.slice(0, minPrecedenceIndex),\r\n            newBinOpExpression,\r\n            ...expressions.slice(minPrecedenceIndex + 2),\r\n        ];\r\n        // Correct the parentIds for the nodes combined into newBinOpExpression.\r\n        nodeIdMapCollection.parentIdById.set(left.id, newBinOpExpressionId);\r\n        nodeIdMapCollection.parentIdById.set(operatorConstant.id, newBinOpExpressionId);\r\n        nodeIdMapCollection.parentIdById.set(right.id, newBinOpExpressionId);\r\n        // Assign the nodeIdMap values for newBinOpExpression.\r\n        nodeIdMapCollection.childIdsById.set(newBinOpExpressionId, [left.id, operatorConstant.id, right.id]);\r\n        nodeIdMapCollection.astNodeById.set(newBinOpExpressionId, newBinOpExpression);\r\n        // All TUnaryExpression and operatorConstants start by being placed under the context node.\r\n        // They need to be removed for deleteContext(placeholderContextId) to succeed.\r\n        placeholderContextChildren = common_1.ArrayUtils.removeFirstInstance(placeholderContextChildren, operatorConstant.id);\r\n        if (left.id <= newNodeThreshold) {\r\n            placeholderContextChildren = common_1.ArrayUtils.removeFirstInstance(placeholderContextChildren, left.id);\r\n        }\r\n        if (right.id <= newNodeThreshold) {\r\n            placeholderContextChildren = common_1.ArrayUtils.removeFirstInstance(placeholderContextChildren, right.id);\r\n        }\r\n        nodeIdMapCollection.childIdsById.set(placeholderContextId, placeholderContextChildren);\r\n    }\r\n    const lastExpression = expressions[0];\r\n    if (!__1.AstUtils.isTBinOpExpression(lastExpression)) {\r\n        const details = {\r\n            lastExpressionId: lastExpression.id,\r\n            lastExpressionKind: lastExpression.kind,\r\n        };\r\n        throw new common_1.CommonError.InvariantError(`lastExpression should be a TBinOpExpression`, details);\r\n    }\r\n    nodeIdMapCollection.childIdsById.set(placeholderContextId, [lastExpression.id]);\r\n    nodeIdMapCollection.parentIdById.set(lastExpression.id, placeholderContextId);\r\n    IParserState_1.IParserStateUtils.deleteContext(state, placeholderContextId);\r\n    return lastExpression;\r\n}\r\nfunction binOpExpressionNodeKindFrom(operator) {\r\n    switch (operator) {\r\n        case \"meta\" /* Meta */:\r\n            return \"MetadataExpression\" /* MetadataExpression */;\r\n        case \"*\" /* Multiplication */:\r\n        case \"/\" /* Division */:\r\n        case \"+\" /* Addition */:\r\n        case \"-\" /* Subtraction */:\r\n        case \"&\" /* And */:\r\n            return \"ArithmeticExpression\" /* ArithmeticExpression */;\r\n        case \">\" /* GreaterThan */:\r\n        case \">=\" /* GreaterThanEqualTo */:\r\n        case \"<\" /* LessThan */:\r\n        case \"<=\" /* LessThanEqualTo */:\r\n            return \"RelationalExpression\" /* RelationalExpression */;\r\n        case \"=\" /* EqualTo */:\r\n        case \"<>\" /* NotEqualTo */:\r\n            return \"EqualityExpression\" /* EqualityExpression */;\r\n        case \"as\" /* As */:\r\n            return \"AsExpression\" /* AsExpression */;\r\n        case \"is\" /* Is */:\r\n            return \"IsExpression\" /* IsExpression */;\r\n        case \"and\" /* And */:\r\n        case \"or\" /* Or */:\r\n            return \"LogicalExpression\" /* LogicalExpression */;\r\n        default:\r\n            throw common_1.isNever(operator);\r\n    }\r\n}\r\nfunction readUnaryExpression(state, parser) {\r\n    let maybePrimaryExpression;\r\n    // LL(1)\r\n    switch (state.maybeCurrentTokenKind) {\r\n        // PrimaryExpression\r\n        case \"AtSign\" /* AtSign */:\r\n        case \"Identifier\" /* Identifier */:\r\n            maybePrimaryExpression = _1.Naive.readIdentifierExpression(state, parser);\r\n            break;\r\n        case \"LeftParenthesis\" /* LeftParenthesis */:\r\n            maybePrimaryExpression = _1.Naive.readParenthesizedExpression(state, parser);\r\n            break;\r\n        case \"LeftBracket\" /* LeftBracket */:\r\n            maybePrimaryExpression = common_2.readBracketDisambiguation(state, parser, [\r\n                \"FieldProjection\" /* FieldProjection */,\r\n                \"FieldSelection\" /* FieldSelection */,\r\n                \"Record\" /* Record */,\r\n            ]);\r\n            break;\r\n        case \"LeftBrace\" /* LeftBrace */:\r\n            maybePrimaryExpression = _1.Naive.readListExpression(state, parser);\r\n            break;\r\n        case \"Ellipsis\" /* Ellipsis */:\r\n            maybePrimaryExpression = _1.Naive.readNotImplementedExpression(state, parser);\r\n            break;\r\n        // LiteralExpression\r\n        case \"HexLiteral\" /* HexLiteral */:\r\n        case \"KeywordFalse\" /* KeywordFalse */:\r\n        case \"KeywordTrue\" /* KeywordTrue */:\r\n        case \"NumericLiteral\" /* NumericLiteral */:\r\n        case \"NullLiteral\" /* NullLiteral */:\r\n        case \"StringLiteral\" /* StringLiteral */:\r\n            return _1.Naive.readLiteralExpression(state, parser);\r\n        // TypeExpression\r\n        case \"KeywordType\" /* KeywordType */:\r\n            return _1.Naive.readTypeExpression(state, parser);\r\n        case \"KeywordHashSections\" /* KeywordHashSections */:\r\n        case \"KeywordHashShared\" /* KeywordHashShared */:\r\n        case \"KeywordHashBinary\" /* KeywordHashBinary */:\r\n        case \"KeywordHashDate\" /* KeywordHashDate */:\r\n        case \"KeywordHashDateTime\" /* KeywordHashDateTime */:\r\n        case \"KeywordHashDateTimeZone\" /* KeywordHashDateTimeZone */:\r\n        case \"KeywordHashDuration\" /* KeywordHashDuration */:\r\n        case \"KeywordHashTable\" /* KeywordHashTable */:\r\n        case \"KeywordHashTime\" /* KeywordHashTime */:\r\n            maybePrimaryExpression = parser.readKeyword(state, parser);\r\n            break;\r\n        // Let Naive throw an error.\r\n        default:\r\n            return _1.Naive.readUnaryExpression(state, parser);\r\n    }\r\n    // We should only reach this code block if a primary expression was read.\r\n    const primaryExpression = maybePrimaryExpression;\r\n    if (IParserState_1.IParserStateUtils.isRecursivePrimaryExpressionNext(state, state.tokenIndex)) {\r\n        return parser.readRecursivePrimaryExpression(state, parser, primaryExpression);\r\n    }\r\n    else {\r\n        return primaryExpression;\r\n    }\r\n}\r\n//# sourceMappingURL=combinatorialParser.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst common_1 = require(\"../../common\");\r\nconst IParserState_1 = require(\"../IParserState\");\r\nfunction readToken(state) {\r\n    const tokens = state.lexerSnapshot.tokens;\r\n    if (state.tokenIndex >= tokens.length) {\r\n        const details = {\r\n            tokenIndex: state.tokenIndex,\r\n            \"tokens.length\": tokens.length,\r\n        };\r\n        throw new common_1.CommonError.InvariantError(\"index beyond tokens.length\", details);\r\n    }\r\n    const data = tokens[state.tokenIndex].data;\r\n    state.tokenIndex += 1;\r\n    if (state.tokenIndex === tokens.length) {\r\n        state.maybeCurrentTokenKind = undefined;\r\n    }\r\n    else {\r\n        state.maybeCurrentToken = tokens[state.tokenIndex];\r\n        state.maybeCurrentTokenKind = state.maybeCurrentToken.kind;\r\n    }\r\n    return data;\r\n}\r\nexports.readToken = readToken;\r\nfunction readTokenKindAsConstant(state, tokenKind, constantKind) {\r\n    IParserState_1.IParserStateUtils.startContext(state, \"Constant\" /* Constant */);\r\n    const maybeErr = IParserState_1.IParserStateUtils.testIsOnTokenKind(state, tokenKind);\r\n    if (maybeErr !== undefined) {\r\n        throw maybeErr;\r\n    }\r\n    const tokenData = readToken(state);\r\n    if (tokenData !== constantKind) {\r\n        const details = {\r\n            tokenData,\r\n            constantKind,\r\n        };\r\n        throw new common_1.CommonError.InvariantError(\"expected tokenData to be equal to constantKind\", details);\r\n    }\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: \"Constant\" /* Constant */, isLeaf: true, constantKind });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readTokenKindAsConstant = readTokenKindAsConstant;\r\nfunction maybeReadTokenKindAsConstant(state, tokenKind, constantKind) {\r\n    if (IParserState_1.IParserStateUtils.isOnTokenKind(state, tokenKind)) {\r\n        const nodeKind = \"Constant\" /* Constant */;\r\n        IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n        const tokenData = readToken(state);\r\n        if (tokenData !== constantKind) {\r\n            const details = {\r\n                tokenData,\r\n                constantKind,\r\n            };\r\n            throw new common_1.CommonError.InvariantError(\"expected tokenData to be equal to constantKind\", details);\r\n        }\r\n        const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: true, constantKind });\r\n        IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n        return astNode;\r\n    }\r\n    else {\r\n        IParserState_1.IParserStateUtils.incrementAttributeCounter(state);\r\n        return undefined;\r\n    }\r\n}\r\nexports.maybeReadTokenKindAsConstant = maybeReadTokenKindAsConstant;\r\nfunction readBracketDisambiguation(state, parser, allowedVariants) {\r\n    const triedDisambiguation = parser.disambiguateBracket(state, parser);\r\n    if (common_1.ResultUtils.isErr(triedDisambiguation)) {\r\n        throw triedDisambiguation.error;\r\n    }\r\n    const disambiguation = triedDisambiguation.value;\r\n    if (allowedVariants.indexOf(disambiguation) === -1) {\r\n        throw new common_1.CommonError.InvariantError(`grammar doesn't allow remaining BracketDisambiguation: ${disambiguation}`);\r\n    }\r\n    switch (disambiguation) {\r\n        case \"FieldProjection\" /* FieldProjection */:\r\n            return parser.readFieldProjection(state, parser);\r\n        case \"FieldSelection\" /* FieldSelection */:\r\n            return parser.readFieldSelection(state, parser);\r\n        case \"Record\" /* Record */:\r\n            return parser.readRecordExpression(state, parser);\r\n        default:\r\n            throw common_1.isNever(disambiguation);\r\n    }\r\n}\r\nexports.readBracketDisambiguation = readBracketDisambiguation;\r\n//# sourceMappingURL=common.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Naive = require(\"./naive\");\r\nexports.Naive = Naive;\r\nvar combinatorialParser_1 = require(\"./combinatorialParser\");\r\nexports.CombinatorialParser = combinatorialParser_1.CombinatorialParser;\r\nvar recursiveDescentParser_1 = require(\"./recursiveDescentParser\");\r\nexports.RecursiveDescentParser = recursiveDescentParser_1.RecursiveDescentParser;\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst __1 = require(\"..\");\r\nconst common_1 = require(\"../../common\");\r\nconst IParserState_1 = require(\"../IParserState\");\r\nconst nodeIdMap_1 = require(\"../nodeIdMap\");\r\nconst common_2 = require(\"./common\");\r\nconst GeneralizedIdentifierTerminatorTokenKinds = [\r\n    \"Comma\" /* Comma */,\r\n    \"Equal\" /* Equal */,\r\n    \"RightBracket\" /* RightBracket */,\r\n];\r\n// -------------------------------------------\r\n// ---------- // 12.1.6 Identifiers ----------\r\n// -------------------------------------------\r\nfunction readIdentifier(state, _parser) {\r\n    const nodeKind = \"Identifier\" /* Identifier */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const literal = readTokenKind(state, \"Identifier\" /* Identifier */);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: true, literal });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readIdentifier = readIdentifier;\r\n// This behavior matches the C# parser and not the language specification.\r\nfunction readGeneralizedIdentifier(state, _parser) {\r\n    const nodeKind = \"GeneralizedIdentifier\" /* GeneralizedIdentifier */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    let literal;\r\n    let astNode;\r\n    const tokenRangeStartIndex = state.tokenIndex;\r\n    let tokenRangeEndIndex = tokenRangeStartIndex;\r\n    while (state.maybeCurrentTokenKind &&\r\n        GeneralizedIdentifierTerminatorTokenKinds.indexOf(state.maybeCurrentTokenKind) === -1) {\r\n        common_2.readToken(state);\r\n        tokenRangeEndIndex = state.tokenIndex;\r\n    }\r\n    if (tokenRangeStartIndex === tokenRangeEndIndex) {\r\n        throw new __1.ParseError.ExpectedGeneralizedIdentifierError(state.localizationTemplates, IParserState_1.IParserStateUtils.maybeTokenWithColumnNumber(state, state.tokenIndex + 1));\r\n    }\r\n    const lexerSnapshot = state.lexerSnapshot;\r\n    const tokens = lexerSnapshot.tokens;\r\n    const contiguousIdentifierStartIndex = tokens[tokenRangeStartIndex].positionStart.codeUnit;\r\n    const contiguousIdentifierEndIndex = tokens[tokenRangeEndIndex - 1].positionEnd.codeUnit;\r\n    literal = lexerSnapshot.text.slice(contiguousIdentifierStartIndex, contiguousIdentifierEndIndex);\r\n    astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: true, literal });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readGeneralizedIdentifier = readGeneralizedIdentifier;\r\nfunction readKeyword(state, _parser) {\r\n    const identifierExpressionNodeKind = \"IdentifierExpression\" /* IdentifierExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, identifierExpressionNodeKind);\r\n    // Keywords can't have a \"@\" prefix constant\r\n    IParserState_1.IParserStateUtils.incrementAttributeCounter(state);\r\n    const identifierNodeKind = \"Identifier\" /* Identifier */;\r\n    IParserState_1.IParserStateUtils.startContext(state, identifierNodeKind);\r\n    const literal = common_2.readToken(state);\r\n    const identifier = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: identifierNodeKind, isLeaf: true, literal });\r\n    IParserState_1.IParserStateUtils.endContext(state, identifier);\r\n    const identifierExpression = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: identifierExpressionNodeKind, isLeaf: false, maybeInclusiveConstant: undefined, identifier });\r\n    IParserState_1.IParserStateUtils.endContext(state, identifierExpression);\r\n    return identifierExpression;\r\n}\r\nexports.readKeyword = readKeyword;\r\n// --------------------------------------\r\n// ---------- 12.2.1 Documents ----------\r\n// --------------------------------------\r\nfunction readDocument(state, parser) {\r\n    let triedReadDocument;\r\n    // Try parsing as an Expression document first.\r\n    // If Expression document fails (including UnusedTokensRemainError) then try parsing a SectionDocument.\r\n    // If both fail then return the error which parsed more tokens.\r\n    try {\r\n        triedReadDocument = common_1.ResultUtils.okFactory(parser.readExpression(state, parser));\r\n        const maybeErr = IParserState_1.IParserStateUtils.testNoMoreTokens(state);\r\n        if (maybeErr) {\r\n            throw maybeErr;\r\n        }\r\n    }\r\n    catch (expressionError) {\r\n        // Fast backup deletes context state, but we want to preserve it for the case\r\n        // where both parsing an expression and section document error out.\r\n        const expressionErrorStateBackup = IParserState_1.IParserStateUtils.fastStateBackup(state);\r\n        const expressionErrorContextState = state.contextState;\r\n        // Reset the parser's state.\r\n        state.tokenIndex = 0;\r\n        state.contextState = __1.ParseContextUtils.newState();\r\n        state.maybeCurrentContextNode = undefined;\r\n        if (state.lexerSnapshot.tokens.length) {\r\n            state.maybeCurrentToken = state.lexerSnapshot.tokens[0];\r\n            state.maybeCurrentTokenKind = state.maybeCurrentToken.kind;\r\n        }\r\n        try {\r\n            triedReadDocument = common_1.ResultUtils.okFactory(readSectionDocument(state, parser));\r\n            const maybeErr = IParserState_1.IParserStateUtils.testNoMoreTokens(state);\r\n            if (maybeErr) {\r\n                throw maybeErr;\r\n            }\r\n        }\r\n        catch (sectionError) {\r\n            let triedError;\r\n            if (expressionErrorStateBackup.tokenIndex > /* sectionErrorState */ state.tokenIndex) {\r\n                triedError = expressionError;\r\n                IParserState_1.IParserStateUtils.applyFastStateBackup(state, expressionError);\r\n                state.contextState = expressionErrorContextState;\r\n            }\r\n            else {\r\n                triedError = sectionError;\r\n            }\r\n            triedReadDocument = common_1.ResultUtils.errFactory(triedError);\r\n        }\r\n    }\r\n    if (common_1.ResultUtils.isErr(triedReadDocument)) {\r\n        const currentError = triedReadDocument.error;\r\n        let convertedError;\r\n        if (__1.ParseError.isTInnerParseError(currentError)) {\r\n            convertedError = new __1.ParseError.ParseError(currentError, state);\r\n        }\r\n        else {\r\n            convertedError = common_1.CommonError.ensureCommonError(state.localizationTemplates, currentError);\r\n        }\r\n        return common_1.ResultUtils.errFactory(convertedError);\r\n    }\r\n    const document = triedReadDocument.value;\r\n    if (state.maybeCurrentContextNode !== undefined) {\r\n        const details = { maybeContextNode: state.maybeCurrentContextNode };\r\n        throw new common_1.CommonError.InvariantError(\"maybeContextNode should be falsey, there shouldn't be an open context\", details);\r\n    }\r\n    const contextState = state.contextState;\r\n    return common_1.ResultUtils.okFactory({\r\n        ast: document,\r\n        nodeIdMapCollection: contextState.nodeIdMapCollection,\r\n        leafNodeIds: contextState.leafNodeIds,\r\n        state,\r\n    });\r\n}\r\nexports.readDocument = readDocument;\r\n// ----------------------------------------------\r\n// ---------- 12.2.2 Section Documents ----------\r\n// ----------------------------------------------\r\nfunction readSectionDocument(state, parser) {\r\n    const nodeKind = \"Section\" /* Section */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const maybeLiteralAttributes = maybeReadLiteralAttributes(state, parser);\r\n    const sectionConstant = common_2.readTokenKindAsConstant(state, \"KeywordSection\" /* KeywordSection */, \"section\" /* Section */);\r\n    let maybeName;\r\n    if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"Identifier\" /* Identifier */)) {\r\n        maybeName = parser.readIdentifier(state, parser);\r\n    }\r\n    else {\r\n        IParserState_1.IParserStateUtils.incrementAttributeCounter(state);\r\n    }\r\n    const semicolonConstant = common_2.readTokenKindAsConstant(state, \"Semicolon\" /* Semicolon */, \";\" /* Semicolon */);\r\n    const sectionMembers = parser.readSectionMembers(state, parser);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, maybeLiteralAttributes,\r\n        sectionConstant,\r\n        maybeName,\r\n        semicolonConstant,\r\n        sectionMembers });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readSectionDocument = readSectionDocument;\r\nfunction readSectionMembers(state, parser) {\r\n    const nodeKind = \"ArrayWrapper\" /* ArrayWrapper */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const totalTokens = state.lexerSnapshot.tokens.length;\r\n    const sectionMembers = [];\r\n    while (state.tokenIndex < totalTokens) {\r\n        sectionMembers.push(parser.readSectionMember(state, parser));\r\n    }\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, elements: sectionMembers });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readSectionMembers = readSectionMembers;\r\nfunction readSectionMember(state, parser) {\r\n    const nodeKind = \"SectionMember\" /* SectionMember */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const maybeLiteralAttributes = maybeReadLiteralAttributes(state, parser);\r\n    const maybeSharedConstant = common_2.maybeReadTokenKindAsConstant(state, \"KeywordShared\" /* KeywordShared */, \"shared\" /* Shared */);\r\n    const namePairedExpression = parser.readIdentifierPairedExpression(state, parser);\r\n    const semicolonConstant = common_2.readTokenKindAsConstant(state, \"Semicolon\" /* Semicolon */, \";\" /* Semicolon */);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, maybeLiteralAttributes,\r\n        maybeSharedConstant,\r\n        namePairedExpression,\r\n        semicolonConstant });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readSectionMember = readSectionMember;\r\n// ------------------------------------------\r\n// ---------- 12.2.3.1 Expressions ----------\r\n// ------------------------------------------\r\nfunction readExpression(state, parser) {\r\n    switch (state.maybeCurrentTokenKind) {\r\n        case \"KeywordEach\" /* KeywordEach */:\r\n            return parser.readEachExpression(state, parser);\r\n        case \"KeywordLet\" /* KeywordLet */:\r\n            return parser.readLetExpression(state, parser);\r\n        case \"KeywordIf\" /* KeywordIf */:\r\n            return parser.readIfExpression(state, parser);\r\n        case \"KeywordError\" /* KeywordError */:\r\n            return parser.readErrorRaisingExpression(state, parser);\r\n        case \"KeywordTry\" /* KeywordTry */:\r\n            return parser.readErrorHandlingExpression(state, parser);\r\n        case \"LeftParenthesis\" /* LeftParenthesis */:\r\n            const triedDisambiguation = parser.disambiguateParenthesis(state, parser);\r\n            if (common_1.ResultUtils.isErr(triedDisambiguation)) {\r\n                throw triedDisambiguation.error;\r\n            }\r\n            const disambiguation = triedDisambiguation.value;\r\n            switch (disambiguation) {\r\n                case \"FunctionExpression\" /* FunctionExpression */:\r\n                    return parser.readFunctionExpression(state, parser);\r\n                case \"ParenthesizedExpression\" /* ParenthesizedExpression */:\r\n                    return parser.readLogicalExpression(state, parser);\r\n                default:\r\n                    throw common_1.isNever(disambiguation);\r\n            }\r\n        default:\r\n            return parser.readLogicalExpression(state, parser);\r\n    }\r\n}\r\nexports.readExpression = readExpression;\r\n// --------------------------------------------------\r\n// ---------- 12.2.3.2 Logical expressions ----------\r\n// --------------------------------------------------\r\nfunction readLogicalExpression(state, parser) {\r\n    return recursiveReadBinOpExpression(state, \"LogicalExpression\" /* LogicalExpression */, () => parser.readIsExpression(state, parser), maybeCurrentTokenKind => __1.AstUtils.maybeLogicalOperatorKindFrom(maybeCurrentTokenKind), () => parser.readIsExpression(state, parser));\r\n}\r\nexports.readLogicalExpression = readLogicalExpression;\r\n// --------------------------------------------\r\n// ---------- 12.2.3.3 Is expression ----------\r\n// --------------------------------------------\r\nfunction readIsExpression(state, parser) {\r\n    return recursiveReadBinOpExpression(state, \"IsExpression\" /* IsExpression */, () => parser.readAsExpression(state, parser), maybeCurrentTokenKind => maybeCurrentTokenKind === \"KeywordIs\" /* KeywordIs */ ? \"is\" /* Is */ : undefined, () => parser.readNullablePrimitiveType(state, parser));\r\n}\r\nexports.readIsExpression = readIsExpression;\r\n// sub-item of 12.2.3.3 Is expression\r\nfunction readNullablePrimitiveType(state, parser) {\r\n    if (IParserState_1.IParserStateUtils.isOnConstantKind(state, \"nullable\" /* Nullable */)) {\r\n        return readPairedConstant(state, \"NullablePrimitiveType\" /* NullablePrimitiveType */, () => readConstantKind(state, \"nullable\" /* Nullable */), () => parser.readPrimitiveType(state, parser));\r\n    }\r\n    else {\r\n        return parser.readPrimitiveType(state, parser);\r\n    }\r\n}\r\nexports.readNullablePrimitiveType = readNullablePrimitiveType;\r\n// --------------------------------------------\r\n// ---------- 12.2.3.4 As expression ----------\r\n// --------------------------------------------\r\nfunction readAsExpression(state, parser) {\r\n    return recursiveReadBinOpExpression(state, \"AsExpression\" /* AsExpression */, () => parser.readEqualityExpression(state, parser), maybeCurrentTokenKind => maybeCurrentTokenKind === \"KeywordAs\" /* KeywordAs */ ? \"as\" /* As */ : undefined, () => parser.readNullablePrimitiveType(state, parser));\r\n}\r\nexports.readAsExpression = readAsExpression;\r\n// --------------------------------------------------\r\n// ---------- 12.2.3.5 Equality expression ----------\r\n// --------------------------------------------------\r\nfunction readEqualityExpression(state, parser) {\r\n    return recursiveReadBinOpExpression(state, \"EqualityExpression\" /* EqualityExpression */, () => parser.readRelationalExpression(state, parser), maybeCurrentTokenKind => __1.AstUtils.maybeEqualityOperatorKindFrom(maybeCurrentTokenKind), () => parser.readRelationalExpression(state, parser));\r\n}\r\nexports.readEqualityExpression = readEqualityExpression;\r\n// ----------------------------------------------------\r\n// ---------- 12.2.3.6 Relational expression ----------\r\n// ----------------------------------------------------\r\nfunction readRelationalExpression(state, parser) {\r\n    return recursiveReadBinOpExpression(state, \"RelationalExpression\" /* RelationalExpression */, () => parser.readArithmeticExpression(state, parser), maybeCurrentTokenKind => __1.AstUtils.maybeRelationalOperatorKindFrom(maybeCurrentTokenKind), () => parser.readArithmeticExpression(state, parser));\r\n}\r\nexports.readRelationalExpression = readRelationalExpression;\r\n// -----------------------------------------------------\r\n// ---------- 12.2.3.7 Arithmetic expressions ----------\r\n// -----------------------------------------------------\r\nfunction readArithmeticExpression(state, parser) {\r\n    return recursiveReadBinOpExpression(state, \"ArithmeticExpression\" /* ArithmeticExpression */, () => parser.readMetadataExpression(state, parser), maybeCurrentTokenKind => __1.AstUtils.maybeArithmeticOperatorKindFrom(maybeCurrentTokenKind), () => parser.readMetadataExpression(state, parser));\r\n}\r\nexports.readArithmeticExpression = readArithmeticExpression;\r\n// --------------------------------------------------\r\n// ---------- 12.2.3.8 Metadata expression ----------\r\n// --------------------------------------------------\r\nfunction readMetadataExpression(state, parser) {\r\n    const nodeKind = \"MetadataExpression\" /* MetadataExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const left = parser.readUnaryExpression(state, parser);\r\n    const maybeMetaConstant = common_2.maybeReadTokenKindAsConstant(state, \"KeywordMeta\" /* KeywordMeta */, \"meta\" /* Meta */);\r\n    if (maybeMetaConstant !== undefined) {\r\n        const operatorConstant = maybeMetaConstant;\r\n        const right = parser.readUnaryExpression(state, parser);\r\n        const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, left,\r\n            operatorConstant,\r\n            right });\r\n        IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n        return astNode;\r\n    }\r\n    else {\r\n        IParserState_1.IParserStateUtils.deleteContext(state, undefined);\r\n        return left;\r\n    }\r\n}\r\nexports.readMetadataExpression = readMetadataExpression;\r\n// -----------------------------------------------\r\n// ---------- 12.2.3.9 Unary expression ----------\r\n// -----------------------------------------------\r\nfunction readUnaryExpression(state, parser) {\r\n    let maybeOperator = __1.AstUtils.maybeUnaryOperatorKindFrom(state.maybeCurrentTokenKind);\r\n    if (maybeOperator === undefined) {\r\n        return parser.readTypeExpression(state, parser);\r\n    }\r\n    const unaryNodeKind = \"UnaryExpression\" /* UnaryExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, unaryNodeKind);\r\n    const arrayNodeKind = \"ArrayWrapper\" /* ArrayWrapper */;\r\n    IParserState_1.IParserStateUtils.startContext(state, arrayNodeKind);\r\n    const operatorConstants = [];\r\n    while (maybeOperator) {\r\n        operatorConstants.push(common_2.readTokenKindAsConstant(state, state.maybeCurrentTokenKind, maybeOperator));\r\n        maybeOperator = __1.AstUtils.maybeUnaryOperatorKindFrom(state.maybeCurrentTokenKind);\r\n    }\r\n    const operators = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: arrayNodeKind, isLeaf: false, elements: operatorConstants });\r\n    IParserState_1.IParserStateUtils.endContext(state, operators);\r\n    const typeExpression = parser.readTypeExpression(state, parser);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: unaryNodeKind, isLeaf: false, operators,\r\n        typeExpression });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readUnaryExpression = readUnaryExpression;\r\n// --------------------------------------------------\r\n// ---------- 12.2.3.10 Primary expression ----------\r\n// --------------------------------------------------\r\nfunction readPrimaryExpression(state, parser) {\r\n    let primaryExpression;\r\n    const maybeCurrentTokenKind = state.maybeCurrentTokenKind;\r\n    const isIdentifierExpressionNext = maybeCurrentTokenKind === \"AtSign\" /* AtSign */ || maybeCurrentTokenKind === \"Identifier\" /* Identifier */;\r\n    if (isIdentifierExpressionNext) {\r\n        primaryExpression = parser.readIdentifierExpression(state, parser);\r\n    }\r\n    else {\r\n        switch (maybeCurrentTokenKind) {\r\n            case \"LeftParenthesis\" /* LeftParenthesis */:\r\n                primaryExpression = parser.readParenthesizedExpression(state, parser);\r\n                break;\r\n            case \"LeftBracket\" /* LeftBracket */:\r\n                primaryExpression = common_2.readBracketDisambiguation(state, parser, [\r\n                    \"FieldProjection\" /* FieldProjection */,\r\n                    \"FieldSelection\" /* FieldSelection */,\r\n                    \"Record\" /* Record */,\r\n                ]);\r\n                break;\r\n            case \"LeftBrace\" /* LeftBrace */:\r\n                primaryExpression = parser.readListExpression(state, parser);\r\n                break;\r\n            case \"Ellipsis\" /* Ellipsis */:\r\n                primaryExpression = parser.readNotImplementedExpression(state, parser);\r\n                break;\r\n            case \"KeywordHashSections\" /* KeywordHashSections */:\r\n            case \"KeywordHashShared\" /* KeywordHashShared */:\r\n            case \"KeywordHashBinary\" /* KeywordHashBinary */:\r\n            case \"KeywordHashDate\" /* KeywordHashDate */:\r\n            case \"KeywordHashDateTime\" /* KeywordHashDateTime */:\r\n            case \"KeywordHashDateTimeZone\" /* KeywordHashDateTimeZone */:\r\n            case \"KeywordHashDuration\" /* KeywordHashDuration */:\r\n            case \"KeywordHashTable\" /* KeywordHashTable */:\r\n            case \"KeywordHashTime\" /* KeywordHashTime */:\r\n                primaryExpression = parser.readKeyword(state, parser);\r\n                break;\r\n            default:\r\n                primaryExpression = parser.readLiteralExpression(state, parser);\r\n        }\r\n    }\r\n    if (IParserState_1.IParserStateUtils.isRecursivePrimaryExpressionNext(state)) {\r\n        return parser.readRecursivePrimaryExpression(state, parser, primaryExpression);\r\n    }\r\n    else {\r\n        return primaryExpression;\r\n    }\r\n}\r\nexports.readPrimaryExpression = readPrimaryExpression;\r\nfunction readRecursivePrimaryExpression(state, parser, head) {\r\n    const nodeKind = \"RecursivePrimaryExpression\" /* RecursivePrimaryExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    // The head of the recursive primary expression is created before the recursive primary expression,\r\n    // meaning the parent/child mapping for contexts are in reverse order.\r\n    // The clean up for that happens here.\r\n    const nodeIdMapCollection = state.contextState.nodeIdMapCollection;\r\n    if (state.maybeCurrentContextNode === undefined) {\r\n        throw new common_1.CommonError.InvariantError(`maybeCurrentContextNode should be truthy`);\r\n    }\r\n    const currentContextNode = state.maybeCurrentContextNode;\r\n    const maybeHeadParentId = nodeIdMapCollection.parentIdById.get(head.id);\r\n    if (maybeHeadParentId !== undefined) {\r\n        const headParentId = maybeHeadParentId;\r\n        // Remove head as a child of its current parent.\r\n        const parentChildIds = nodeIdMap_1.NodeIdMapUtils.expectChildIds(nodeIdMapCollection.childIdsById, headParentId);\r\n        const replacementIndex = parentChildIds.indexOf(head.id);\r\n        if (replacementIndex === -1) {\r\n            const details = {\r\n                parentNodeId: headParentId,\r\n                childNodeId: head.id,\r\n            };\r\n            throw new common_1.CommonError.InvariantError(`node isn't a child of parentNode`, details);\r\n        }\r\n        nodeIdMapCollection.childIdsById.set(headParentId, [\r\n            ...parentChildIds.slice(0, replacementIndex),\r\n            ...parentChildIds.slice(replacementIndex + 1),\r\n        ]);\r\n    }\r\n    // Update mappings for head.\r\n    nodeIdMapCollection.astNodeById.set(head.id, head);\r\n    nodeIdMapCollection.parentIdById.set(head.id, currentContextNode.id);\r\n    // Mark head as a child of the recursive primary expression context (currentContextNode).\r\n    nodeIdMapCollection.childIdsById.set(currentContextNode.id, [head.id]);\r\n    // Update start positions for recursive primary expression context\r\n    const recursiveTokenIndexStart = head.tokenRange.tokenIndexStart;\r\n    const mutableContext = currentContextNode;\r\n    // UNSAFE MARKER\r\n    //\r\n    // Purpose of code block:\r\n    //      Shift the start of ParserContext from the default location (which doesn't include head),\r\n    //      to the left so that head is also included.\r\n    //\r\n    // Why are you trying to avoid a safer approach?\r\n    //      There isn't one? At least not without refactoring in ways which will make things messier.\r\n    //\r\n    // Why is it safe?\r\n    //      I'm only mutating start location in the recursive expression to one already parsed, the head.\r\n    mutableContext.maybeTokenStart = state.lexerSnapshot.tokens[recursiveTokenIndexStart];\r\n    mutableContext.tokenIndexStart = recursiveTokenIndexStart;\r\n    // Update attribute index for the head Ast.TNode\r\n    const mutableHead = head;\r\n    // UNSAFE MARKER\r\n    //\r\n    // Purpose of code block:\r\n    //      The head might not have `maybeAttributeIndex === 0` set.\r\n    //\r\n    // Why are you trying to avoid a safer approach?\r\n    //      Prevent the cost of a shallow copy.\r\n    //\r\n    // Why is it safe?\r\n    //      It's a shallow copy, plus one attribute change.\r\n    mutableHead.maybeAttributeIndex = 0;\r\n    // Begin normal parsing behavior.\r\n    const recursiveArrayNodeKind = \"ArrayWrapper\" /* ArrayWrapper */;\r\n    IParserState_1.IParserStateUtils.startContext(state, recursiveArrayNodeKind);\r\n    const recursiveExpressions = [];\r\n    let continueReadingValues = true;\r\n    while (continueReadingValues) {\r\n        const maybeCurrentTokenKind = state.maybeCurrentTokenKind;\r\n        if (maybeCurrentTokenKind === \"LeftParenthesis\" /* LeftParenthesis */) {\r\n            recursiveExpressions.push(parser.readInvokeExpression(state, parser));\r\n        }\r\n        else if (maybeCurrentTokenKind === \"LeftBrace\" /* LeftBrace */) {\r\n            recursiveExpressions.push(parser.readItemAccessExpression(state, parser));\r\n        }\r\n        else if (maybeCurrentTokenKind === \"LeftBracket\" /* LeftBracket */) {\r\n            const bracketExpression = common_2.readBracketDisambiguation(state, parser, [\r\n                \"FieldProjection\" /* FieldProjection */,\r\n                \"FieldSelection\" /* FieldSelection */,\r\n            ]);\r\n            recursiveExpressions.push(bracketExpression);\r\n        }\r\n        else {\r\n            continueReadingValues = false;\r\n        }\r\n    }\r\n    const recursiveArray = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: recursiveArrayNodeKind, isLeaf: false, elements: recursiveExpressions });\r\n    IParserState_1.IParserStateUtils.endContext(state, recursiveArray);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, head, recursiveExpressions: recursiveArray });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readRecursivePrimaryExpression = readRecursivePrimaryExpression;\r\n// --------------------------------------------------\r\n// ---------- 12.2.3.11 Literal expression ----------\r\n// --------------------------------------------------\r\nfunction readLiteralExpression(state, _parser) {\r\n    const nodeKind = \"LiteralExpression\" /* LiteralExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const expectedTokenKinds = [\r\n        \"HexLiteral\" /* HexLiteral */,\r\n        \"KeywordFalse\" /* KeywordFalse */,\r\n        \"KeywordHashInfinity\" /* KeywordHashInfinity */,\r\n        \"KeywordHashNan\" /* KeywordHashNan */,\r\n        \"KeywordTrue\" /* KeywordTrue */,\r\n        \"NumericLiteral\" /* NumericLiteral */,\r\n        \"NullLiteral\" /* NullLiteral */,\r\n        \"StringLiteral\" /* StringLiteral */,\r\n    ];\r\n    const maybeErr = IParserState_1.IParserStateUtils.testIsOnAnyTokenKind(state, expectedTokenKinds);\r\n    if (maybeErr) {\r\n        throw maybeErr;\r\n    }\r\n    const maybeLiteralKind = __1.AstUtils.maybeLiteralKindFrom(state.maybeCurrentTokenKind);\r\n    if (maybeLiteralKind === undefined) {\r\n        throw new common_1.CommonError.InvariantError(`couldn't convert TokenKind=${state.maybeCurrentTokenKind} into LiteralKind`);\r\n    }\r\n    const literal = common_2.readToken(state);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: true, literal: literal, literalKind: maybeLiteralKind });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readLiteralExpression = readLiteralExpression;\r\n// ---------------------------------------------------------------\r\n// ---------- 12.2.3.16 12.2.3.12 Identifier expression ----------\r\n// ---------------------------------------------------------------\r\nfunction readIdentifierExpression(state, parser) {\r\n    const nodeKind = \"IdentifierExpression\" /* IdentifierExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const maybeInclusiveConstant = common_2.maybeReadTokenKindAsConstant(state, \"AtSign\" /* AtSign */, \"@\" /* AtSign */);\r\n    const identifier = parser.readIdentifier(state, parser);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, maybeInclusiveConstant,\r\n        identifier });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readIdentifierExpression = readIdentifierExpression;\r\n// --------------------------------------------------------\r\n// ---------- 12.2.3.14 Parenthesized expression ----------\r\n// --------------------------------------------------------\r\nfunction readParenthesizedExpression(state, parser) {\r\n    return readWrapped(state, \"ParenthesizedExpression\" /* ParenthesizedExpression */, () => common_2.readTokenKindAsConstant(state, \"LeftParenthesis\" /* LeftParenthesis */, \"(\" /* LeftParenthesis */), () => parser.readExpression(state, parser), () => common_2.readTokenKindAsConstant(state, \"RightParenthesis\" /* RightParenthesis */, \")\" /* RightParenthesis */), false);\r\n}\r\nexports.readParenthesizedExpression = readParenthesizedExpression;\r\n// ----------------------------------------------------------\r\n// ---------- 12.2.3.15 Not-implemented expression ----------\r\n// ----------------------------------------------------------\r\nfunction readNotImplementedExpression(state, _parser) {\r\n    const nodeKind = \"NotImplementedExpression\" /* NotImplementedExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const ellipsisConstant = common_2.readTokenKindAsConstant(state, \"Ellipsis\" /* Ellipsis */, \"...\" /* Ellipsis */);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, ellipsisConstant });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readNotImplementedExpression = readNotImplementedExpression;\r\n// -------------------------------------------------\r\n// ---------- 12.2.3.16 Invoke expression ----------\r\n// -------------------------------------------------\r\nfunction readInvokeExpression(state, parser) {\r\n    const continueReadingValues = !IParserState_1.IParserStateUtils.isNextTokenKind(state, \"RightParenthesis\" /* RightParenthesis */);\r\n    return readWrapped(state, \"InvokeExpression\" /* InvokeExpression */, () => common_2.readTokenKindAsConstant(state, \"LeftParenthesis\" /* LeftParenthesis */, \"(\" /* LeftParenthesis */), () => \r\n    // The type inference in VSCode considers the lambda below a type error, but it compiles just fine.\r\n    // I'm adding an explicit type to stop it from (incorrectly) saying it's an error.\r\n    readCsvArray(state, () => parser.readExpression(state, parser), continueReadingValues, testCsvContinuationDanglingCommaForParenthesis), () => common_2.readTokenKindAsConstant(state, \"RightParenthesis\" /* RightParenthesis */, \")\" /* RightParenthesis */), false);\r\n}\r\nexports.readInvokeExpression = readInvokeExpression;\r\n// -----------------------------------------------\r\n// ---------- 12.2.3.17 List expression ----------\r\n// -----------------------------------------------\r\nfunction readListExpression(state, parser) {\r\n    const continueReadingValues = !IParserState_1.IParserStateUtils.isNextTokenKind(state, \"RightBrace\" /* RightBrace */);\r\n    return readWrapped(state, \"ListExpression\" /* ListExpression */, () => common_2.readTokenKindAsConstant(state, \"LeftBrace\" /* LeftBrace */, \"{\" /* LeftBrace */), () => readCsvArray(state, () => parser.readListItem(state, parser), continueReadingValues, testCsvContinuationDanglingCommaForBrace), () => common_2.readTokenKindAsConstant(state, \"RightBrace\" /* RightBrace */, \"}\" /* RightBrace */), false);\r\n}\r\nexports.readListExpression = readListExpression;\r\nfunction readListItem(state, parser) {\r\n    const nodeKind = \"RangeExpression\" /* RangeExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const left = parser.readExpression(state, parser);\r\n    if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"DotDot\" /* DotDot */)) {\r\n        const rangeConstant = common_2.readTokenKindAsConstant(state, \"DotDot\" /* DotDot */, \"..\" /* DotDot */);\r\n        const right = parser.readExpression(state, parser);\r\n        const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, left,\r\n            rangeConstant,\r\n            right });\r\n        IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n        return astNode;\r\n    }\r\n    else {\r\n        IParserState_1.IParserStateUtils.deleteContext(state, undefined);\r\n        return left;\r\n    }\r\n}\r\nexports.readListItem = readListItem;\r\n// -------------------------------------------------\r\n// ---------- 12.2.3.18 Record expression ----------\r\n// -------------------------------------------------\r\nfunction readRecordExpression(state, parser) {\r\n    const continueReadingValues = !IParserState_1.IParserStateUtils.isNextTokenKind(state, \"RightBracket\" /* RightBracket */);\r\n    return readWrapped(state, \"RecordExpression\" /* RecordExpression */, () => common_2.readTokenKindAsConstant(state, \"LeftBracket\" /* LeftBracket */, \"[\" /* LeftBracket */), () => parser.readGeneralizedIdentifierPairedExpressions(state, parser, continueReadingValues, testCsvContinuationDanglingCommaForBracket), () => common_2.readTokenKindAsConstant(state, \"RightBracket\" /* RightBracket */, \"]\" /* RightBracket */), false);\r\n}\r\nexports.readRecordExpression = readRecordExpression;\r\n// ------------------------------------------------------\r\n// ---------- 12.2.3.19 Item access expression ----------\r\n// ------------------------------------------------------\r\nfunction readItemAccessExpression(state, parser) {\r\n    return readWrapped(state, \"ItemAccessExpression\" /* ItemAccessExpression */, () => common_2.readTokenKindAsConstant(state, \"LeftBrace\" /* LeftBrace */, \"{\" /* LeftBrace */), () => parser.readExpression(state, parser), () => common_2.readTokenKindAsConstant(state, \"RightBrace\" /* RightBrace */, \"}\" /* RightBrace */), true);\r\n}\r\nexports.readItemAccessExpression = readItemAccessExpression;\r\n// -------------------------------------------------------\r\n// ---------- 12.2.3.20 Field access expression ----------\r\n// -------------------------------------------------------\r\nfunction readFieldSelection(state, parser) {\r\n    return readFieldSelector(state, parser, true);\r\n}\r\nexports.readFieldSelection = readFieldSelection;\r\nfunction readFieldProjection(state, parser) {\r\n    return readWrapped(state, \"FieldProjection\" /* FieldProjection */, () => common_2.readTokenKindAsConstant(state, \"LeftBracket\" /* LeftBracket */, \"[\" /* LeftBracket */), () => readCsvArray(state, () => parser.readFieldSelector(state, parser, false), true, testCsvContinuationDanglingCommaForBracket), () => common_2.readTokenKindAsConstant(state, \"RightBracket\" /* RightBracket */, \"]\" /* RightBracket */), true);\r\n}\r\nexports.readFieldProjection = readFieldProjection;\r\nfunction readFieldSelector(state, parser, allowOptional) {\r\n    return readWrapped(state, \"FieldSelector\" /* FieldSelector */, () => common_2.readTokenKindAsConstant(state, \"LeftBracket\" /* LeftBracket */, \"[\" /* LeftBracket */), () => parser.readGeneralizedIdentifier(state, parser), () => common_2.readTokenKindAsConstant(state, \"RightBracket\" /* RightBracket */, \"]\" /* RightBracket */), allowOptional);\r\n}\r\nexports.readFieldSelector = readFieldSelector;\r\n// ---------------------------------------------------\r\n// ---------- 12.2.3.21 Function expression ----------\r\n// ---------------------------------------------------\r\nfunction readFunctionExpression(state, parser) {\r\n    const nodeKind = \"FunctionExpression\" /* FunctionExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const parameters = parser.readParameterList(state, parser);\r\n    const maybeFunctionReturnType = maybeReadAsNullablePrimitiveType(state, parser);\r\n    const fatArrowConstant = common_2.readTokenKindAsConstant(state, \"FatArrow\" /* FatArrow */, \"=>\" /* FatArrow */);\r\n    const expression = parser.readExpression(state, parser);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, parameters,\r\n        maybeFunctionReturnType,\r\n        fatArrowConstant,\r\n        expression });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readFunctionExpression = readFunctionExpression;\r\nfunction readParameterList(state, parser) {\r\n    return genericReadParameterList(state, parser, () => maybeReadAsNullablePrimitiveType(state, parser));\r\n}\r\nexports.readParameterList = readParameterList;\r\nfunction maybeReadAsNullablePrimitiveType(state, parser) {\r\n    return maybeReadPairedConstant(state, \"AsNullablePrimitiveType\" /* AsNullablePrimitiveType */, () => IParserState_1.IParserStateUtils.isOnTokenKind(state, \"KeywordAs\" /* KeywordAs */), () => common_2.readTokenKindAsConstant(state, \"KeywordAs\" /* KeywordAs */, \"as\" /* As */), () => parser.readNullablePrimitiveType(state, parser));\r\n}\r\nfunction readAsType(state, parser) {\r\n    return readPairedConstant(state, \"AsType\" /* AsType */, () => common_2.readTokenKindAsConstant(state, \"KeywordAs\" /* KeywordAs */, \"as\" /* As */), () => parser.readType(state, parser));\r\n}\r\nexports.readAsType = readAsType;\r\n// -----------------------------------------------\r\n// ---------- 12.2.3.22 Each expression ----------\r\n// -----------------------------------------------\r\nfunction readEachExpression(state, parser) {\r\n    return readPairedConstant(state, \"EachExpression\" /* EachExpression */, () => common_2.readTokenKindAsConstant(state, \"KeywordEach\" /* KeywordEach */, \"each\" /* Each */), () => parser.readExpression(state, parser));\r\n}\r\nexports.readEachExpression = readEachExpression;\r\n// ----------------------------------------------\r\n// ---------- 12.2.3.23 Let expression ----------\r\n// ----------------------------------------------\r\nfunction readLetExpression(state, parser) {\r\n    const nodeKind = \"LetExpression\" /* LetExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const letConstant = common_2.readTokenKindAsConstant(state, \"KeywordLet\" /* KeywordLet */, \"let\" /* Let */);\r\n    const identifierExpressionPairedExpressions = parser.readIdentifierPairedExpressions(state, parser, !IParserState_1.IParserStateUtils.isNextTokenKind(state, \"KeywordIn\" /* KeywordIn */), IParserState_1.IParserStateUtils.testCsvContinuationLetExpression);\r\n    const inConstant = common_2.readTokenKindAsConstant(state, \"KeywordIn\" /* KeywordIn */, \"in\" /* In */);\r\n    const expression = parser.readExpression(state, parser);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: \"LetExpression\" /* LetExpression */, isLeaf: false, letConstant, variableList: identifierExpressionPairedExpressions, inConstant,\r\n        expression });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readLetExpression = readLetExpression;\r\n// ---------------------------------------------\r\n// ---------- 12.2.3.24 If expression ----------\r\n// ---------------------------------------------\r\nfunction readIfExpression(state, parser) {\r\n    const nodeKind = \"IfExpression\" /* IfExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const ifConstant = common_2.readTokenKindAsConstant(state, \"KeywordIf\" /* KeywordIf */, \"if\" /* If */);\r\n    const condition = parser.readExpression(state, parser);\r\n    const thenConstant = common_2.readTokenKindAsConstant(state, \"KeywordThen\" /* KeywordThen */, \"then\" /* Then */);\r\n    const trueExpression = parser.readExpression(state, parser);\r\n    const elseConstant = common_2.readTokenKindAsConstant(state, \"KeywordElse\" /* KeywordElse */, \"else\" /* Else */);\r\n    const falseExpression = parser.readExpression(state, parser);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, ifConstant,\r\n        condition,\r\n        thenConstant,\r\n        trueExpression,\r\n        elseConstant,\r\n        falseExpression });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readIfExpression = readIfExpression;\r\n// -----------------------------------------------\r\n// ---------- 12.2.3.25 Type expression ----------\r\n// -----------------------------------------------\r\nfunction readTypeExpression(state, parser) {\r\n    if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"KeywordType\" /* KeywordType */)) {\r\n        return readPairedConstant(state, \"TypePrimaryType\" /* TypePrimaryType */, () => common_2.readTokenKindAsConstant(state, \"KeywordType\" /* KeywordType */, \"type\" /* Type */), () => parser.readPrimaryType(state, parser));\r\n    }\r\n    else {\r\n        return parser.readPrimaryExpression(state, parser);\r\n    }\r\n}\r\nexports.readTypeExpression = readTypeExpression;\r\nfunction readType(state, parser) {\r\n    const triedReadPrimaryType = tryReadPrimaryType(state, parser);\r\n    if (common_1.ResultUtils.isOk(triedReadPrimaryType)) {\r\n        return triedReadPrimaryType.value;\r\n    }\r\n    else {\r\n        return parser.readPrimaryExpression(state, parser);\r\n    }\r\n}\r\nexports.readType = readType;\r\nfunction readPrimaryType(state, parser) {\r\n    const triedReadPrimaryType = tryReadPrimaryType(state, parser);\r\n    if (common_1.ResultUtils.isOk(triedReadPrimaryType)) {\r\n        return triedReadPrimaryType.value;\r\n    }\r\n    else {\r\n        throw triedReadPrimaryType.error;\r\n    }\r\n}\r\nexports.readPrimaryType = readPrimaryType;\r\nfunction readRecordType(state, parser) {\r\n    const nodeKind = \"RecordType\" /* RecordType */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const fields = parser.readFieldSpecificationList(state, parser, true, testCsvContinuationDanglingCommaForBracket);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, fields });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readRecordType = readRecordType;\r\nfunction readTableType(state, parser) {\r\n    const nodeKind = \"TableType\" /* TableType */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const tableConstant = readConstantKind(state, \"table\" /* Table */);\r\n    const maybeCurrentTokenKind = state.maybeCurrentTokenKind;\r\n    const isPrimaryExpressionExpected = maybeCurrentTokenKind === \"AtSign\" /* AtSign */ ||\r\n        maybeCurrentTokenKind === \"Identifier\" /* Identifier */ ||\r\n        maybeCurrentTokenKind === \"LeftParenthesis\" /* LeftParenthesis */;\r\n    let rowType;\r\n    if (isPrimaryExpressionExpected) {\r\n        rowType = parser.readPrimaryExpression(state, parser);\r\n    }\r\n    else {\r\n        rowType = parser.readFieldSpecificationList(state, parser, false, testCsvContinuationDanglingCommaForBracket);\r\n    }\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, tableConstant,\r\n        rowType });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readTableType = readTableType;\r\nfunction readFieldSpecificationList(state, parser, allowOpenMarker, testPostCommaError) {\r\n    const nodeKind = \"FieldSpecificationList\" /* FieldSpecificationList */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const leftBracketConstant = common_2.readTokenKindAsConstant(state, \"LeftBracket\" /* LeftBracket */, \"[\" /* LeftBracket */);\r\n    const fields = [];\r\n    let continueReadingValues = true;\r\n    let maybeOpenRecordMarkerConstant = undefined;\r\n    const fieldArrayNodeKind = \"ArrayWrapper\" /* ArrayWrapper */;\r\n    IParserState_1.IParserStateUtils.startContext(state, fieldArrayNodeKind);\r\n    while (continueReadingValues) {\r\n        const maybeErr = testPostCommaError(state);\r\n        if (maybeErr) {\r\n            throw maybeErr;\r\n        }\r\n        if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"Ellipsis\" /* Ellipsis */)) {\r\n            if (allowOpenMarker) {\r\n                if (maybeOpenRecordMarkerConstant) {\r\n                    throw fieldSpecificationListReadError(state, false);\r\n                }\r\n                else {\r\n                    maybeOpenRecordMarkerConstant = common_2.readTokenKindAsConstant(state, \"Ellipsis\" /* Ellipsis */, \"...\" /* Ellipsis */);\r\n                    continueReadingValues = false;\r\n                }\r\n            }\r\n            else {\r\n                throw fieldSpecificationListReadError(state, allowOpenMarker);\r\n            }\r\n        }\r\n        else if (IParserState_1.IParserStateUtils.isOnGeneralizedIdentifierStart(state)) {\r\n            const csvNodeKind = \"Csv\" /* Csv */;\r\n            IParserState_1.IParserStateUtils.startContext(state, csvNodeKind);\r\n            const fieldSpecificationNodeKind = \"FieldSpecification\" /* FieldSpecification */;\r\n            IParserState_1.IParserStateUtils.startContext(state, fieldSpecificationNodeKind);\r\n            const maybeOptionalConstant = maybeReadConstantKind(state, \"optional\" /* Optional */);\r\n            const name = parser.readGeneralizedIdentifier(state, parser);\r\n            const maybeFieldTypeSpecification = maybeReadFieldTypeSpecification(state, parser);\r\n            const maybeCommaConstant = common_2.maybeReadTokenKindAsConstant(state, \"Comma\" /* Comma */, \",\" /* Comma */);\r\n            continueReadingValues = maybeCommaConstant !== undefined;\r\n            const field = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: fieldSpecificationNodeKind, isLeaf: false, maybeOptionalConstant,\r\n                name,\r\n                maybeFieldTypeSpecification });\r\n            IParserState_1.IParserStateUtils.endContext(state, field);\r\n            const csv = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: csvNodeKind, isLeaf: false, node: field, maybeCommaConstant });\r\n            IParserState_1.IParserStateUtils.endContext(state, csv);\r\n            fields.push(csv);\r\n        }\r\n        else {\r\n            throw fieldSpecificationListReadError(state, allowOpenMarker);\r\n        }\r\n    }\r\n    const fieldArray = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: fieldArrayNodeKind, elements: fields, isLeaf: false });\r\n    IParserState_1.IParserStateUtils.endContext(state, fieldArray);\r\n    const rightBracketConstant = common_2.readTokenKindAsConstant(state, \"RightBracket\" /* RightBracket */, \"]\" /* RightBracket */);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, openWrapperConstant: leftBracketConstant, content: fieldArray, maybeOpenRecordMarkerConstant, closeWrapperConstant: rightBracketConstant });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readFieldSpecificationList = readFieldSpecificationList;\r\nfunction maybeReadFieldTypeSpecification(state, parser) {\r\n    const nodeKind = \"FieldTypeSpecification\" /* FieldTypeSpecification */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const maybeEqualConstant = common_2.maybeReadTokenKindAsConstant(state, \"Equal\" /* Equal */, \"=\" /* Equal */);\r\n    if (maybeEqualConstant) {\r\n        const fieldType = parser.readType(state, parser);\r\n        const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: \"FieldTypeSpecification\" /* FieldTypeSpecification */, isLeaf: false, equalConstant: maybeEqualConstant, fieldType });\r\n        IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n        return astNode;\r\n    }\r\n    else {\r\n        IParserState_1.IParserStateUtils.incrementAttributeCounter(state);\r\n        IParserState_1.IParserStateUtils.deleteContext(state, undefined);\r\n        return undefined;\r\n    }\r\n}\r\nfunction fieldSpecificationListReadError(state, allowOpenMarker) {\r\n    if (allowOpenMarker) {\r\n        const expectedTokenKinds = [\"Identifier\" /* Identifier */, \"Ellipsis\" /* Ellipsis */];\r\n        return IParserState_1.IParserStateUtils.testIsOnAnyTokenKind(state, expectedTokenKinds);\r\n    }\r\n    else {\r\n        return IParserState_1.IParserStateUtils.testIsOnTokenKind(state, \"Identifier\" /* Identifier */);\r\n    }\r\n}\r\nfunction readListType(state, parser) {\r\n    return readWrapped(state, \"ListType\" /* ListType */, () => common_2.readTokenKindAsConstant(state, \"LeftBrace\" /* LeftBrace */, \"{\" /* LeftBrace */), () => parser.readType(state, parser), () => common_2.readTokenKindAsConstant(state, \"RightBrace\" /* RightBrace */, \"}\" /* RightBrace */), false);\r\n}\r\nexports.readListType = readListType;\r\nfunction readFunctionType(state, parser) {\r\n    const nodeKind = \"FunctionType\" /* FunctionType */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const functionConstant = readConstantKind(state, \"function\" /* Function */);\r\n    const parameters = parser.readParameterSpecificationList(state, parser);\r\n    const functionReturnType = parser.readAsType(state, parser);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, functionConstant,\r\n        parameters,\r\n        functionReturnType });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readFunctionType = readFunctionType;\r\nfunction tryReadPrimaryType(state, parser) {\r\n    const isTableTypeNext = IParserState_1.IParserStateUtils.isOnConstantKind(state, \"table\" /* Table */) &&\r\n        (IParserState_1.IParserStateUtils.isNextTokenKind(state, \"LeftBracket\" /* LeftBracket */) ||\r\n            IParserState_1.IParserStateUtils.isNextTokenKind(state, \"LeftParenthesis\" /* LeftParenthesis */) ||\r\n            IParserState_1.IParserStateUtils.isNextTokenKind(state, \"AtSign\" /* AtSign */) ||\r\n            IParserState_1.IParserStateUtils.isNextTokenKind(state, \"Identifier\" /* Identifier */));\r\n    const isFunctionTypeNext = IParserState_1.IParserStateUtils.isOnConstantKind(state, \"function\" /* Function */) &&\r\n        IParserState_1.IParserStateUtils.isNextTokenKind(state, \"LeftParenthesis\" /* LeftParenthesis */);\r\n    if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"LeftBracket\" /* LeftBracket */)) {\r\n        return common_1.ResultUtils.okFactory(parser.readRecordType(state, parser));\r\n    }\r\n    else if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"LeftBrace\" /* LeftBrace */)) {\r\n        return common_1.ResultUtils.okFactory(parser.readListType(state, parser));\r\n    }\r\n    else if (isTableTypeNext) {\r\n        return common_1.ResultUtils.okFactory(parser.readTableType(state, parser));\r\n    }\r\n    else if (isFunctionTypeNext) {\r\n        return common_1.ResultUtils.okFactory(parser.readFunctionType(state, parser));\r\n    }\r\n    else if (IParserState_1.IParserStateUtils.isOnConstantKind(state, \"nullable\" /* Nullable */)) {\r\n        return common_1.ResultUtils.okFactory(parser.readNullableType(state, parser));\r\n    }\r\n    else {\r\n        const stateBackup = IParserState_1.IParserStateUtils.fastStateBackup(state);\r\n        const triedReadPrimitiveType = tryReadPrimitiveType(state, parser);\r\n        if (common_1.ResultUtils.isErr(triedReadPrimitiveType)) {\r\n            IParserState_1.IParserStateUtils.applyFastStateBackup(state, stateBackup);\r\n        }\r\n        return triedReadPrimitiveType;\r\n    }\r\n}\r\nfunction readParameterSpecificationList(state, parser) {\r\n    return genericReadParameterList(state, parser, () => parser.readAsType(state, parser));\r\n}\r\nexports.readParameterSpecificationList = readParameterSpecificationList;\r\nfunction readNullableType(state, parser) {\r\n    return readPairedConstant(state, \"NullableType\" /* NullableType */, () => readConstantKind(state, \"nullable\" /* Nullable */), () => parser.readType(state, parser));\r\n}\r\nexports.readNullableType = readNullableType;\r\n// --------------------------------------------------------\r\n// ---------- 12.2.3.26 Error raising expression ----------\r\n// --------------------------------------------------------\r\nfunction readErrorRaisingExpression(state, parser) {\r\n    return readPairedConstant(state, \"ErrorRaisingExpression\" /* ErrorRaisingExpression */, () => common_2.readTokenKindAsConstant(state, \"KeywordError\" /* KeywordError */, \"error\" /* Error */), () => parser.readExpression(state, parser));\r\n}\r\nexports.readErrorRaisingExpression = readErrorRaisingExpression;\r\n// ---------------------------------------------------------\r\n// ---------- 12.2.3.27 Error handling expression ----------\r\n// ---------------------------------------------------------\r\nfunction readErrorHandlingExpression(state, parser) {\r\n    const nodeKind = \"ErrorHandlingExpression\" /* ErrorHandlingExpression */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const tryConstant = common_2.readTokenKindAsConstant(state, \"KeywordTry\" /* KeywordTry */, \"try\" /* Try */);\r\n    const protectedExpression = parser.readExpression(state, parser);\r\n    const otherwiseExpressionNodeKind = \"OtherwiseExpression\" /* OtherwiseExpression */;\r\n    const maybeOtherwiseExpression = maybeReadPairedConstant(state, otherwiseExpressionNodeKind, () => IParserState_1.IParserStateUtils.isOnTokenKind(state, \"KeywordOtherwise\" /* KeywordOtherwise */), () => common_2.readTokenKindAsConstant(state, \"KeywordOtherwise\" /* KeywordOtherwise */, \"otherwise\" /* Otherwise */), () => parser.readExpression(state, parser));\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, tryConstant,\r\n        protectedExpression,\r\n        maybeOtherwiseExpression });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nexports.readErrorHandlingExpression = readErrorHandlingExpression;\r\n// -----------------------------------------------\r\n// ---------- 12.2.4 Literal Attributes ----------\r\n// -----------------------------------------------\r\nfunction readRecordLiteral(state, parser) {\r\n    const continueReadingValues = !IParserState_1.IParserStateUtils.isNextTokenKind(state, \"RightBracket\" /* RightBracket */);\r\n    const wrappedRead = readWrapped(state, \"RecordLiteral\" /* RecordLiteral */, () => common_2.readTokenKindAsConstant(state, \"LeftBracket\" /* LeftBracket */, \"[\" /* LeftBracket */), () => parser.readFieldNamePairedAnyLiterals(state, parser, continueReadingValues, testCsvContinuationDanglingCommaForBracket), () => common_2.readTokenKindAsConstant(state, \"RightBracket\" /* RightBracket */, \"]\" /* RightBracket */), false);\r\n    return Object.assign({ literalKind: \"Record\" /* Record */ }, wrappedRead);\r\n}\r\nexports.readRecordLiteral = readRecordLiteral;\r\nfunction readFieldNamePairedAnyLiterals(state, parser, continueReadingValues, testPostCommaError) {\r\n    return readCsvArray(state, () => readKeyValuePair(state, \"GeneralizedIdentifierPairedAnyLiteral\" /* GeneralizedIdentifierPairedAnyLiteral */, () => parser.readGeneralizedIdentifier(state, parser), () => parser.readAnyLiteral(state, parser)), continueReadingValues, testPostCommaError);\r\n}\r\nexports.readFieldNamePairedAnyLiterals = readFieldNamePairedAnyLiterals;\r\nfunction readListLiteral(state, parser) {\r\n    const continueReadingValues = !IParserState_1.IParserStateUtils.isNextTokenKind(state, \"RightBrace\" /* RightBrace */);\r\n    const wrappedRead = readWrapped(state, \"ListLiteral\" /* ListLiteral */, () => common_2.readTokenKindAsConstant(state, \"LeftBrace\" /* LeftBrace */, \"{\" /* LeftBrace */), () => readCsvArray(state, () => parser.readAnyLiteral(state, parser), continueReadingValues, testCsvContinuationDanglingCommaForBrace), () => common_2.readTokenKindAsConstant(state, \"RightBrace\" /* RightBrace */, \"}\" /* RightBrace */), false);\r\n    return Object.assign({ literalKind: \"List\" /* List */ }, wrappedRead);\r\n}\r\nexports.readListLiteral = readListLiteral;\r\nfunction readAnyLiteral(state, parser) {\r\n    if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"LeftBracket\" /* LeftBracket */)) {\r\n        return parser.readRecordLiteral(state, parser);\r\n    }\r\n    else if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"LeftBrace\" /* LeftBrace */)) {\r\n        return parser.readListLiteral(state, parser);\r\n    }\r\n    else {\r\n        return parser.readLiteralExpression(state, parser);\r\n    }\r\n}\r\nexports.readAnyLiteral = readAnyLiteral;\r\nfunction readPrimitiveType(state, parser) {\r\n    const triedReadPrimitiveType = tryReadPrimitiveType(state, parser);\r\n    if (common_1.ResultUtils.isOk(triedReadPrimitiveType)) {\r\n        return triedReadPrimitiveType.value;\r\n    }\r\n    else {\r\n        throw triedReadPrimitiveType.error;\r\n    }\r\n}\r\nexports.readPrimitiveType = readPrimitiveType;\r\nfunction tryReadPrimitiveType(state, _parser) {\r\n    const nodeKind = \"PrimitiveType\" /* PrimitiveType */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const stateBackup = IParserState_1.IParserStateUtils.fastStateBackup(state);\r\n    const expectedTokenKinds = [\r\n        \"Identifier\" /* Identifier */,\r\n        \"KeywordType\" /* KeywordType */,\r\n        \"NullLiteral\" /* NullLiteral */,\r\n    ];\r\n    const maybeErr = IParserState_1.IParserStateUtils.testIsOnAnyTokenKind(state, expectedTokenKinds);\r\n    if (maybeErr) {\r\n        const error = maybeErr;\r\n        return common_1.ResultUtils.errFactory(error);\r\n    }\r\n    let primitiveType;\r\n    if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"Identifier\" /* Identifier */)) {\r\n        const currentTokenData = state.lexerSnapshot.tokens[state.tokenIndex].data;\r\n        switch (currentTokenData) {\r\n            case \"action\" /* Action */:\r\n            case \"any\" /* Any */:\r\n            case \"anynonnull\" /* AnyNonNull */:\r\n            case \"binary\" /* Binary */:\r\n            case \"date\" /* Date */:\r\n            case \"datetime\" /* DateTime */:\r\n            case \"datetimezone\" /* DateTimeZone */:\r\n            case \"duration\" /* Duration */:\r\n            case \"function\" /* Function */:\r\n            case \"list\" /* List */:\r\n            case \"logical\" /* Logical */:\r\n            case \"none\" /* None */:\r\n            case \"number\" /* Number */:\r\n            case \"record\" /* Record */:\r\n            case \"table\" /* Table */:\r\n            case \"text\" /* Text */:\r\n            case \"time\" /* Time */:\r\n                primitiveType = readConstantKind(state, currentTokenData);\r\n                break;\r\n            default:\r\n                const token = IParserState_1.IParserStateUtils.expectTokenAt(state, state.tokenIndex);\r\n                IParserState_1.IParserStateUtils.applyFastStateBackup(state, stateBackup);\r\n                return common_1.ResultUtils.errFactory(new __1.ParseError.InvalidPrimitiveTypeError(state.localizationTemplates, token, state.lexerSnapshot.graphemePositionStartFrom(token)));\r\n        }\r\n    }\r\n    else if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"KeywordType\" /* KeywordType */)) {\r\n        primitiveType = common_2.readTokenKindAsConstant(state, \"KeywordType\" /* KeywordType */, \"type\" /* Type */);\r\n    }\r\n    else if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"NullLiteral\" /* NullLiteral */)) {\r\n        primitiveType = common_2.readTokenKindAsConstant(state, \"NullLiteral\" /* NullLiteral */, \"null\" /* Null */);\r\n    }\r\n    else {\r\n        const details = { tokenKind: state.maybeCurrentTokenKind };\r\n        IParserState_1.IParserStateUtils.applyFastStateBackup(state, stateBackup);\r\n        return common_1.ResultUtils.errFactory(new common_1.CommonError.InvariantError(`unknown currentTokenKind, not found in [${expectedTokenKinds}]`, details));\r\n    }\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, primitiveType });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return common_1.ResultUtils.okFactory(astNode);\r\n}\r\n// ------------------------------------\r\n// ---------- Disambiguation ----------\r\n// ------------------------------------\r\nfunction disambiguateParenthesis(state, parser) {\r\n    const initialTokenIndex = state.tokenIndex;\r\n    const tokens = state.lexerSnapshot.tokens;\r\n    const totalTokens = tokens.length;\r\n    let nestedDepth = 1;\r\n    let offsetTokenIndex = initialTokenIndex + 1;\r\n    while (offsetTokenIndex < totalTokens) {\r\n        const offsetTokenKind = tokens[offsetTokenIndex].kind;\r\n        if (offsetTokenKind === \"LeftParenthesis\" /* LeftParenthesis */) {\r\n            nestedDepth += 1;\r\n        }\r\n        else if (offsetTokenKind === \"RightParenthesis\" /* RightParenthesis */) {\r\n            nestedDepth -= 1;\r\n        }\r\n        if (nestedDepth === 0) {\r\n            // '(x as number) as number' could either be either case,\r\n            // so we need to consume test if the trailing 'as number' is followed by a FatArrow.\r\n            if (IParserState_1.IParserStateUtils.isTokenKind(state, \"KeywordAs\" /* KeywordAs */, offsetTokenIndex + 1)) {\r\n                const stateBackup = IParserState_1.IParserStateUtils.fastStateBackup(state);\r\n                unsafeMoveTo(state, offsetTokenIndex + 2);\r\n                try {\r\n                    parser.readNullablePrimitiveType(state, parser);\r\n                }\r\n                catch (_a) {\r\n                    IParserState_1.IParserStateUtils.applyFastStateBackup(state, stateBackup);\r\n                    if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"FatArrow\" /* FatArrow */)) {\r\n                        return common_1.ResultUtils.okFactory(\"FunctionExpression\" /* FunctionExpression */);\r\n                    }\r\n                    else {\r\n                        return common_1.ResultUtils.okFactory(\"ParenthesizedExpression\" /* ParenthesizedExpression */);\r\n                    }\r\n                }\r\n                let disambiguation;\r\n                if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"FatArrow\" /* FatArrow */)) {\r\n                    disambiguation = \"FunctionExpression\" /* FunctionExpression */;\r\n                }\r\n                else {\r\n                    disambiguation = \"ParenthesizedExpression\" /* ParenthesizedExpression */;\r\n                }\r\n                IParserState_1.IParserStateUtils.applyFastStateBackup(state, stateBackup);\r\n                return common_1.ResultUtils.okFactory(disambiguation);\r\n            }\r\n            else {\r\n                if (IParserState_1.IParserStateUtils.isTokenKind(state, \"FatArrow\" /* FatArrow */, offsetTokenIndex + 1)) {\r\n                    return common_1.ResultUtils.okFactory(\"FunctionExpression\" /* FunctionExpression */);\r\n                }\r\n                else {\r\n                    return common_1.ResultUtils.okFactory(\"ParenthesizedExpression\" /* ParenthesizedExpression */);\r\n                }\r\n            }\r\n        }\r\n        offsetTokenIndex += 1;\r\n    }\r\n    return common_1.ResultUtils.errFactory(IParserState_1.IParserStateUtils.unterminatedParenthesesError(state));\r\n}\r\nexports.disambiguateParenthesis = disambiguateParenthesis;\r\n// WARNING: Only updates tokenIndex and currentTokenKind,\r\n//          Manual management of TokenRangeStack is assumed.\r\n//          Best used in conjunction with backup/restore using ParserState.\r\nfunction unsafeMoveTo(state, tokenIndex) {\r\n    const tokens = state.lexerSnapshot.tokens;\r\n    state.tokenIndex = tokenIndex;\r\n    if (tokenIndex < tokens.length) {\r\n        state.maybeCurrentToken = tokens[tokenIndex];\r\n        state.maybeCurrentTokenKind = state.maybeCurrentToken.kind;\r\n    }\r\n    else {\r\n        state.maybeCurrentToken = undefined;\r\n        state.maybeCurrentTokenKind = undefined;\r\n    }\r\n}\r\nfunction disambiguateBracket(state, _parser) {\r\n    const tokens = state.lexerSnapshot.tokens;\r\n    let offsetTokenIndex = state.tokenIndex + 1;\r\n    const offsetToken = tokens[offsetTokenIndex];\r\n    if (!offsetToken) {\r\n        return common_1.ResultUtils.errFactory(IParserState_1.IParserStateUtils.unterminatedBracketError(state));\r\n    }\r\n    let offsetTokenKind = offsetToken.kind;\r\n    if (offsetTokenKind === \"LeftBracket\" /* LeftBracket */) {\r\n        return common_1.ResultUtils.okFactory(\"FieldProjection\" /* FieldProjection */);\r\n    }\r\n    else if (offsetTokenKind === \"RightBracket\" /* RightBracket */) {\r\n        return common_1.ResultUtils.okFactory(\"Record\" /* Record */);\r\n    }\r\n    else {\r\n        const totalTokens = tokens.length;\r\n        offsetTokenIndex += 1;\r\n        while (offsetTokenIndex < totalTokens) {\r\n            offsetTokenKind = tokens[offsetTokenIndex].kind;\r\n            if (offsetTokenKind === \"Equal\" /* Equal */) {\r\n                return common_1.ResultUtils.okFactory(\"Record\" /* Record */);\r\n            }\r\n            else if (offsetTokenKind === \"RightBracket\" /* RightBracket */) {\r\n                return common_1.ResultUtils.okFactory(\"FieldSelection\" /* FieldSelection */);\r\n            }\r\n            offsetTokenIndex += 1;\r\n        }\r\n        return common_1.ResultUtils.errFactory(IParserState_1.IParserStateUtils.unterminatedBracketError(state));\r\n    }\r\n}\r\nexports.disambiguateBracket = disambiguateBracket;\r\n// -------------------------------------\r\n// ---------- key-value pairs ----------\r\n// -------------------------------------\r\nfunction readIdentifierPairedExpressions(state, parser, continueReadingValues, testPostCommaError) {\r\n    return readCsvArray(state, () => parser.readIdentifierPairedExpression(state, parser), continueReadingValues, testPostCommaError);\r\n}\r\nexports.readIdentifierPairedExpressions = readIdentifierPairedExpressions;\r\nfunction readGeneralizedIdentifierPairedExpressions(state, parser, continueReadingValues, testPostCommaError) {\r\n    return readCsvArray(state, () => parser.readGeneralizedIdentifierPairedExpression(state, parser), continueReadingValues, testPostCommaError);\r\n}\r\nexports.readGeneralizedIdentifierPairedExpressions = readGeneralizedIdentifierPairedExpressions;\r\nfunction readGeneralizedIdentifierPairedExpression(state, parser) {\r\n    return readKeyValuePair(state, \"GeneralizedIdentifierPairedExpression\" /* GeneralizedIdentifierPairedExpression */, () => parser.readGeneralizedIdentifier(state, parser), () => parser.readExpression(state, parser));\r\n}\r\nexports.readGeneralizedIdentifierPairedExpression = readGeneralizedIdentifierPairedExpression;\r\nfunction readIdentifierPairedExpression(state, parser) {\r\n    return readKeyValuePair(state, \"IdentifierPairedExpression\" /* IdentifierPairedExpression */, () => parser.readIdentifier(state, parser), () => parser.readExpression(state, parser));\r\n}\r\nexports.readIdentifierPairedExpression = readIdentifierPairedExpression;\r\n// ---------------------------------------------------------------\r\n// ---------- Helper functions (generic read functions) ----------\r\n// ---------------------------------------------------------------\r\n// Given the string `1 + 2 + 3` the function will parse the `1 +`,\r\n// then pass the remainder of the string `2 + 3` into recursiveReadBinOpExpressionHelper.\r\n// The helper function is nearly a copy except it replaces Left and leftReader with Right and rightReader.\r\n//\r\n// The reason the code is duplicated across two functions is because I can't think of a cleaner way to do it.\r\nfunction recursiveReadBinOpExpression(state, nodeKind, leftReader, maybeOperatorFrom, rightReader) {\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const left = leftReader();\r\n    // If no operator, return Left\r\n    const maybeOperator = maybeOperatorFrom(state.maybeCurrentTokenKind);\r\n    if (maybeOperator === undefined) {\r\n        IParserState_1.IParserStateUtils.deleteContext(state, undefined);\r\n        return left;\r\n    }\r\n    const operatorConstant = common_2.readTokenKindAsConstant(state, state.maybeCurrentTokenKind, maybeOperator);\r\n    const right = recursiveReadBinOpExpressionHelper(state, nodeKind, maybeOperatorFrom, rightReader);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, left,\r\n        operatorConstant,\r\n        right });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\n// Given the string `1 + 2 + 3` the function will recursively parse 2 Ast nodes,\r\n// where their TokenRange's are represented by brackets:\r\n// 1 + [2 + [3]]\r\nfunction recursiveReadBinOpExpressionHelper(state, nodeKind, maybeOperatorFrom, rightReader) {\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const rightAsLeft = rightReader();\r\n    const maybeOperator = maybeOperatorFrom(state.maybeCurrentTokenKind);\r\n    if (maybeOperator === undefined) {\r\n        IParserState_1.IParserStateUtils.deleteContext(state, undefined);\r\n        return rightAsLeft;\r\n    }\r\n    const operatorConstant = common_2.readTokenKindAsConstant(state, state.maybeCurrentTokenKind, maybeOperator);\r\n    const right = recursiveReadBinOpExpressionHelper(state, nodeKind, maybeOperatorFrom, rightReader);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, left: rightAsLeft, operatorConstant,\r\n        right });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nfunction readCsvArray(state, valueReader, continueReadingValues, testPostCommaError) {\r\n    const nodeKind = \"ArrayWrapper\" /* ArrayWrapper */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const elements = [];\r\n    while (continueReadingValues) {\r\n        const csvNodeKind = \"Csv\" /* Csv */;\r\n        IParserState_1.IParserStateUtils.startContext(state, csvNodeKind);\r\n        const maybeErr = testPostCommaError(state);\r\n        if (maybeErr) {\r\n            throw maybeErr;\r\n        }\r\n        const node = valueReader();\r\n        const maybeCommaConstant = common_2.maybeReadTokenKindAsConstant(state, \"Comma\" /* Comma */, \",\" /* Comma */);\r\n        const element = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: csvNodeKind, isLeaf: false, node,\r\n            maybeCommaConstant });\r\n        IParserState_1.IParserStateUtils.endContext(state, element);\r\n        elements.push(element);\r\n        continueReadingValues = maybeCommaConstant !== undefined;\r\n    }\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, elements });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nfunction readKeyValuePair(state, nodeKind, keyReader, valueReader) {\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const key = keyReader();\r\n    const equalConstant = common_2.readTokenKindAsConstant(state, \"Equal\" /* Equal */, \"=\" /* Equal */);\r\n    const value = valueReader();\r\n    const keyValuePair = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, key,\r\n        equalConstant,\r\n        value });\r\n    IParserState_1.IParserStateUtils.endContext(state, keyValuePair);\r\n    return keyValuePair;\r\n}\r\nfunction readPairedConstant(state, nodeKind, constantReader, pairedReader) {\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const constant = constantReader();\r\n    const paired = pairedReader();\r\n    const pairedConstant = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, constant,\r\n        paired });\r\n    IParserState_1.IParserStateUtils.endContext(state, pairedConstant);\r\n    return pairedConstant;\r\n}\r\nfunction maybeReadPairedConstant(state, nodeKind, condition, constantReader, pairedReader) {\r\n    if (condition()) {\r\n        return readPairedConstant(state, nodeKind, constantReader, pairedReader);\r\n    }\r\n    else {\r\n        IParserState_1.IParserStateUtils.incrementAttributeCounter(state);\r\n        return undefined;\r\n    }\r\n}\r\nfunction genericReadParameterList(state, parser, typeReader) {\r\n    const nodeKind = \"ParameterList\" /* ParameterList */;\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const leftParenthesisConstant = common_2.readTokenKindAsConstant(state, \"LeftParenthesis\" /* LeftParenthesis */, \"(\" /* LeftParenthesis */);\r\n    let continueReadingValues = !IParserState_1.IParserStateUtils.isOnTokenKind(state, \"RightParenthesis\" /* RightParenthesis */);\r\n    let reachedOptionalParameter = false;\r\n    const paramterArrayNodeKind = \"ArrayWrapper\" /* ArrayWrapper */;\r\n    IParserState_1.IParserStateUtils.startContext(state, paramterArrayNodeKind);\r\n    const parameters = [];\r\n    while (continueReadingValues) {\r\n        IParserState_1.IParserStateUtils.startContext(state, \"Csv\" /* Csv */);\r\n        IParserState_1.IParserStateUtils.startContext(state, \"Parameter\" /* Parameter */);\r\n        const maybeErr = testCsvContinuationDanglingCommaForParenthesis(state);\r\n        if (maybeErr) {\r\n            throw maybeErr;\r\n        }\r\n        const maybeOptionalConstant = maybeReadConstantKind(state, \"optional\" /* Optional */);\r\n        if (reachedOptionalParameter && !maybeOptionalConstant) {\r\n            const token = IParserState_1.IParserStateUtils.expectTokenAt(state, state.tokenIndex);\r\n            throw new __1.ParseError.RequiredParameterAfterOptionalParameterError(state.localizationTemplates, token, state.lexerSnapshot.graphemePositionStartFrom(token));\r\n        }\r\n        else if (maybeOptionalConstant) {\r\n            reachedOptionalParameter = true;\r\n        }\r\n        const name = parser.readIdentifier(state, parser);\r\n        const maybeParameterType = typeReader();\r\n        const parameter = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: \"Parameter\" /* Parameter */, isLeaf: false, maybeOptionalConstant,\r\n            name,\r\n            maybeParameterType });\r\n        IParserState_1.IParserStateUtils.endContext(state, parameter);\r\n        const maybeCommaConstant = common_2.maybeReadTokenKindAsConstant(state, \"Comma\" /* Comma */, \",\" /* Comma */);\r\n        continueReadingValues = maybeCommaConstant !== undefined;\r\n        const csv = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: \"Csv\" /* Csv */, isLeaf: false, node: parameter, maybeCommaConstant });\r\n        IParserState_1.IParserStateUtils.endContext(state, csv);\r\n        parameters.push(csv);\r\n    }\r\n    const parameterArray = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: paramterArrayNodeKind, elements: parameters, isLeaf: false });\r\n    IParserState_1.IParserStateUtils.endContext(state, parameterArray);\r\n    const rightParenthesisConstant = common_2.readTokenKindAsConstant(state, \"RightParenthesis\" /* RightParenthesis */, \")\" /* RightParenthesis */);\r\n    const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, openWrapperConstant: leftParenthesisConstant, content: parameterArray, closeWrapperConstant: rightParenthesisConstant });\r\n    IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n    return astNode;\r\n}\r\nfunction readWrapped(state, nodeKind, openConstantReader, contentReader, closeConstantReader, allowOptionalConstant) {\r\n    IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n    const openWrapperConstant = openConstantReader();\r\n    const content = contentReader();\r\n    const closeWrapperConstant = closeConstantReader();\r\n    let maybeOptionalConstant;\r\n    if (allowOptionalConstant) {\r\n        maybeOptionalConstant = common_2.maybeReadTokenKindAsConstant(state, \"QuestionMark\" /* QuestionMark */, \"?\" /* QuestionMark */);\r\n    }\r\n    const wrapped = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: false, openWrapperConstant,\r\n        content,\r\n        closeWrapperConstant,\r\n        maybeOptionalConstant });\r\n    IParserState_1.IParserStateUtils.endContext(state, wrapped);\r\n    return wrapped;\r\n}\r\n// -------------------------------------------------------\r\n// ---------- Helper functions (read functions) ----------\r\n// -------------------------------------------------------\r\nfunction readTokenKind(state, tokenKind) {\r\n    const maybeErr = IParserState_1.IParserStateUtils.testIsOnTokenKind(state, tokenKind);\r\n    if (maybeErr) {\r\n        throw maybeErr;\r\n    }\r\n    return common_2.readToken(state);\r\n}\r\nfunction readConstantKind(state, constantKind) {\r\n    const maybeConstant = maybeReadConstantKind(state, constantKind);\r\n    if (!maybeConstant) {\r\n        const details = { constantKind };\r\n        throw new common_1.CommonError.InvariantError(`couldn't convert constantKind`, details);\r\n    }\r\n    return maybeConstant;\r\n}\r\nfunction maybeReadConstantKind(state, constantKind) {\r\n    if (IParserState_1.IParserStateUtils.isOnConstantKind(state, constantKind)) {\r\n        const nodeKind = \"Constant\" /* Constant */;\r\n        IParserState_1.IParserStateUtils.startContext(state, nodeKind);\r\n        common_2.readToken(state);\r\n        const astNode = Object.assign(Object.assign({}, IParserState_1.IParserStateUtils.expectContextNodeMetadata(state)), { kind: nodeKind, isLeaf: true, constantKind });\r\n        IParserState_1.IParserStateUtils.endContext(state, astNode);\r\n        return astNode;\r\n    }\r\n    else {\r\n        IParserState_1.IParserStateUtils.incrementAttributeCounter(state);\r\n        return undefined;\r\n    }\r\n}\r\nfunction maybeReadLiteralAttributes(state, parser) {\r\n    if (IParserState_1.IParserStateUtils.isOnTokenKind(state, \"LeftBracket\" /* LeftBracket */)) {\r\n        return parser.readRecordLiteral(state, parser);\r\n    }\r\n    else {\r\n        IParserState_1.IParserStateUtils.incrementAttributeCounter(state);\r\n        return undefined;\r\n    }\r\n}\r\n// -------------------------------------------------------\r\n// ---------- Helper functions (test functions) ----------\r\n// -------------------------------------------------------\r\nfunction testCsvContinuationDanglingCommaForBrace(state) {\r\n    return IParserState_1.IParserStateUtils.testCsvContinuationDanglingComma(state, \"RightBrace\" /* RightBrace */);\r\n}\r\nfunction testCsvContinuationDanglingCommaForBracket(state) {\r\n    return IParserState_1.IParserStateUtils.testCsvContinuationDanglingComma(state, \"RightBracket\" /* RightBracket */);\r\n}\r\nfunction testCsvContinuationDanglingCommaForParenthesis(state) {\r\n    return IParserState_1.IParserStateUtils.testCsvContinuationDanglingComma(state, \"RightParenthesis\" /* RightParenthesis */);\r\n}\r\n//# sourceMappingURL=naive.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _1 = require(\".\");\r\nexports.RecursiveDescentParser = {\r\n    // 12.1.6 Identifiers\r\n    readIdentifier: _1.Naive.readIdentifier,\r\n    readGeneralizedIdentifier: _1.Naive.readGeneralizedIdentifier,\r\n    readKeyword: _1.Naive.readKeyword,\r\n    // 12.2.1 Documents\r\n    readDocument: _1.Naive.readDocument,\r\n    // 12.2.2 Section Documents\r\n    readSectionDocument: _1.Naive.readSectionDocument,\r\n    readSectionMembers: _1.Naive.readSectionMembers,\r\n    readSectionMember: _1.Naive.readSectionMember,\r\n    // 12.2.3.1 Expressions\r\n    readExpression: _1.Naive.readExpression,\r\n    // 12.2.3.2 Logical expressions\r\n    readLogicalExpression: _1.Naive.readLogicalExpression,\r\n    // 12.2.3.3 Is expression\r\n    readIsExpression: _1.Naive.readIsExpression,\r\n    readNullablePrimitiveType: _1.Naive.readNullablePrimitiveType,\r\n    // 12.2.3.4 As expression\r\n    readAsExpression: _1.Naive.readAsExpression,\r\n    // 12.2.3.5 Equality expression\r\n    readEqualityExpression: _1.Naive.readEqualityExpression,\r\n    // 12.2.3.6 Relational expression\r\n    readRelationalExpression: _1.Naive.readRelationalExpression,\r\n    // 12.2.3.7 Arithmetic expressions\r\n    readArithmeticExpression: _1.Naive.readArithmeticExpression,\r\n    // 12.2.3.8 Metadata expression\r\n    readMetadataExpression: _1.Naive.readMetadataExpression,\r\n    // 12.2.3.9 Unary expression\r\n    readUnaryExpression: _1.Naive.readUnaryExpression,\r\n    // 12.2.3.10 Primary expression\r\n    readPrimaryExpression: _1.Naive.readPrimaryExpression,\r\n    readRecursivePrimaryExpression: _1.Naive.readRecursivePrimaryExpression,\r\n    // 12.2.3.11 Literal expression\r\n    readLiteralExpression: _1.Naive.readLiteralExpression,\r\n    // 12.2.3.12 Identifier expression\r\n    readIdentifierExpression: _1.Naive.readIdentifierExpression,\r\n    // 12.2.3.14 Parenthesized expression\r\n    readParenthesizedExpression: _1.Naive.readParenthesizedExpression,\r\n    // 12.2.3.15 Not-implemented expression\r\n    readNotImplementedExpression: _1.Naive.readNotImplementedExpression,\r\n    // 12.2.3.16 Invoke expression\r\n    readInvokeExpression: _1.Naive.readInvokeExpression,\r\n    // 12.2.3.17 List expression\r\n    readListExpression: _1.Naive.readListExpression,\r\n    readListItem: _1.Naive.readListItem,\r\n    // 12.2.3.18 Record expression\r\n    readRecordExpression: _1.Naive.readRecordExpression,\r\n    // 12.2.3.19 Item access expression\r\n    readItemAccessExpression: _1.Naive.readItemAccessExpression,\r\n    // 12.2.3.20 Field access expression\r\n    readFieldSelection: _1.Naive.readFieldSelection,\r\n    readFieldProjection: _1.Naive.readFieldProjection,\r\n    readFieldSelector: _1.Naive.readFieldSelector,\r\n    // 12.2.3.21 Function expression\r\n    readFunctionExpression: _1.Naive.readFunctionExpression,\r\n    readParameterList: _1.Naive.readParameterList,\r\n    readAsType: _1.Naive.readAsType,\r\n    // 12.2.3.22 Each expression\r\n    readEachExpression: _1.Naive.readEachExpression,\r\n    // 12.2.3.23 Let expression\r\n    readLetExpression: _1.Naive.readLetExpression,\r\n    // 12.2.3.24 If expression\r\n    readIfExpression: _1.Naive.readIfExpression,\r\n    // 12.2.3.25 Type expression\r\n    readTypeExpression: _1.Naive.readTypeExpression,\r\n    readType: _1.Naive.readType,\r\n    readPrimaryType: _1.Naive.readPrimaryType,\r\n    readRecordType: _1.Naive.readRecordType,\r\n    readTableType: _1.Naive.readTableType,\r\n    readFieldSpecificationList: _1.Naive.readFieldSpecificationList,\r\n    readListType: _1.Naive.readListType,\r\n    readFunctionType: _1.Naive.readFunctionType,\r\n    readParameterSpecificationList: _1.Naive.readParameterSpecificationList,\r\n    readNullableType: _1.Naive.readNullableType,\r\n    // 12.2.3.26 Error raising expression\r\n    readErrorRaisingExpression: _1.Naive.readErrorRaisingExpression,\r\n    // 12.2.3.27 Error handling expression\r\n    readErrorHandlingExpression: _1.Naive.readErrorHandlingExpression,\r\n    // 12.2.4 Literal Attributes\r\n    readRecordLiteral: _1.Naive.readRecordLiteral,\r\n    readFieldNamePairedAnyLiterals: _1.Naive.readFieldNamePairedAnyLiterals,\r\n    readListLiteral: _1.Naive.readListLiteral,\r\n    readAnyLiteral: _1.Naive.readAnyLiteral,\r\n    readPrimitiveType: _1.Naive.readPrimitiveType,\r\n    // Disambiguation\r\n    disambiguateBracket: _1.Naive.disambiguateBracket,\r\n    disambiguateParenthesis: _1.Naive.disambiguateParenthesis,\r\n    // key-value pairs\r\n    readIdentifierPairedExpressions: _1.Naive.readIdentifierPairedExpressions,\r\n    readGeneralizedIdentifierPairedExpressions: _1.Naive.readGeneralizedIdentifierPairedExpressions,\r\n    readGeneralizedIdentifierPairedExpression: _1.Naive.readGeneralizedIdentifierPairedExpression,\r\n    readIdentifierPairedExpression: _1.Naive.readIdentifierPairedExpression,\r\n};\r\n//# sourceMappingURL=recursiveDescentParser.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst localization_1 = require(\"./localization\");\r\nconst parser_1 = require(\"./parser\");\r\nexports.DefaultSettings = {\r\n    parser: parser_1.Parser.CombinatorialParser,\r\n    newParserState: (parseSettings, lexerSnapshot) => parser_1.IParserStateUtils.newState(parseSettings, lexerSnapshot),\r\n    localizationTemplates: localization_1.DefaultTemplates,\r\n};\r\n//# sourceMappingURL=settings.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst _1 = require(\".\");\r\nconst common_1 = require(\"./common\");\r\nconst lexer_1 = require(\"./lexer\");\r\nfunction tryLex(settings, text) {\r\n    const state = lexer_1.Lexer.stateFrom(settings, text);\r\n    const maybeErrorLineMap = lexer_1.Lexer.maybeErrorLineMap(state);\r\n    if (maybeErrorLineMap) {\r\n        const errorLineMap = maybeErrorLineMap;\r\n        return common_1.ResultUtils.errFactory(new lexer_1.LexError.LexError(new lexer_1.LexError.ErrorLineMapError(settings.localizationTemplates, errorLineMap)));\r\n    }\r\n    return lexer_1.LexerSnapshot.tryFrom(state);\r\n}\r\nexports.tryLex = tryLex;\r\nfunction tryParse(settings, lexerSnapshot) {\r\n    const parser = settings.parser;\r\n    const parserState = settings.newParserState(settings, lexerSnapshot);\r\n    return parser.readDocument(parserState, parser);\r\n}\r\nexports.tryParse = tryParse;\r\nfunction tryInspection(settings, triedParse, position) {\r\n    let leafNodeIds;\r\n    let nodeIdMapCollection;\r\n    let maybeParseError;\r\n    if (common_1.ResultUtils.isErr(triedParse)) {\r\n        if (triedParse.error instanceof common_1.CommonError.CommonError) {\r\n            // Returning triedParse /should/ be safe, but Typescript has a problem with it.\r\n            // However, if I repackage the same error it satisfies the type check.\r\n            // There's no harm in having to repackage the error, and by not casting it we can prevent\r\n            // future regressions if TriedParse changes.\r\n            return common_1.ResultUtils.errFactory(triedParse.error);\r\n        }\r\n        else {\r\n            maybeParseError = triedParse.error;\r\n        }\r\n        const context = triedParse.error.state.contextState;\r\n        leafNodeIds = context.leafNodeIds;\r\n        nodeIdMapCollection = context.nodeIdMapCollection;\r\n    }\r\n    else {\r\n        const parseOk = triedParse.value;\r\n        leafNodeIds = parseOk.leafNodeIds;\r\n        nodeIdMapCollection = parseOk.nodeIdMapCollection;\r\n    }\r\n    return _1.Inspection.tryFrom(settings, position, nodeIdMapCollection, leafNodeIds, maybeParseError);\r\n}\r\nexports.tryInspection = tryInspection;\r\nfunction tryLexParse(settings, text) {\r\n    const triedLexerSnapshot = tryLex(settings, text);\r\n    if (common_1.ResultUtils.isErr(triedLexerSnapshot)) {\r\n        return triedLexerSnapshot;\r\n    }\r\n    const lexerSnapshot = triedLexerSnapshot.value;\r\n    const triedParse = tryParse(settings, lexerSnapshot);\r\n    if (common_1.ResultUtils.isOk(triedParse)) {\r\n        return common_1.ResultUtils.okFactory(Object.assign(Object.assign({}, triedParse.value), { lexerSnapshot }));\r\n    }\r\n    else {\r\n        return triedParse;\r\n    }\r\n}\r\nexports.tryLexParse = tryLexParse;\r\nfunction tryLexParseInspection(settings, text, position) {\r\n    const triedLexParse = tryLexParse(settings, text);\r\n    if (common_1.ResultUtils.isErr(triedLexParse) && triedLexParse.error instanceof lexer_1.LexError.LexError) {\r\n        return triedLexParse;\r\n    }\r\n    // The if statement above should remove LexError from the error type in Result<T, E>\r\n    const casted = triedLexParse;\r\n    const triedInspection = tryInspection(settings, casted, position);\r\n    if (common_1.ResultUtils.isErr(triedInspection)) {\r\n        return triedInspection;\r\n    }\r\n    return common_1.ResultUtils.okFactory(Object.assign(Object.assign({}, triedInspection.value), { triedParse: casted }));\r\n}\r\nexports.tryLexParseInspection = tryLexParseInspection;\r\n//# sourceMappingURL=tasks.js.map","/*\r\nBreaks a Javascript string into individual user-perceived \"characters\" \r\ncalled extended grapheme clusters by implementing the Unicode UAX-29 standard, version 10.0.0\r\n\r\nUsage:\r\nvar splitter = new GraphemeSplitter();\r\n//returns an array of strings, one string for each grapheme cluster\r\nvar graphemes = splitter.splitGraphemes(string); \r\n\r\n*/\r\nfunction GraphemeSplitter(){\r\n\tvar CR = 0,\r\n\t\tLF = 1,\r\n\t\tControl = 2,\r\n\t\tExtend = 3,\r\n\t\tRegional_Indicator = 4,\r\n\t\tSpacingMark = 5,\r\n\t\tL = 6,\r\n\t\tV = 7,\r\n\t\tT = 8,\r\n\t\tLV = 9,\r\n\t\tLVT = 10,\r\n\t\tOther = 11,\r\n\t\tPrepend = 12,\r\n\t\tE_Base = 13,\r\n\t\tE_Modifier = 14,\r\n\t\tZWJ = 15,\r\n\t\tGlue_After_Zwj = 16,\r\n\t\tE_Base_GAZ = 17;\r\n\t\t\r\n\t// BreakTypes\r\n\tvar NotBreak = 0,\r\n\t\tBreakStart = 1,\r\n\t\tBreak = 2,\r\n\t\tBreakLastRegional = 3,\r\n\t\tBreakPenultimateRegional = 4;\r\n\t\t\r\n\tfunction isSurrogate(str, pos) {\r\n\t\treturn  0xd800 <= str.charCodeAt(pos) && str.charCodeAt(pos) <= 0xdbff && \r\n\t\t\t\t0xdc00 <= str.charCodeAt(pos + 1) && str.charCodeAt(pos + 1) <= 0xdfff;\r\n\t}\r\n\t\t\r\n\t// Private function, gets a Unicode code point from a JavaScript UTF-16 string\r\n\t// handling surrogate pairs appropriately\r\n\tfunction codePointAt(str, idx){\r\n\t\tif(idx === undefined){\r\n\t\t\tidx = 0;\r\n\t\t}\r\n\t\tvar code = str.charCodeAt(idx);\r\n\r\n\t\t// if a high surrogate\r\n\t\tif (0xD800 <= code && code <= 0xDBFF && \r\n\t\t\tidx < str.length - 1){\r\n\t\t\tvar hi = code;\r\n\t\t\tvar low = str.charCodeAt(idx + 1);\r\n\t\t\tif (0xDC00 <= low && low <= 0xDFFF){\r\n\t\t\t\treturn ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\r\n\t\t\t}\r\n\t\t\treturn hi;\r\n\t\t}\r\n\t\t\r\n\t\t// if a low surrogate\r\n\t\tif (0xDC00 <= code && code <= 0xDFFF &&\r\n\t\t\tidx >= 1){\r\n\t\t\tvar hi = str.charCodeAt(idx - 1);\r\n\t\t\tvar low = code;\r\n\t\t\tif (0xD800 <= hi && hi <= 0xDBFF){\r\n\t\t\t\treturn ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;\r\n\t\t\t}\r\n\t\t\treturn low;\r\n\t\t}\r\n\t\t\r\n\t\t//just return the char if an unmatched surrogate half or a \r\n\t\t//single-char codepoint\r\n\t\treturn code;\r\n\t}\r\n\t\r\n\t// Private function, returns whether a break is allowed between the \r\n\t// two given grapheme breaking classes\r\n\tfunction shouldBreak(start, mid, end){\r\n\t\tvar all = [start].concat(mid).concat([end]);\r\n\t\tvar previous = all[all.length - 2]\r\n\t\tvar next = end\r\n\t\t\r\n\t\t// Lookahead termintor for:\r\n\t\t// GB10. (E_Base | EBG) Extend* ?\tE_Modifier\r\n\t\tvar eModifierIndex = all.lastIndexOf(E_Modifier)\r\n\t\tif(eModifierIndex > 1 &&\r\n\t\t\tall.slice(1, eModifierIndex).every(function(c){return c == Extend}) &&\r\n\t\t\t[Extend, E_Base, E_Base_GAZ].indexOf(start) == -1){\r\n\t\t\treturn Break\r\n\t\t}\r\n\r\n\t\t// Lookahead termintor for:\r\n\t\t// GB12. ^ (RI RI)* RI\t?\tRI\r\n\t\t// GB13. [^RI] (RI RI)* RI\t?\tRI\r\n\t\tvar rIIndex = all.lastIndexOf(Regional_Indicator)\r\n\t\tif(rIIndex > 0 &&\r\n\t\t\tall.slice(1, rIIndex).every(function(c){return c == Regional_Indicator}) &&\r\n\t\t\t[Prepend, Regional_Indicator].indexOf(previous) == -1) { \r\n\t\t\tif(all.filter(function(c){return c == Regional_Indicator}).length % 2 == 1) {\r\n\t\t\t\treturn BreakLastRegional\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn BreakPenultimateRegional\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t// GB3. CR X LF\r\n\t\tif(previous == CR && next == LF){\r\n\t\t\treturn NotBreak;\r\n\t\t}\r\n\t\t// GB4. (Control|CR|LF) ÷\r\n\t\telse if(previous == Control || previous == CR || previous == LF){\r\n\t\t\tif(next == E_Modifier && mid.every(function(c){return c == Extend})){\r\n\t\t\t\treturn Break\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\treturn BreakStart\r\n\t\t\t}\r\n\t\t}\r\n\t\t// GB5. ÷ (Control|CR|LF)\r\n\t\telse if(next == Control || next == CR || next == LF){\r\n\t\t\treturn BreakStart;\r\n\t\t}\r\n\t\t// GB6. L X (L|V|LV|LVT)\r\n\t\telse if(previous == L && \r\n\t\t\t(next == L || next == V || next == LV || next == LVT)){\r\n\t\t\treturn NotBreak;\r\n\t\t}\r\n\t\t// GB7. (LV|V) X (V|T)\r\n\t\telse if((previous == LV || previous == V) && \r\n\t\t\t(next == V || next == T)){\r\n\t\t\treturn NotBreak;\r\n\t\t}\r\n\t\t// GB8. (LVT|T) X (T)\r\n\t\telse if((previous == LVT || previous == T) && \r\n\t\t\tnext == T){\r\n\t\t\treturn NotBreak;\r\n\t\t}\r\n\t\t// GB9. X (Extend|ZWJ)\r\n\t\telse if (next == Extend || next == ZWJ){\r\n\t\t\treturn NotBreak;\r\n\t\t}\r\n\t\t// GB9a. X SpacingMark\r\n\t\telse if(next == SpacingMark){\r\n\t\t\treturn NotBreak;\r\n\t\t}\r\n\t\t// GB9b. Prepend X\r\n\t\telse if (previous == Prepend){\r\n\t\t\treturn NotBreak;\r\n\t\t}\r\n\t\t\r\n\t\t// GB10. (E_Base | EBG) Extend* ?\tE_Modifier\r\n\t\tvar previousNonExtendIndex = all.indexOf(Extend) != -1 ? all.lastIndexOf(Extend) - 1 : all.length - 2;\r\n\t\tif([E_Base, E_Base_GAZ].indexOf(all[previousNonExtendIndex]) != -1 &&\r\n\t\t\tall.slice(previousNonExtendIndex + 1, -1).every(function(c){return c == Extend}) &&\r\n\t\t\tnext == E_Modifier){\r\n\t\t\treturn NotBreak;\r\n\t\t}\r\n\t\t\r\n\t\t// GB11. ZWJ ? (Glue_After_Zwj | EBG)\r\n\t\tif(previous == ZWJ && [Glue_After_Zwj, E_Base_GAZ].indexOf(next) != -1) {\r\n\t\t\treturn NotBreak;\r\n\t\t}\r\n\r\n\t\t// GB12. ^ (RI RI)* RI ? RI\r\n\t\t// GB13. [^RI] (RI RI)* RI ? RI\r\n\t\tif(mid.indexOf(Regional_Indicator) != -1) { \r\n\t\t\treturn Break;\r\n\t\t}\r\n\t\tif(previous == Regional_Indicator && next == Regional_Indicator) {\r\n\t\t\treturn NotBreak;\r\n\t\t}\r\n\r\n\t\t// GB999. Any ? Any\r\n\t\treturn BreakStart;\r\n\t}\r\n\t\r\n\t// Returns the next grapheme break in the string after the given index\r\n\tthis.nextBreak = function(string, index){\r\n\t\tif(index === undefined){\r\n\t\t\tindex = 0;\r\n\t\t}\r\n\t\tif(index < 0){\r\n\t\t\treturn 0;\r\n\t\t}\r\n\t\tif(index >= string.length - 1){\r\n\t\t\treturn string.length;\r\n\t\t}\r\n\t\tvar prev = getGraphemeBreakProperty(codePointAt(string, index));\r\n\t\tvar mid = []\r\n\t\tfor (var i = index + 1; i < string.length; i++) {\r\n\t\t\t// check for already processed low surrogates\r\n\t\t\tif(isSurrogate(string, i - 1)){\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tvar next = getGraphemeBreakProperty(codePointAt(string, i));\r\n\t\t\tif(shouldBreak(prev, mid, next)){\r\n\t\t\t\treturn i;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tmid.push(next);\r\n\t\t}\r\n\t\treturn string.length;\r\n\t};\r\n\t\r\n\t// Breaks the given string into an array of grapheme cluster strings\r\n\tthis.splitGraphemes = function(str){\r\n\t\tvar res = [];\r\n\t\tvar index = 0;\r\n\t\tvar brk;\r\n\t\twhile((brk = this.nextBreak(str, index)) < str.length){\r\n\t\t\tres.push(str.slice(index, brk));\r\n\t\t\tindex = brk;\r\n\t\t}\r\n\t\tif(index < str.length){\r\n\t\t\tres.push(str.slice(index));\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\r\n\t// Returns the iterator of grapheme clusters there are in the given string\r\n\tthis.iterateGraphemes = function(str) {\r\n\t\tvar index = 0;\r\n\t\tvar res = {\r\n\t\t\tnext: (function() {\r\n\t\t\t\tvar value;\r\n\t\t\t\tvar brk;\r\n\t\t\t\tif ((brk = this.nextBreak(str, index)) < str.length) {\r\n\t\t\t\t\tvalue = str.slice(index, brk);\r\n\t\t\t\t\tindex = brk;\r\n\t\t\t\t\treturn { value: value, done: false };\r\n\t\t\t\t}\r\n\t\t\t\tif (index < str.length) {\r\n\t\t\t\t\tvalue = str.slice(index);\r\n\t\t\t\t\tindex = str.length;\r\n\t\t\t\t\treturn { value: value, done: false };\r\n\t\t\t\t}\r\n\t\t\t\treturn { value: undefined, done: true };\r\n\t\t\t}).bind(this)\r\n\t\t};\r\n\t\t// ES2015 @@iterator method (iterable) for spread syntax and for...of statement\r\n\t\tif (typeof Symbol !== 'undefined' && Symbol.iterator) {\r\n\t\t\tres[Symbol.iterator] = function() {return res};\r\n\t\t}\r\n\t\treturn res;\r\n\t};\r\n\r\n\t// Returns the number of grapheme clusters there are in the given string\r\n\tthis.countGraphemes = function(str){\r\n\t\tvar count = 0;\r\n\t\tvar index = 0;\r\n\t\tvar brk;\r\n\t\twhile((brk = this.nextBreak(str, index)) < str.length){\r\n\t\t\tindex = brk;\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\tif(index < str.length){\r\n\t\t\tcount++;\r\n\t\t}\r\n\t\treturn count;\r\n\t};\r\n\t\r\n\t//given a Unicode code point, determines this symbol's grapheme break property\r\n\tfunction getGraphemeBreakProperty(code){\r\n\t\t\r\n\t\t//grapheme break property for Unicode 10.0.0, \r\n\t\t//taken from http://www.unicode.org/Public/10.0.0/ucd/auxiliary/GraphemeBreakProperty.txt\r\n\t\t//and adapted to JavaScript rules\r\n\t\t\r\n\t\tif(\t\t\r\n\t\t(0x0600 <= code && code <= 0x0605) || // Cf   [6] ARABIC NUMBER SIGN..ARABIC NUMBER MARK ABOVE\r\n\t\t0x06DD == code || // Cf       ARABIC END OF AYAH\r\n\t\t0x070F == code || // Cf       SYRIAC ABBREVIATION MARK\r\n\t\t0x08E2 == code || // Cf       ARABIC DISPUTED END OF AYAH\r\n\t\t0x0D4E == code || // Lo       MALAYALAM LETTER DOT REPH\r\n\t\t0x110BD == code || // Cf       KAITHI NUMBER SIGN\r\n\t\t(0x111C2 <= code && code <= 0x111C3) || // Lo   [2] SHARADA SIGN JIHVAMULIYA..SHARADA SIGN UPADHMANIYA\r\n\t\t0x11A3A == code || // Lo       ZANABAZAR SQUARE CLUSTER-INITIAL LETTER RA\r\n\t\t(0x11A86 <= code && code <= 0x11A89) || // Lo   [4] SOYOMBO CLUSTER-INITIAL LETTER RA..SOYOMBO CLUSTER-INITIAL LETTER SA\r\n\t\t0x11D46 == code // Lo       MASARAM GONDI REPHA\r\n\t\t){\r\n\t\t\treturn Prepend;\r\n\t\t}\r\n\t\tif(\r\n\t\t0x000D == code // Cc       <control-000D>\r\n\t\t){\r\n\t\t\treturn CR;\r\n\t\t}\r\n\t\t\r\n\t\tif(\r\n\t\t0x000A == code // Cc       <control-000A>\r\n\t\t){\r\n\t\t\treturn LF;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif(\r\n\t\t(0x0000 <= code && code <= 0x0009) || // Cc  [10] <control-0000>..<control-0009>\r\n\t\t(0x000B <= code && code <= 0x000C) || // Cc   [2] <control-000B>..<control-000C>\r\n\t\t(0x000E <= code && code <= 0x001F) || // Cc  [18] <control-000E>..<control-001F>\r\n\t\t(0x007F <= code && code <= 0x009F) || // Cc  [33] <control-007F>..<control-009F>\r\n\t\t0x00AD == code || // Cf       SOFT HYPHEN\r\n\t\t0x061C == code || // Cf       ARABIC LETTER MARK\r\n\t\r\n\t\t0x180E == code || // Cf       MONGOLIAN VOWEL SEPARATOR\r\n\t\t0x200B == code || // Cf       ZERO WIDTH SPACE\r\n\t\t(0x200E <= code && code <= 0x200F) || // Cf   [2] LEFT-TO-RIGHT MARK..RIGHT-TO-LEFT MARK\r\n\t\t0x2028 == code || // Zl       LINE SEPARATOR\r\n\t\t0x2029 == code || // Zp       PARAGRAPH SEPARATOR\r\n\t\t(0x202A <= code && code <= 0x202E) || // Cf   [5] LEFT-TO-RIGHT EMBEDDING..RIGHT-TO-LEFT OVERRIDE\r\n\t\t(0x2060 <= code && code <= 0x2064) || // Cf   [5] WORD JOINER..INVISIBLE PLUS\r\n\t\t0x2065 == code || // Cn       <reserved-2065>\r\n\t\t(0x2066 <= code && code <= 0x206F) || // Cf  [10] LEFT-TO-RIGHT ISOLATE..NOMINAL DIGIT SHAPES\r\n\t\t(0xD800 <= code && code <= 0xDFFF) || // Cs [2048] <surrogate-D800>..<surrogate-DFFF>\r\n\t\t0xFEFF == code || // Cf       ZERO WIDTH NO-BREAK SPACE\r\n\t\t(0xFFF0 <= code && code <= 0xFFF8) || // Cn   [9] <reserved-FFF0>..<reserved-FFF8>\r\n\t\t(0xFFF9 <= code && code <= 0xFFFB) || // Cf   [3] INTERLINEAR ANNOTATION ANCHOR..INTERLINEAR ANNOTATION TERMINATOR\r\n\t\t(0x1BCA0 <= code && code <= 0x1BCA3) || // Cf   [4] SHORTHAND FORMAT LETTER OVERLAP..SHORTHAND FORMAT UP STEP\r\n\t\t(0x1D173 <= code && code <= 0x1D17A) || // Cf   [8] MUSICAL SYMBOL BEGIN BEAM..MUSICAL SYMBOL END PHRASE\r\n\t\t0xE0000 == code || // Cn       <reserved-E0000>\r\n\t\t0xE0001 == code || // Cf       LANGUAGE TAG\r\n\t\t(0xE0002 <= code && code <= 0xE001F) || // Cn  [30] <reserved-E0002>..<reserved-E001F>\r\n\t\t(0xE0080 <= code && code <= 0xE00FF) || // Cn [128] <reserved-E0080>..<reserved-E00FF>\r\n\t\t(0xE01F0 <= code && code <= 0xE0FFF) // Cn [3600] <reserved-E01F0>..<reserved-E0FFF>\r\n\t\t){\r\n\t\t\treturn Control;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif(\r\n\t\t(0x0300 <= code && code <= 0x036F) || // Mn [112] COMBINING GRAVE ACCENT..COMBINING LATIN SMALL LETTER X\r\n\t\t(0x0483 <= code && code <= 0x0487) || // Mn   [5] COMBINING CYRILLIC TITLO..COMBINING CYRILLIC POKRYTIE\r\n\t\t(0x0488 <= code && code <= 0x0489) || // Me   [2] COMBINING CYRILLIC HUNDRED THOUSANDS SIGN..COMBINING CYRILLIC MILLIONS SIGN\r\n\t\t(0x0591 <= code && code <= 0x05BD) || // Mn  [45] HEBREW ACCENT ETNAHTA..HEBREW POINT METEG\r\n\t\t0x05BF == code || // Mn       HEBREW POINT RAFE\r\n\t\t(0x05C1 <= code && code <= 0x05C2) || // Mn   [2] HEBREW POINT SHIN DOT..HEBREW POINT SIN DOT\r\n\t\t(0x05C4 <= code && code <= 0x05C5) || // Mn   [2] HEBREW MARK UPPER DOT..HEBREW MARK LOWER DOT\r\n\t\t0x05C7 == code || // Mn       HEBREW POINT QAMATS QATAN\r\n\t\t(0x0610 <= code && code <= 0x061A) || // Mn  [11] ARABIC SIGN SALLALLAHOU ALAYHE WASSALLAM..ARABIC SMALL KASRA\r\n\t\t(0x064B <= code && code <= 0x065F) || // Mn  [21] ARABIC FATHATAN..ARABIC WAVY HAMZA BELOW\r\n\t\t0x0670 == code || // Mn       ARABIC LETTER SUPERSCRIPT ALEF\r\n\t\t(0x06D6 <= code && code <= 0x06DC) || // Mn   [7] ARABIC SMALL HIGH LIGATURE SAD WITH LAM WITH ALEF MAKSURA..ARABIC SMALL HIGH SEEN\r\n\t\t(0x06DF <= code && code <= 0x06E4) || // Mn   [6] ARABIC SMALL HIGH ROUNDED ZERO..ARABIC SMALL HIGH MADDA\r\n\t\t(0x06E7 <= code && code <= 0x06E8) || // Mn   [2] ARABIC SMALL HIGH YEH..ARABIC SMALL HIGH NOON\r\n\t\t(0x06EA <= code && code <= 0x06ED) || // Mn   [4] ARABIC EMPTY CENTRE LOW STOP..ARABIC SMALL LOW MEEM\r\n\t\t0x0711 == code || // Mn       SYRIAC LETTER SUPERSCRIPT ALAPH\r\n\t\t(0x0730 <= code && code <= 0x074A) || // Mn  [27] SYRIAC PTHAHA ABOVE..SYRIAC BARREKH\r\n\t\t(0x07A6 <= code && code <= 0x07B0) || // Mn  [11] THAANA ABAFILI..THAANA SUKUN\r\n\t\t(0x07EB <= code && code <= 0x07F3) || // Mn   [9] NKO COMBINING SHORT HIGH TONE..NKO COMBINING DOUBLE DOT ABOVE\r\n\t\t(0x0816 <= code && code <= 0x0819) || // Mn   [4] SAMARITAN MARK IN..SAMARITAN MARK DAGESH\r\n\t\t(0x081B <= code && code <= 0x0823) || // Mn   [9] SAMARITAN MARK EPENTHETIC YUT..SAMARITAN VOWEL SIGN A\r\n\t\t(0x0825 <= code && code <= 0x0827) || // Mn   [3] SAMARITAN VOWEL SIGN SHORT A..SAMARITAN VOWEL SIGN U\r\n\t\t(0x0829 <= code && code <= 0x082D) || // Mn   [5] SAMARITAN VOWEL SIGN LONG I..SAMARITAN MARK NEQUDAA\r\n\t\t(0x0859 <= code && code <= 0x085B) || // Mn   [3] MANDAIC AFFRICATION MARK..MANDAIC GEMINATION MARK\r\n\t\t(0x08D4 <= code && code <= 0x08E1) || // Mn  [14] ARABIC SMALL HIGH WORD AR-RUB..ARABIC SMALL HIGH SIGN SAFHA\r\n\t\t(0x08E3 <= code && code <= 0x0902) || // Mn  [32] ARABIC TURNED DAMMA BELOW..DEVANAGARI SIGN ANUSVARA\r\n\t\t0x093A == code || // Mn       DEVANAGARI VOWEL SIGN OE\r\n\t\t0x093C == code || // Mn       DEVANAGARI SIGN NUKTA\r\n\t\t(0x0941 <= code && code <= 0x0948) || // Mn   [8] DEVANAGARI VOWEL SIGN U..DEVANAGARI VOWEL SIGN AI\r\n\t\t0x094D == code || // Mn       DEVANAGARI SIGN VIRAMA\r\n\t\t(0x0951 <= code && code <= 0x0957) || // Mn   [7] DEVANAGARI STRESS SIGN UDATTA..DEVANAGARI VOWEL SIGN UUE\r\n\t\t(0x0962 <= code && code <= 0x0963) || // Mn   [2] DEVANAGARI VOWEL SIGN VOCALIC L..DEVANAGARI VOWEL SIGN VOCALIC LL\r\n\t\t0x0981 == code || // Mn       BENGALI SIGN CANDRABINDU\r\n\t\t0x09BC == code || // Mn       BENGALI SIGN NUKTA\r\n\t\t0x09BE == code || // Mc       BENGALI VOWEL SIGN AA\r\n\t\t(0x09C1 <= code && code <= 0x09C4) || // Mn   [4] BENGALI VOWEL SIGN U..BENGALI VOWEL SIGN VOCALIC RR\r\n\t\t0x09CD == code || // Mn       BENGALI SIGN VIRAMA\r\n\t\t0x09D7 == code || // Mc       BENGALI AU LENGTH MARK\r\n\t\t(0x09E2 <= code && code <= 0x09E3) || // Mn   [2] BENGALI VOWEL SIGN VOCALIC L..BENGALI VOWEL SIGN VOCALIC LL\r\n\t\t(0x0A01 <= code && code <= 0x0A02) || // Mn   [2] GURMUKHI SIGN ADAK BINDI..GURMUKHI SIGN BINDI\r\n\t\t0x0A3C == code || // Mn       GURMUKHI SIGN NUKTA\r\n\t\t(0x0A41 <= code && code <= 0x0A42) || // Mn   [2] GURMUKHI VOWEL SIGN U..GURMUKHI VOWEL SIGN UU\r\n\t\t(0x0A47 <= code && code <= 0x0A48) || // Mn   [2] GURMUKHI VOWEL SIGN EE..GURMUKHI VOWEL SIGN AI\r\n\t\t(0x0A4B <= code && code <= 0x0A4D) || // Mn   [3] GURMUKHI VOWEL SIGN OO..GURMUKHI SIGN VIRAMA\r\n\t\t0x0A51 == code || // Mn       GURMUKHI SIGN UDAAT\r\n\t\t(0x0A70 <= code && code <= 0x0A71) || // Mn   [2] GURMUKHI TIPPI..GURMUKHI ADDAK\r\n\t\t0x0A75 == code || // Mn       GURMUKHI SIGN YAKASH\r\n\t\t(0x0A81 <= code && code <= 0x0A82) || // Mn   [2] GUJARATI SIGN CANDRABINDU..GUJARATI SIGN ANUSVARA\r\n\t\t0x0ABC == code || // Mn       GUJARATI SIGN NUKTA\r\n\t\t(0x0AC1 <= code && code <= 0x0AC5) || // Mn   [5] GUJARATI VOWEL SIGN U..GUJARATI VOWEL SIGN CANDRA E\r\n\t\t(0x0AC7 <= code && code <= 0x0AC8) || // Mn   [2] GUJARATI VOWEL SIGN E..GUJARATI VOWEL SIGN AI\r\n\t\t0x0ACD == code || // Mn       GUJARATI SIGN VIRAMA\r\n\t\t(0x0AE2 <= code && code <= 0x0AE3) || // Mn   [2] GUJARATI VOWEL SIGN VOCALIC L..GUJARATI VOWEL SIGN VOCALIC LL\r\n\t\t(0x0AFA <= code && code <= 0x0AFF) || // Mn   [6] GUJARATI SIGN SUKUN..GUJARATI SIGN TWO-CIRCLE NUKTA ABOVE\r\n\t\t0x0B01 == code || // Mn       ORIYA SIGN CANDRABINDU\r\n\t\t0x0B3C == code || // Mn       ORIYA SIGN NUKTA\r\n\t\t0x0B3E == code || // Mc       ORIYA VOWEL SIGN AA\r\n\t\t0x0B3F == code || // Mn       ORIYA VOWEL SIGN I\r\n\t\t(0x0B41 <= code && code <= 0x0B44) || // Mn   [4] ORIYA VOWEL SIGN U..ORIYA VOWEL SIGN VOCALIC RR\r\n\t\t0x0B4D == code || // Mn       ORIYA SIGN VIRAMA\r\n\t\t0x0B56 == code || // Mn       ORIYA AI LENGTH MARK\r\n\t\t0x0B57 == code || // Mc       ORIYA AU LENGTH MARK\r\n\t\t(0x0B62 <= code && code <= 0x0B63) || // Mn   [2] ORIYA VOWEL SIGN VOCALIC L..ORIYA VOWEL SIGN VOCALIC LL\r\n\t\t0x0B82 == code || // Mn       TAMIL SIGN ANUSVARA\r\n\t\t0x0BBE == code || // Mc       TAMIL VOWEL SIGN AA\r\n\t\t0x0BC0 == code || // Mn       TAMIL VOWEL SIGN II\r\n\t\t0x0BCD == code || // Mn       TAMIL SIGN VIRAMA\r\n\t\t0x0BD7 == code || // Mc       TAMIL AU LENGTH MARK\r\n\t\t0x0C00 == code || // Mn       TELUGU SIGN COMBINING CANDRABINDU ABOVE\r\n\t\t(0x0C3E <= code && code <= 0x0C40) || // Mn   [3] TELUGU VOWEL SIGN AA..TELUGU VOWEL SIGN II\r\n\t\t(0x0C46 <= code && code <= 0x0C48) || // Mn   [3] TELUGU VOWEL SIGN E..TELUGU VOWEL SIGN AI\r\n\t\t(0x0C4A <= code && code <= 0x0C4D) || // Mn   [4] TELUGU VOWEL SIGN O..TELUGU SIGN VIRAMA\r\n\t\t(0x0C55 <= code && code <= 0x0C56) || // Mn   [2] TELUGU LENGTH MARK..TELUGU AI LENGTH MARK\r\n\t\t(0x0C62 <= code && code <= 0x0C63) || // Mn   [2] TELUGU VOWEL SIGN VOCALIC L..TELUGU VOWEL SIGN VOCALIC LL\r\n\t\t0x0C81 == code || // Mn       KANNADA SIGN CANDRABINDU\r\n\t\t0x0CBC == code || // Mn       KANNADA SIGN NUKTA\r\n\t\t0x0CBF == code || // Mn       KANNADA VOWEL SIGN I\r\n\t\t0x0CC2 == code || // Mc       KANNADA VOWEL SIGN UU\r\n\t\t0x0CC6 == code || // Mn       KANNADA VOWEL SIGN E\r\n\t\t(0x0CCC <= code && code <= 0x0CCD) || // Mn   [2] KANNADA VOWEL SIGN AU..KANNADA SIGN VIRAMA\r\n\t\t(0x0CD5 <= code && code <= 0x0CD6) || // Mc   [2] KANNADA LENGTH MARK..KANNADA AI LENGTH MARK\r\n\t\t(0x0CE2 <= code && code <= 0x0CE3) || // Mn   [2] KANNADA VOWEL SIGN VOCALIC L..KANNADA VOWEL SIGN VOCALIC LL\r\n\t\t(0x0D00 <= code && code <= 0x0D01) || // Mn   [2] MALAYALAM SIGN COMBINING ANUSVARA ABOVE..MALAYALAM SIGN CANDRABINDU\r\n\t\t(0x0D3B <= code && code <= 0x0D3C) || // Mn   [2] MALAYALAM SIGN VERTICAL BAR VIRAMA..MALAYALAM SIGN CIRCULAR VIRAMA\r\n\t\t0x0D3E == code || // Mc       MALAYALAM VOWEL SIGN AA\r\n\t\t(0x0D41 <= code && code <= 0x0D44) || // Mn   [4] MALAYALAM VOWEL SIGN U..MALAYALAM VOWEL SIGN VOCALIC RR\r\n\t\t0x0D4D == code || // Mn       MALAYALAM SIGN VIRAMA\r\n\t\t0x0D57 == code || // Mc       MALAYALAM AU LENGTH MARK\r\n\t\t(0x0D62 <= code && code <= 0x0D63) || // Mn   [2] MALAYALAM VOWEL SIGN VOCALIC L..MALAYALAM VOWEL SIGN VOCALIC LL\r\n\t\t0x0DCA == code || // Mn       SINHALA SIGN AL-LAKUNA\r\n\t\t0x0DCF == code || // Mc       SINHALA VOWEL SIGN AELA-PILLA\r\n\t\t(0x0DD2 <= code && code <= 0x0DD4) || // Mn   [3] SINHALA VOWEL SIGN KETTI IS-PILLA..SINHALA VOWEL SIGN KETTI PAA-PILLA\r\n\t\t0x0DD6 == code || // Mn       SINHALA VOWEL SIGN DIGA PAA-PILLA\r\n\t\t0x0DDF == code || // Mc       SINHALA VOWEL SIGN GAYANUKITTA\r\n\t\t0x0E31 == code || // Mn       THAI CHARACTER MAI HAN-AKAT\r\n\t\t(0x0E34 <= code && code <= 0x0E3A) || // Mn   [7] THAI CHARACTER SARA I..THAI CHARACTER PHINTHU\r\n\t\t(0x0E47 <= code && code <= 0x0E4E) || // Mn   [8] THAI CHARACTER MAITAIKHU..THAI CHARACTER YAMAKKAN\r\n\t\t0x0EB1 == code || // Mn       LAO VOWEL SIGN MAI KAN\r\n\t\t(0x0EB4 <= code && code <= 0x0EB9) || // Mn   [6] LAO VOWEL SIGN I..LAO VOWEL SIGN UU\r\n\t\t(0x0EBB <= code && code <= 0x0EBC) || // Mn   [2] LAO VOWEL SIGN MAI KON..LAO SEMIVOWEL SIGN LO\r\n\t\t(0x0EC8 <= code && code <= 0x0ECD) || // Mn   [6] LAO TONE MAI EK..LAO NIGGAHITA\r\n\t\t(0x0F18 <= code && code <= 0x0F19) || // Mn   [2] TIBETAN ASTROLOGICAL SIGN -KHYUD PA..TIBETAN ASTROLOGICAL SIGN SDONG TSHUGS\r\n\t\t0x0F35 == code || // Mn       TIBETAN MARK NGAS BZUNG NYI ZLA\r\n\t\t0x0F37 == code || // Mn       TIBETAN MARK NGAS BZUNG SGOR RTAGS\r\n\t\t0x0F39 == code || // Mn       TIBETAN MARK TSA -PHRU\r\n\t\t(0x0F71 <= code && code <= 0x0F7E) || // Mn  [14] TIBETAN VOWEL SIGN AA..TIBETAN SIGN RJES SU NGA RO\r\n\t\t(0x0F80 <= code && code <= 0x0F84) || // Mn   [5] TIBETAN VOWEL SIGN REVERSED I..TIBETAN MARK HALANTA\r\n\t\t(0x0F86 <= code && code <= 0x0F87) || // Mn   [2] TIBETAN SIGN LCI RTAGS..TIBETAN SIGN YANG RTAGS\r\n\t\t(0x0F8D <= code && code <= 0x0F97) || // Mn  [11] TIBETAN SUBJOINED SIGN LCE TSA CAN..TIBETAN SUBJOINED LETTER JA\r\n\t\t(0x0F99 <= code && code <= 0x0FBC) || // Mn  [36] TIBETAN SUBJOINED LETTER NYA..TIBETAN SUBJOINED LETTER FIXED-FORM RA\r\n\t\t0x0FC6 == code || // Mn       TIBETAN SYMBOL PADMA GDAN\r\n\t\t(0x102D <= code && code <= 0x1030) || // Mn   [4] MYANMAR VOWEL SIGN I..MYANMAR VOWEL SIGN UU\r\n\t\t(0x1032 <= code && code <= 0x1037) || // Mn   [6] MYANMAR VOWEL SIGN AI..MYANMAR SIGN DOT BELOW\r\n\t\t(0x1039 <= code && code <= 0x103A) || // Mn   [2] MYANMAR SIGN VIRAMA..MYANMAR SIGN ASAT\r\n\t\t(0x103D <= code && code <= 0x103E) || // Mn   [2] MYANMAR CONSONANT SIGN MEDIAL WA..MYANMAR CONSONANT SIGN MEDIAL HA\r\n\t\t(0x1058 <= code && code <= 0x1059) || // Mn   [2] MYANMAR VOWEL SIGN VOCALIC L..MYANMAR VOWEL SIGN VOCALIC LL\r\n\t\t(0x105E <= code && code <= 0x1060) || // Mn   [3] MYANMAR CONSONANT SIGN MON MEDIAL NA..MYANMAR CONSONANT SIGN MON MEDIAL LA\r\n\t\t(0x1071 <= code && code <= 0x1074) || // Mn   [4] MYANMAR VOWEL SIGN GEBA KAREN I..MYANMAR VOWEL SIGN KAYAH EE\r\n\t\t0x1082 == code || // Mn       MYANMAR CONSONANT SIGN SHAN MEDIAL WA\r\n\t\t(0x1085 <= code && code <= 0x1086) || // Mn   [2] MYANMAR VOWEL SIGN SHAN E ABOVE..MYANMAR VOWEL SIGN SHAN FINAL Y\r\n\t\t0x108D == code || // Mn       MYANMAR SIGN SHAN COUNCIL EMPHATIC TONE\r\n\t\t0x109D == code || // Mn       MYANMAR VOWEL SIGN AITON AI\r\n\t\t(0x135D <= code && code <= 0x135F) || // Mn   [3] ETHIOPIC COMBINING GEMINATION AND VOWEL LENGTH MARK..ETHIOPIC COMBINING GEMINATION MARK\r\n\t\t(0x1712 <= code && code <= 0x1714) || // Mn   [3] TAGALOG VOWEL SIGN I..TAGALOG SIGN VIRAMA\r\n\t\t(0x1732 <= code && code <= 0x1734) || // Mn   [3] HANUNOO VOWEL SIGN I..HANUNOO SIGN PAMUDPOD\r\n\t\t(0x1752 <= code && code <= 0x1753) || // Mn   [2] BUHID VOWEL SIGN I..BUHID VOWEL SIGN U\r\n\t\t(0x1772 <= code && code <= 0x1773) || // Mn   [2] TAGBANWA VOWEL SIGN I..TAGBANWA VOWEL SIGN U\r\n\t\t(0x17B4 <= code && code <= 0x17B5) || // Mn   [2] KHMER VOWEL INHERENT AQ..KHMER VOWEL INHERENT AA\r\n\t\t(0x17B7 <= code && code <= 0x17BD) || // Mn   [7] KHMER VOWEL SIGN I..KHMER VOWEL SIGN UA\r\n\t\t0x17C6 == code || // Mn       KHMER SIGN NIKAHIT\r\n\t\t(0x17C9 <= code && code <= 0x17D3) || // Mn  [11] KHMER SIGN MUUSIKATOAN..KHMER SIGN BATHAMASAT\r\n\t\t0x17DD == code || // Mn       KHMER SIGN ATTHACAN\r\n\t\t(0x180B <= code && code <= 0x180D) || // Mn   [3] MONGOLIAN FREE VARIATION SELECTOR ONE..MONGOLIAN FREE VARIATION SELECTOR THREE\r\n\t\t(0x1885 <= code && code <= 0x1886) || // Mn   [2] MONGOLIAN LETTER ALI GALI BALUDA..MONGOLIAN LETTER ALI GALI THREE BALUDA\r\n\t\t0x18A9 == code || // Mn       MONGOLIAN LETTER ALI GALI DAGALGA\r\n\t\t(0x1920 <= code && code <= 0x1922) || // Mn   [3] LIMBU VOWEL SIGN A..LIMBU VOWEL SIGN U\r\n\t\t(0x1927 <= code && code <= 0x1928) || // Mn   [2] LIMBU VOWEL SIGN E..LIMBU VOWEL SIGN O\r\n\t\t0x1932 == code || // Mn       LIMBU SMALL LETTER ANUSVARA\r\n\t\t(0x1939 <= code && code <= 0x193B) || // Mn   [3] LIMBU SIGN MUKPHRENG..LIMBU SIGN SA-I\r\n\t\t(0x1A17 <= code && code <= 0x1A18) || // Mn   [2] BUGINESE VOWEL SIGN I..BUGINESE VOWEL SIGN U\r\n\t\t0x1A1B == code || // Mn       BUGINESE VOWEL SIGN AE\r\n\t\t0x1A56 == code || // Mn       TAI THAM CONSONANT SIGN MEDIAL LA\r\n\t\t(0x1A58 <= code && code <= 0x1A5E) || // Mn   [7] TAI THAM SIGN MAI KANG LAI..TAI THAM CONSONANT SIGN SA\r\n\t\t0x1A60 == code || // Mn       TAI THAM SIGN SAKOT\r\n\t\t0x1A62 == code || // Mn       TAI THAM VOWEL SIGN MAI SAT\r\n\t\t(0x1A65 <= code && code <= 0x1A6C) || // Mn   [8] TAI THAM VOWEL SIGN I..TAI THAM VOWEL SIGN OA BELOW\r\n\t\t(0x1A73 <= code && code <= 0x1A7C) || // Mn  [10] TAI THAM VOWEL SIGN OA ABOVE..TAI THAM SIGN KHUEN-LUE KARAN\r\n\t\t0x1A7F == code || // Mn       TAI THAM COMBINING CRYPTOGRAMMIC DOT\r\n\t\t(0x1AB0 <= code && code <= 0x1ABD) || // Mn  [14] COMBINING DOUBLED CIRCUMFLEX ACCENT..COMBINING PARENTHESES BELOW\r\n\t\t0x1ABE == code || // Me       COMBINING PARENTHESES OVERLAY\r\n\t\t(0x1B00 <= code && code <= 0x1B03) || // Mn   [4] BALINESE SIGN ULU RICEM..BALINESE SIGN SURANG\r\n\t\t0x1B34 == code || // Mn       BALINESE SIGN REREKAN\r\n\t\t(0x1B36 <= code && code <= 0x1B3A) || // Mn   [5] BALINESE VOWEL SIGN ULU..BALINESE VOWEL SIGN RA REPA\r\n\t\t0x1B3C == code || // Mn       BALINESE VOWEL SIGN LA LENGA\r\n\t\t0x1B42 == code || // Mn       BALINESE VOWEL SIGN PEPET\r\n\t\t(0x1B6B <= code && code <= 0x1B73) || // Mn   [9] BALINESE MUSICAL SYMBOL COMBINING TEGEH..BALINESE MUSICAL SYMBOL COMBINING GONG\r\n\t\t(0x1B80 <= code && code <= 0x1B81) || // Mn   [2] SUNDANESE SIGN PANYECEK..SUNDANESE SIGN PANGLAYAR\r\n\t\t(0x1BA2 <= code && code <= 0x1BA5) || // Mn   [4] SUNDANESE CONSONANT SIGN PANYAKRA..SUNDANESE VOWEL SIGN PANYUKU\r\n\t\t(0x1BA8 <= code && code <= 0x1BA9) || // Mn   [2] SUNDANESE VOWEL SIGN PAMEPET..SUNDANESE VOWEL SIGN PANEULEUNG\r\n\t\t(0x1BAB <= code && code <= 0x1BAD) || // Mn   [3] SUNDANESE SIGN VIRAMA..SUNDANESE CONSONANT SIGN PASANGAN WA\r\n\t\t0x1BE6 == code || // Mn       BATAK SIGN TOMPI\r\n\t\t(0x1BE8 <= code && code <= 0x1BE9) || // Mn   [2] BATAK VOWEL SIGN PAKPAK E..BATAK VOWEL SIGN EE\r\n\t\t0x1BED == code || // Mn       BATAK VOWEL SIGN KARO O\r\n\t\t(0x1BEF <= code && code <= 0x1BF1) || // Mn   [3] BATAK VOWEL SIGN U FOR SIMALUNGUN SA..BATAK CONSONANT SIGN H\r\n\t\t(0x1C2C <= code && code <= 0x1C33) || // Mn   [8] LEPCHA VOWEL SIGN E..LEPCHA CONSONANT SIGN T\r\n\t\t(0x1C36 <= code && code <= 0x1C37) || // Mn   [2] LEPCHA SIGN RAN..LEPCHA SIGN NUKTA\r\n\t\t(0x1CD0 <= code && code <= 0x1CD2) || // Mn   [3] VEDIC TONE KARSHANA..VEDIC TONE PRENKHA\r\n\t\t(0x1CD4 <= code && code <= 0x1CE0) || // Mn  [13] VEDIC SIGN YAJURVEDIC MIDLINE SVARITA..VEDIC TONE RIGVEDIC KASHMIRI INDEPENDENT SVARITA\r\n\t\t(0x1CE2 <= code && code <= 0x1CE8) || // Mn   [7] VEDIC SIGN VISARGA SVARITA..VEDIC SIGN VISARGA ANUDATTA WITH TAIL\r\n\t\t0x1CED == code || // Mn       VEDIC SIGN TIRYAK\r\n\t\t0x1CF4 == code || // Mn       VEDIC TONE CANDRA ABOVE\r\n\t\t(0x1CF8 <= code && code <= 0x1CF9) || // Mn   [2] VEDIC TONE RING ABOVE..VEDIC TONE DOUBLE RING ABOVE\r\n\t\t(0x1DC0 <= code && code <= 0x1DF9) || // Mn  [58] COMBINING DOTTED GRAVE ACCENT..COMBINING WIDE INVERTED BRIDGE BELOW\r\n\t\t(0x1DFB <= code && code <= 0x1DFF) || // Mn   [5] COMBINING DELETION MARK..COMBINING RIGHT ARROWHEAD AND DOWN ARROWHEAD BELOW\r\n\t\t0x200C == code || // Cf       ZERO WIDTH NON-JOINER\r\n\t\t(0x20D0 <= code && code <= 0x20DC) || // Mn  [13] COMBINING LEFT HARPOON ABOVE..COMBINING FOUR DOTS ABOVE\r\n\t\t(0x20DD <= code && code <= 0x20E0) || // Me   [4] COMBINING ENCLOSING CIRCLE..COMBINING ENCLOSING CIRCLE BACKSLASH\r\n\t\t0x20E1 == code || // Mn       COMBINING LEFT RIGHT ARROW ABOVE\r\n\t\t(0x20E2 <= code && code <= 0x20E4) || // Me   [3] COMBINING ENCLOSING SCREEN..COMBINING ENCLOSING UPWARD POINTING TRIANGLE\r\n\t\t(0x20E5 <= code && code <= 0x20F0) || // Mn  [12] COMBINING REVERSE SOLIDUS OVERLAY..COMBINING ASTERISK ABOVE\r\n\t\t(0x2CEF <= code && code <= 0x2CF1) || // Mn   [3] COPTIC COMBINING NI ABOVE..COPTIC COMBINING SPIRITUS LENIS\r\n\t\t0x2D7F == code || // Mn       TIFINAGH CONSONANT JOINER\r\n\t\t(0x2DE0 <= code && code <= 0x2DFF) || // Mn  [32] COMBINING CYRILLIC LETTER BE..COMBINING CYRILLIC LETTER IOTIFIED BIG YUS\r\n\t\t(0x302A <= code && code <= 0x302D) || // Mn   [4] IDEOGRAPHIC LEVEL TONE MARK..IDEOGRAPHIC ENTERING TONE MARK\r\n\t\t(0x302E <= code && code <= 0x302F) || // Mc   [2] HANGUL SINGLE DOT TONE MARK..HANGUL DOUBLE DOT TONE MARK\r\n\t\t(0x3099 <= code && code <= 0x309A) || // Mn   [2] COMBINING KATAKANA-HIRAGANA VOICED SOUND MARK..COMBINING KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK\r\n\t\t0xA66F == code || // Mn       COMBINING CYRILLIC VZMET\r\n\t\t(0xA670 <= code && code <= 0xA672) || // Me   [3] COMBINING CYRILLIC TEN MILLIONS SIGN..COMBINING CYRILLIC THOUSAND MILLIONS SIGN\r\n\t\t(0xA674 <= code && code <= 0xA67D) || // Mn  [10] COMBINING CYRILLIC LETTER UKRAINIAN IE..COMBINING CYRILLIC PAYEROK\r\n\t\t(0xA69E <= code && code <= 0xA69F) || // Mn   [2] COMBINING CYRILLIC LETTER EF..COMBINING CYRILLIC LETTER IOTIFIED E\r\n\t\t(0xA6F0 <= code && code <= 0xA6F1) || // Mn   [2] BAMUM COMBINING MARK KOQNDON..BAMUM COMBINING MARK TUKWENTIS\r\n\t\t0xA802 == code || // Mn       SYLOTI NAGRI SIGN DVISVARA\r\n\t\t0xA806 == code || // Mn       SYLOTI NAGRI SIGN HASANTA\r\n\t\t0xA80B == code || // Mn       SYLOTI NAGRI SIGN ANUSVARA\r\n\t\t(0xA825 <= code && code <= 0xA826) || // Mn   [2] SYLOTI NAGRI VOWEL SIGN U..SYLOTI NAGRI VOWEL SIGN E\r\n\t\t(0xA8C4 <= code && code <= 0xA8C5) || // Mn   [2] SAURASHTRA SIGN VIRAMA..SAURASHTRA SIGN CANDRABINDU\r\n\t\t(0xA8E0 <= code && code <= 0xA8F1) || // Mn  [18] COMBINING DEVANAGARI DIGIT ZERO..COMBINING DEVANAGARI SIGN AVAGRAHA\r\n\t\t(0xA926 <= code && code <= 0xA92D) || // Mn   [8] KAYAH LI VOWEL UE..KAYAH LI TONE CALYA PLOPHU\r\n\t\t(0xA947 <= code && code <= 0xA951) || // Mn  [11] REJANG VOWEL SIGN I..REJANG CONSONANT SIGN R\r\n\t\t(0xA980 <= code && code <= 0xA982) || // Mn   [3] JAVANESE SIGN PANYANGGA..JAVANESE SIGN LAYAR\r\n\t\t0xA9B3 == code || // Mn       JAVANESE SIGN CECAK TELU\r\n\t\t(0xA9B6 <= code && code <= 0xA9B9) || // Mn   [4] JAVANESE VOWEL SIGN WULU..JAVANESE VOWEL SIGN SUKU MENDUT\r\n\t\t0xA9BC == code || // Mn       JAVANESE VOWEL SIGN PEPET\r\n\t\t0xA9E5 == code || // Mn       MYANMAR SIGN SHAN SAW\r\n\t\t(0xAA29 <= code && code <= 0xAA2E) || // Mn   [6] CHAM VOWEL SIGN AA..CHAM VOWEL SIGN OE\r\n\t\t(0xAA31 <= code && code <= 0xAA32) || // Mn   [2] CHAM VOWEL SIGN AU..CHAM VOWEL SIGN UE\r\n\t\t(0xAA35 <= code && code <= 0xAA36) || // Mn   [2] CHAM CONSONANT SIGN LA..CHAM CONSONANT SIGN WA\r\n\t\t0xAA43 == code || // Mn       CHAM CONSONANT SIGN FINAL NG\r\n\t\t0xAA4C == code || // Mn       CHAM CONSONANT SIGN FINAL M\r\n\t\t0xAA7C == code || // Mn       MYANMAR SIGN TAI LAING TONE-2\r\n\t\t0xAAB0 == code || // Mn       TAI VIET MAI KANG\r\n\t\t(0xAAB2 <= code && code <= 0xAAB4) || // Mn   [3] TAI VIET VOWEL I..TAI VIET VOWEL U\r\n\t\t(0xAAB7 <= code && code <= 0xAAB8) || // Mn   [2] TAI VIET MAI KHIT..TAI VIET VOWEL IA\r\n\t\t(0xAABE <= code && code <= 0xAABF) || // Mn   [2] TAI VIET VOWEL AM..TAI VIET TONE MAI EK\r\n\t\t0xAAC1 == code || // Mn       TAI VIET TONE MAI THO\r\n\t\t(0xAAEC <= code && code <= 0xAAED) || // Mn   [2] MEETEI MAYEK VOWEL SIGN UU..MEETEI MAYEK VOWEL SIGN AAI\r\n\t\t0xAAF6 == code || // Mn       MEETEI MAYEK VIRAMA\r\n\t\t0xABE5 == code || // Mn       MEETEI MAYEK VOWEL SIGN ANAP\r\n\t\t0xABE8 == code || // Mn       MEETEI MAYEK VOWEL SIGN UNAP\r\n\t\t0xABED == code || // Mn       MEETEI MAYEK APUN IYEK\r\n\t\t0xFB1E == code || // Mn       HEBREW POINT JUDEO-SPANISH VARIKA\r\n\t\t(0xFE00 <= code && code <= 0xFE0F) || // Mn  [16] VARIATION SELECTOR-1..VARIATION SELECTOR-16\r\n\t\t(0xFE20 <= code && code <= 0xFE2F) || // Mn  [16] COMBINING LIGATURE LEFT HALF..COMBINING CYRILLIC TITLO RIGHT HALF\r\n\t\t(0xFF9E <= code && code <= 0xFF9F) || // Lm   [2] HALFWIDTH KATAKANA VOICED SOUND MARK..HALFWIDTH KATAKANA SEMI-VOICED SOUND MARK\r\n\t\t0x101FD == code || // Mn       PHAISTOS DISC SIGN COMBINING OBLIQUE STROKE\r\n\t\t0x102E0 == code || // Mn       COPTIC EPACT THOUSANDS MARK\r\n\t\t(0x10376 <= code && code <= 0x1037A) || // Mn   [5] COMBINING OLD PERMIC LETTER AN..COMBINING OLD PERMIC LETTER SII\r\n\t\t(0x10A01 <= code && code <= 0x10A03) || // Mn   [3] KHAROSHTHI VOWEL SIGN I..KHAROSHTHI VOWEL SIGN VOCALIC R\r\n\t\t(0x10A05 <= code && code <= 0x10A06) || // Mn   [2] KHAROSHTHI VOWEL SIGN E..KHAROSHTHI VOWEL SIGN O\r\n\t\t(0x10A0C <= code && code <= 0x10A0F) || // Mn   [4] KHAROSHTHI VOWEL LENGTH MARK..KHAROSHTHI SIGN VISARGA\r\n\t\t(0x10A38 <= code && code <= 0x10A3A) || // Mn   [3] KHAROSHTHI SIGN BAR ABOVE..KHAROSHTHI SIGN DOT BELOW\r\n\t\t0x10A3F == code || // Mn       KHAROSHTHI VIRAMA\r\n\t\t(0x10AE5 <= code && code <= 0x10AE6) || // Mn   [2] MANICHAEAN ABBREVIATION MARK ABOVE..MANICHAEAN ABBREVIATION MARK BELOW\r\n\t\t0x11001 == code || // Mn       BRAHMI SIGN ANUSVARA\r\n\t\t(0x11038 <= code && code <= 0x11046) || // Mn  [15] BRAHMI VOWEL SIGN AA..BRAHMI VIRAMA\r\n\t\t(0x1107F <= code && code <= 0x11081) || // Mn   [3] BRAHMI NUMBER JOINER..KAITHI SIGN ANUSVARA\r\n\t\t(0x110B3 <= code && code <= 0x110B6) || // Mn   [4] KAITHI VOWEL SIGN U..KAITHI VOWEL SIGN AI\r\n\t\t(0x110B9 <= code && code <= 0x110BA) || // Mn   [2] KAITHI SIGN VIRAMA..KAITHI SIGN NUKTA\r\n\t\t(0x11100 <= code && code <= 0x11102) || // Mn   [3] CHAKMA SIGN CANDRABINDU..CHAKMA SIGN VISARGA\r\n\t\t(0x11127 <= code && code <= 0x1112B) || // Mn   [5] CHAKMA VOWEL SIGN A..CHAKMA VOWEL SIGN UU\r\n\t\t(0x1112D <= code && code <= 0x11134) || // Mn   [8] CHAKMA VOWEL SIGN AI..CHAKMA MAAYYAA\r\n\t\t0x11173 == code || // Mn       MAHAJANI SIGN NUKTA\r\n\t\t(0x11180 <= code && code <= 0x11181) || // Mn   [2] SHARADA SIGN CANDRABINDU..SHARADA SIGN ANUSVARA\r\n\t\t(0x111B6 <= code && code <= 0x111BE) || // Mn   [9] SHARADA VOWEL SIGN U..SHARADA VOWEL SIGN O\r\n\t\t(0x111CA <= code && code <= 0x111CC) || // Mn   [3] SHARADA SIGN NUKTA..SHARADA EXTRA SHORT VOWEL MARK\r\n\t\t(0x1122F <= code && code <= 0x11231) || // Mn   [3] KHOJKI VOWEL SIGN U..KHOJKI VOWEL SIGN AI\r\n\t\t0x11234 == code || // Mn       KHOJKI SIGN ANUSVARA\r\n\t\t(0x11236 <= code && code <= 0x11237) || // Mn   [2] KHOJKI SIGN NUKTA..KHOJKI SIGN SHADDA\r\n\t\t0x1123E == code || // Mn       KHOJKI SIGN SUKUN\r\n\t\t0x112DF == code || // Mn       KHUDAWADI SIGN ANUSVARA\r\n\t\t(0x112E3 <= code && code <= 0x112EA) || // Mn   [8] KHUDAWADI VOWEL SIGN U..KHUDAWADI SIGN VIRAMA\r\n\t\t(0x11300 <= code && code <= 0x11301) || // Mn   [2] GRANTHA SIGN COMBINING ANUSVARA ABOVE..GRANTHA SIGN CANDRABINDU\r\n\t\t0x1133C == code || // Mn       GRANTHA SIGN NUKTA\r\n\t\t0x1133E == code || // Mc       GRANTHA VOWEL SIGN AA\r\n\t\t0x11340 == code || // Mn       GRANTHA VOWEL SIGN II\r\n\t\t0x11357 == code || // Mc       GRANTHA AU LENGTH MARK\r\n\t\t(0x11366 <= code && code <= 0x1136C) || // Mn   [7] COMBINING GRANTHA DIGIT ZERO..COMBINING GRANTHA DIGIT SIX\r\n\t\t(0x11370 <= code && code <= 0x11374) || // Mn   [5] COMBINING GRANTHA LETTER A..COMBINING GRANTHA LETTER PA\r\n\t\t(0x11438 <= code && code <= 0x1143F) || // Mn   [8] NEWA VOWEL SIGN U..NEWA VOWEL SIGN AI\r\n\t\t(0x11442 <= code && code <= 0x11444) || // Mn   [3] NEWA SIGN VIRAMA..NEWA SIGN ANUSVARA\r\n\t\t0x11446 == code || // Mn       NEWA SIGN NUKTA\r\n\t\t0x114B0 == code || // Mc       TIRHUTA VOWEL SIGN AA\r\n\t\t(0x114B3 <= code && code <= 0x114B8) || // Mn   [6] TIRHUTA VOWEL SIGN U..TIRHUTA VOWEL SIGN VOCALIC LL\r\n\t\t0x114BA == code || // Mn       TIRHUTA VOWEL SIGN SHORT E\r\n\t\t0x114BD == code || // Mc       TIRHUTA VOWEL SIGN SHORT O\r\n\t\t(0x114BF <= code && code <= 0x114C0) || // Mn   [2] TIRHUTA SIGN CANDRABINDU..TIRHUTA SIGN ANUSVARA\r\n\t\t(0x114C2 <= code && code <= 0x114C3) || // Mn   [2] TIRHUTA SIGN VIRAMA..TIRHUTA SIGN NUKTA\r\n\t\t0x115AF == code || // Mc       SIDDHAM VOWEL SIGN AA\r\n\t\t(0x115B2 <= code && code <= 0x115B5) || // Mn   [4] SIDDHAM VOWEL SIGN U..SIDDHAM VOWEL SIGN VOCALIC RR\r\n\t\t(0x115BC <= code && code <= 0x115BD) || // Mn   [2] SIDDHAM SIGN CANDRABINDU..SIDDHAM SIGN ANUSVARA\r\n\t\t(0x115BF <= code && code <= 0x115C0) || // Mn   [2] SIDDHAM SIGN VIRAMA..SIDDHAM SIGN NUKTA\r\n\t\t(0x115DC <= code && code <= 0x115DD) || // Mn   [2] SIDDHAM VOWEL SIGN ALTERNATE U..SIDDHAM VOWEL SIGN ALTERNATE UU\r\n\t\t(0x11633 <= code && code <= 0x1163A) || // Mn   [8] MODI VOWEL SIGN U..MODI VOWEL SIGN AI\r\n\t\t0x1163D == code || // Mn       MODI SIGN ANUSVARA\r\n\t\t(0x1163F <= code && code <= 0x11640) || // Mn   [2] MODI SIGN VIRAMA..MODI SIGN ARDHACANDRA\r\n\t\t0x116AB == code || // Mn       TAKRI SIGN ANUSVARA\r\n\t\t0x116AD == code || // Mn       TAKRI VOWEL SIGN AA\r\n\t\t(0x116B0 <= code && code <= 0x116B5) || // Mn   [6] TAKRI VOWEL SIGN U..TAKRI VOWEL SIGN AU\r\n\t\t0x116B7 == code || // Mn       TAKRI SIGN NUKTA\r\n\t\t(0x1171D <= code && code <= 0x1171F) || // Mn   [3] AHOM CONSONANT SIGN MEDIAL LA..AHOM CONSONANT SIGN MEDIAL LIGATING RA\r\n\t\t(0x11722 <= code && code <= 0x11725) || // Mn   [4] AHOM VOWEL SIGN I..AHOM VOWEL SIGN UU\r\n\t\t(0x11727 <= code && code <= 0x1172B) || // Mn   [5] AHOM VOWEL SIGN AW..AHOM SIGN KILLER\r\n\t\t(0x11A01 <= code && code <= 0x11A06) || // Mn   [6] ZANABAZAR SQUARE VOWEL SIGN I..ZANABAZAR SQUARE VOWEL SIGN O\r\n\t\t(0x11A09 <= code && code <= 0x11A0A) || // Mn   [2] ZANABAZAR SQUARE VOWEL SIGN REVERSED I..ZANABAZAR SQUARE VOWEL LENGTH MARK\r\n\t\t(0x11A33 <= code && code <= 0x11A38) || // Mn   [6] ZANABAZAR SQUARE FINAL CONSONANT MARK..ZANABAZAR SQUARE SIGN ANUSVARA\r\n\t\t(0x11A3B <= code && code <= 0x11A3E) || // Mn   [4] ZANABAZAR SQUARE CLUSTER-FINAL LETTER YA..ZANABAZAR SQUARE CLUSTER-FINAL LETTER VA\r\n\t\t0x11A47 == code || // Mn       ZANABAZAR SQUARE SUBJOINER\r\n\t\t(0x11A51 <= code && code <= 0x11A56) || // Mn   [6] SOYOMBO VOWEL SIGN I..SOYOMBO VOWEL SIGN OE\r\n\t\t(0x11A59 <= code && code <= 0x11A5B) || // Mn   [3] SOYOMBO VOWEL SIGN VOCALIC R..SOYOMBO VOWEL LENGTH MARK\r\n\t\t(0x11A8A <= code && code <= 0x11A96) || // Mn  [13] SOYOMBO FINAL CONSONANT SIGN G..SOYOMBO SIGN ANUSVARA\r\n\t\t(0x11A98 <= code && code <= 0x11A99) || // Mn   [2] SOYOMBO GEMINATION MARK..SOYOMBO SUBJOINER\r\n\t\t(0x11C30 <= code && code <= 0x11C36) || // Mn   [7] BHAIKSUKI VOWEL SIGN I..BHAIKSUKI VOWEL SIGN VOCALIC L\r\n\t\t(0x11C38 <= code && code <= 0x11C3D) || // Mn   [6] BHAIKSUKI VOWEL SIGN E..BHAIKSUKI SIGN ANUSVARA\r\n\t\t0x11C3F == code || // Mn       BHAIKSUKI SIGN VIRAMA\r\n\t\t(0x11C92 <= code && code <= 0x11CA7) || // Mn  [22] MARCHEN SUBJOINED LETTER KA..MARCHEN SUBJOINED LETTER ZA\r\n\t\t(0x11CAA <= code && code <= 0x11CB0) || // Mn   [7] MARCHEN SUBJOINED LETTER RA..MARCHEN VOWEL SIGN AA\r\n\t\t(0x11CB2 <= code && code <= 0x11CB3) || // Mn   [2] MARCHEN VOWEL SIGN U..MARCHEN VOWEL SIGN E\r\n\t\t(0x11CB5 <= code && code <= 0x11CB6) || // Mn   [2] MARCHEN SIGN ANUSVARA..MARCHEN SIGN CANDRABINDU\r\n\t\t(0x11D31 <= code && code <= 0x11D36) || // Mn   [6] MASARAM GONDI VOWEL SIGN AA..MASARAM GONDI VOWEL SIGN VOCALIC R\r\n\t\t0x11D3A == code || // Mn       MASARAM GONDI VOWEL SIGN E\r\n\t\t(0x11D3C <= code && code <= 0x11D3D) || // Mn   [2] MASARAM GONDI VOWEL SIGN AI..MASARAM GONDI VOWEL SIGN O\r\n\t\t(0x11D3F <= code && code <= 0x11D45) || // Mn   [7] MASARAM GONDI VOWEL SIGN AU..MASARAM GONDI VIRAMA\r\n\t\t0x11D47 == code || // Mn       MASARAM GONDI RA-KARA\r\n\t\t(0x16AF0 <= code && code <= 0x16AF4) || // Mn   [5] BASSA VAH COMBINING HIGH TONE..BASSA VAH COMBINING HIGH-LOW TONE\r\n\t\t(0x16B30 <= code && code <= 0x16B36) || // Mn   [7] PAHAWH HMONG MARK CIM TUB..PAHAWH HMONG MARK CIM TAUM\r\n\t\t(0x16F8F <= code && code <= 0x16F92) || // Mn   [4] MIAO TONE RIGHT..MIAO TONE BELOW\r\n\t\t(0x1BC9D <= code && code <= 0x1BC9E) || // Mn   [2] DUPLOYAN THICK LETTER SELECTOR..DUPLOYAN DOUBLE MARK\r\n\t\t0x1D165 == code || // Mc       MUSICAL SYMBOL COMBINING STEM\r\n\t\t(0x1D167 <= code && code <= 0x1D169) || // Mn   [3] MUSICAL SYMBOL COMBINING TREMOLO-1..MUSICAL SYMBOL COMBINING TREMOLO-3\r\n\t\t(0x1D16E <= code && code <= 0x1D172) || // Mc   [5] MUSICAL SYMBOL COMBINING FLAG-1..MUSICAL SYMBOL COMBINING FLAG-5\r\n\t\t(0x1D17B <= code && code <= 0x1D182) || // Mn   [8] MUSICAL SYMBOL COMBINING ACCENT..MUSICAL SYMBOL COMBINING LOURE\r\n\t\t(0x1D185 <= code && code <= 0x1D18B) || // Mn   [7] MUSICAL SYMBOL COMBINING DOIT..MUSICAL SYMBOL COMBINING TRIPLE TONGUE\r\n\t\t(0x1D1AA <= code && code <= 0x1D1AD) || // Mn   [4] MUSICAL SYMBOL COMBINING DOWN BOW..MUSICAL SYMBOL COMBINING SNAP PIZZICATO\r\n\t\t(0x1D242 <= code && code <= 0x1D244) || // Mn   [3] COMBINING GREEK MUSICAL TRISEME..COMBINING GREEK MUSICAL PENTASEME\r\n\t\t(0x1DA00 <= code && code <= 0x1DA36) || // Mn  [55] SIGNWRITING HEAD RIM..SIGNWRITING AIR SUCKING IN\r\n\t\t(0x1DA3B <= code && code <= 0x1DA6C) || // Mn  [50] SIGNWRITING MOUTH CLOSED NEUTRAL..SIGNWRITING EXCITEMENT\r\n\t\t0x1DA75 == code || // Mn       SIGNWRITING UPPER BODY TILTING FROM HIP JOINTS\r\n\t\t0x1DA84 == code || // Mn       SIGNWRITING LOCATION HEAD NECK\r\n\t\t(0x1DA9B <= code && code <= 0x1DA9F) || // Mn   [5] SIGNWRITING FILL MODIFIER-2..SIGNWRITING FILL MODIFIER-6\r\n\t\t(0x1DAA1 <= code && code <= 0x1DAAF) || // Mn  [15] SIGNWRITING ROTATION MODIFIER-2..SIGNWRITING ROTATION MODIFIER-16\r\n\t\t(0x1E000 <= code && code <= 0x1E006) || // Mn   [7] COMBINING GLAGOLITIC LETTER AZU..COMBINING GLAGOLITIC LETTER ZHIVETE\r\n\t\t(0x1E008 <= code && code <= 0x1E018) || // Mn  [17] COMBINING GLAGOLITIC LETTER ZEMLJA..COMBINING GLAGOLITIC LETTER HERU\r\n\t\t(0x1E01B <= code && code <= 0x1E021) || // Mn   [7] COMBINING GLAGOLITIC LETTER SHTA..COMBINING GLAGOLITIC LETTER YATI\r\n\t\t(0x1E023 <= code && code <= 0x1E024) || // Mn   [2] COMBINING GLAGOLITIC LETTER YU..COMBINING GLAGOLITIC LETTER SMALL YUS\r\n\t\t(0x1E026 <= code && code <= 0x1E02A) || // Mn   [5] COMBINING GLAGOLITIC LETTER YO..COMBINING GLAGOLITIC LETTER FITA\r\n\t\t(0x1E8D0 <= code && code <= 0x1E8D6) || // Mn   [7] MENDE KIKAKUI COMBINING NUMBER TEENS..MENDE KIKAKUI COMBINING NUMBER MILLIONS\r\n\t\t(0x1E944 <= code && code <= 0x1E94A) || // Mn   [7] ADLAM ALIF LENGTHENER..ADLAM NUKTA\r\n\t\t(0xE0020 <= code && code <= 0xE007F) || // Cf  [96] TAG SPACE..CANCEL TAG\r\n\t\t(0xE0100 <= code && code <= 0xE01EF) // Mn [240] VARIATION SELECTOR-17..VARIATION SELECTOR-256\r\n\t\t){\r\n\t\t\treturn Extend;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif(\r\n\t\t(0x1F1E6 <= code && code <= 0x1F1FF) // So  [26] REGIONAL INDICATOR SYMBOL LETTER A..REGIONAL INDICATOR SYMBOL LETTER Z\r\n\t\t){\r\n\t\t\treturn Regional_Indicator;\r\n\t\t}\r\n\t\t\r\n\t\tif(\r\n\t\t0x0903 == code || // Mc       DEVANAGARI SIGN VISARGA\r\n\t\t0x093B == code || // Mc       DEVANAGARI VOWEL SIGN OOE\r\n\t\t(0x093E <= code && code <= 0x0940) || // Mc   [3] DEVANAGARI VOWEL SIGN AA..DEVANAGARI VOWEL SIGN II\r\n\t\t(0x0949 <= code && code <= 0x094C) || // Mc   [4] DEVANAGARI VOWEL SIGN CANDRA O..DEVANAGARI VOWEL SIGN AU\r\n\t\t(0x094E <= code && code <= 0x094F) || // Mc   [2] DEVANAGARI VOWEL SIGN PRISHTHAMATRA E..DEVANAGARI VOWEL SIGN AW\r\n\t\t(0x0982 <= code && code <= 0x0983) || // Mc   [2] BENGALI SIGN ANUSVARA..BENGALI SIGN VISARGA\r\n\t\t(0x09BF <= code && code <= 0x09C0) || // Mc   [2] BENGALI VOWEL SIGN I..BENGALI VOWEL SIGN II\r\n\t\t(0x09C7 <= code && code <= 0x09C8) || // Mc   [2] BENGALI VOWEL SIGN E..BENGALI VOWEL SIGN AI\r\n\t\t(0x09CB <= code && code <= 0x09CC) || // Mc   [2] BENGALI VOWEL SIGN O..BENGALI VOWEL SIGN AU\r\n\t\t0x0A03 == code || // Mc       GURMUKHI SIGN VISARGA\r\n\t\t(0x0A3E <= code && code <= 0x0A40) || // Mc   [3] GURMUKHI VOWEL SIGN AA..GURMUKHI VOWEL SIGN II\r\n\t\t0x0A83 == code || // Mc       GUJARATI SIGN VISARGA\r\n\t\t(0x0ABE <= code && code <= 0x0AC0) || // Mc   [3] GUJARATI VOWEL SIGN AA..GUJARATI VOWEL SIGN II\r\n\t\t0x0AC9 == code || // Mc       GUJARATI VOWEL SIGN CANDRA O\r\n\t\t(0x0ACB <= code && code <= 0x0ACC) || // Mc   [2] GUJARATI VOWEL SIGN O..GUJARATI VOWEL SIGN AU\r\n\t\t(0x0B02 <= code && code <= 0x0B03) || // Mc   [2] ORIYA SIGN ANUSVARA..ORIYA SIGN VISARGA\r\n\t\t0x0B40 == code || // Mc       ORIYA VOWEL SIGN II\r\n\t\t(0x0B47 <= code && code <= 0x0B48) || // Mc   [2] ORIYA VOWEL SIGN E..ORIYA VOWEL SIGN AI\r\n\t\t(0x0B4B <= code && code <= 0x0B4C) || // Mc   [2] ORIYA VOWEL SIGN O..ORIYA VOWEL SIGN AU\r\n\t\t0x0BBF == code || // Mc       TAMIL VOWEL SIGN I\r\n\t\t(0x0BC1 <= code && code <= 0x0BC2) || // Mc   [2] TAMIL VOWEL SIGN U..TAMIL VOWEL SIGN UU\r\n\t\t(0x0BC6 <= code && code <= 0x0BC8) || // Mc   [3] TAMIL VOWEL SIGN E..TAMIL VOWEL SIGN AI\r\n\t\t(0x0BCA <= code && code <= 0x0BCC) || // Mc   [3] TAMIL VOWEL SIGN O..TAMIL VOWEL SIGN AU\r\n\t\t(0x0C01 <= code && code <= 0x0C03) || // Mc   [3] TELUGU SIGN CANDRABINDU..TELUGU SIGN VISARGA\r\n\t\t(0x0C41 <= code && code <= 0x0C44) || // Mc   [4] TELUGU VOWEL SIGN U..TELUGU VOWEL SIGN VOCALIC RR\r\n\t\t(0x0C82 <= code && code <= 0x0C83) || // Mc   [2] KANNADA SIGN ANUSVARA..KANNADA SIGN VISARGA\r\n\t\t0x0CBE == code || // Mc       KANNADA VOWEL SIGN AA\r\n\t\t(0x0CC0 <= code && code <= 0x0CC1) || // Mc   [2] KANNADA VOWEL SIGN II..KANNADA VOWEL SIGN U\r\n\t\t(0x0CC3 <= code && code <= 0x0CC4) || // Mc   [2] KANNADA VOWEL SIGN VOCALIC R..KANNADA VOWEL SIGN VOCALIC RR\r\n\t\t(0x0CC7 <= code && code <= 0x0CC8) || // Mc   [2] KANNADA VOWEL SIGN EE..KANNADA VOWEL SIGN AI\r\n\t\t(0x0CCA <= code && code <= 0x0CCB) || // Mc   [2] KANNADA VOWEL SIGN O..KANNADA VOWEL SIGN OO\r\n\t\t(0x0D02 <= code && code <= 0x0D03) || // Mc   [2] MALAYALAM SIGN ANUSVARA..MALAYALAM SIGN VISARGA\r\n\t\t(0x0D3F <= code && code <= 0x0D40) || // Mc   [2] MALAYALAM VOWEL SIGN I..MALAYALAM VOWEL SIGN II\r\n\t\t(0x0D46 <= code && code <= 0x0D48) || // Mc   [3] MALAYALAM VOWEL SIGN E..MALAYALAM VOWEL SIGN AI\r\n\t\t(0x0D4A <= code && code <= 0x0D4C) || // Mc   [3] MALAYALAM VOWEL SIGN O..MALAYALAM VOWEL SIGN AU\r\n\t\t(0x0D82 <= code && code <= 0x0D83) || // Mc   [2] SINHALA SIGN ANUSVARAYA..SINHALA SIGN VISARGAYA\r\n\t\t(0x0DD0 <= code && code <= 0x0DD1) || // Mc   [2] SINHALA VOWEL SIGN KETTI AEDA-PILLA..SINHALA VOWEL SIGN DIGA AEDA-PILLA\r\n\t\t(0x0DD8 <= code && code <= 0x0DDE) || // Mc   [7] SINHALA VOWEL SIGN GAETTA-PILLA..SINHALA VOWEL SIGN KOMBUVA HAA GAYANUKITTA\r\n\t\t(0x0DF2 <= code && code <= 0x0DF3) || // Mc   [2] SINHALA VOWEL SIGN DIGA GAETTA-PILLA..SINHALA VOWEL SIGN DIGA GAYANUKITTA\r\n\t\t0x0E33 == code || // Lo       THAI CHARACTER SARA AM\r\n\t\t0x0EB3 == code || // Lo       LAO VOWEL SIGN AM\r\n\t\t(0x0F3E <= code && code <= 0x0F3F) || // Mc   [2] TIBETAN SIGN YAR TSHES..TIBETAN SIGN MAR TSHES\r\n\t\t0x0F7F == code || // Mc       TIBETAN SIGN RNAM BCAD\r\n\t\t0x1031 == code || // Mc       MYANMAR VOWEL SIGN E\r\n\t\t(0x103B <= code && code <= 0x103C) || // Mc   [2] MYANMAR CONSONANT SIGN MEDIAL YA..MYANMAR CONSONANT SIGN MEDIAL RA\r\n\t\t(0x1056 <= code && code <= 0x1057) || // Mc   [2] MYANMAR VOWEL SIGN VOCALIC R..MYANMAR VOWEL SIGN VOCALIC RR\r\n\t\t0x1084 == code || // Mc       MYANMAR VOWEL SIGN SHAN E\r\n\t\t0x17B6 == code || // Mc       KHMER VOWEL SIGN AA\r\n\t\t(0x17BE <= code && code <= 0x17C5) || // Mc   [8] KHMER VOWEL SIGN OE..KHMER VOWEL SIGN AU\r\n\t\t(0x17C7 <= code && code <= 0x17C8) || // Mc   [2] KHMER SIGN REAHMUK..KHMER SIGN YUUKALEAPINTU\r\n\t\t(0x1923 <= code && code <= 0x1926) || // Mc   [4] LIMBU VOWEL SIGN EE..LIMBU VOWEL SIGN AU\r\n\t\t(0x1929 <= code && code <= 0x192B) || // Mc   [3] LIMBU SUBJOINED LETTER YA..LIMBU SUBJOINED LETTER WA\r\n\t\t(0x1930 <= code && code <= 0x1931) || // Mc   [2] LIMBU SMALL LETTER KA..LIMBU SMALL LETTER NGA\r\n\t\t(0x1933 <= code && code <= 0x1938) || // Mc   [6] LIMBU SMALL LETTER TA..LIMBU SMALL LETTER LA\r\n\t\t(0x1A19 <= code && code <= 0x1A1A) || // Mc   [2] BUGINESE VOWEL SIGN E..BUGINESE VOWEL SIGN O\r\n\t\t0x1A55 == code || // Mc       TAI THAM CONSONANT SIGN MEDIAL RA\r\n\t\t0x1A57 == code || // Mc       TAI THAM CONSONANT SIGN LA TANG LAI\r\n\t\t(0x1A6D <= code && code <= 0x1A72) || // Mc   [6] TAI THAM VOWEL SIGN OY..TAI THAM VOWEL SIGN THAM AI\r\n\t\t0x1B04 == code || // Mc       BALINESE SIGN BISAH\r\n\t\t0x1B35 == code || // Mc       BALINESE VOWEL SIGN TEDUNG\r\n\t\t0x1B3B == code || // Mc       BALINESE VOWEL SIGN RA REPA TEDUNG\r\n\t\t(0x1B3D <= code && code <= 0x1B41) || // Mc   [5] BALINESE VOWEL SIGN LA LENGA TEDUNG..BALINESE VOWEL SIGN TALING REPA TEDUNG\r\n\t\t(0x1B43 <= code && code <= 0x1B44) || // Mc   [2] BALINESE VOWEL SIGN PEPET TEDUNG..BALINESE ADEG ADEG\r\n\t\t0x1B82 == code || // Mc       SUNDANESE SIGN PANGWISAD\r\n\t\t0x1BA1 == code || // Mc       SUNDANESE CONSONANT SIGN PAMINGKAL\r\n\t\t(0x1BA6 <= code && code <= 0x1BA7) || // Mc   [2] SUNDANESE VOWEL SIGN PANAELAENG..SUNDANESE VOWEL SIGN PANOLONG\r\n\t\t0x1BAA == code || // Mc       SUNDANESE SIGN PAMAAEH\r\n\t\t0x1BE7 == code || // Mc       BATAK VOWEL SIGN E\r\n\t\t(0x1BEA <= code && code <= 0x1BEC) || // Mc   [3] BATAK VOWEL SIGN I..BATAK VOWEL SIGN O\r\n\t\t0x1BEE == code || // Mc       BATAK VOWEL SIGN U\r\n\t\t(0x1BF2 <= code && code <= 0x1BF3) || // Mc   [2] BATAK PANGOLAT..BATAK PANONGONAN\r\n\t\t(0x1C24 <= code && code <= 0x1C2B) || // Mc   [8] LEPCHA SUBJOINED LETTER YA..LEPCHA VOWEL SIGN UU\r\n\t\t(0x1C34 <= code && code <= 0x1C35) || // Mc   [2] LEPCHA CONSONANT SIGN NYIN-DO..LEPCHA CONSONANT SIGN KANG\r\n\t\t0x1CE1 == code || // Mc       VEDIC TONE ATHARVAVEDIC INDEPENDENT SVARITA\r\n\t\t(0x1CF2 <= code && code <= 0x1CF3) || // Mc   [2] VEDIC SIGN ARDHAVISARGA..VEDIC SIGN ROTATED ARDHAVISARGA\r\n\t\t0x1CF7 == code || // Mc       VEDIC SIGN ATIKRAMA\r\n\t\t(0xA823 <= code && code <= 0xA824) || // Mc   [2] SYLOTI NAGRI VOWEL SIGN A..SYLOTI NAGRI VOWEL SIGN I\r\n\t\t0xA827 == code || // Mc       SYLOTI NAGRI VOWEL SIGN OO\r\n\t\t(0xA880 <= code && code <= 0xA881) || // Mc   [2] SAURASHTRA SIGN ANUSVARA..SAURASHTRA SIGN VISARGA\r\n\t\t(0xA8B4 <= code && code <= 0xA8C3) || // Mc  [16] SAURASHTRA CONSONANT SIGN HAARU..SAURASHTRA VOWEL SIGN AU\r\n\t\t(0xA952 <= code && code <= 0xA953) || // Mc   [2] REJANG CONSONANT SIGN H..REJANG VIRAMA\r\n\t\t0xA983 == code || // Mc       JAVANESE SIGN WIGNYAN\r\n\t\t(0xA9B4 <= code && code <= 0xA9B5) || // Mc   [2] JAVANESE VOWEL SIGN TARUNG..JAVANESE VOWEL SIGN TOLONG\r\n\t\t(0xA9BA <= code && code <= 0xA9BB) || // Mc   [2] JAVANESE VOWEL SIGN TALING..JAVANESE VOWEL SIGN DIRGA MURE\r\n\t\t(0xA9BD <= code && code <= 0xA9C0) || // Mc   [4] JAVANESE CONSONANT SIGN KERET..JAVANESE PANGKON\r\n\t\t(0xAA2F <= code && code <= 0xAA30) || // Mc   [2] CHAM VOWEL SIGN O..CHAM VOWEL SIGN AI\r\n\t\t(0xAA33 <= code && code <= 0xAA34) || // Mc   [2] CHAM CONSONANT SIGN YA..CHAM CONSONANT SIGN RA\r\n\t\t0xAA4D == code || // Mc       CHAM CONSONANT SIGN FINAL H\r\n\t\t0xAAEB == code || // Mc       MEETEI MAYEK VOWEL SIGN II\r\n\t\t(0xAAEE <= code && code <= 0xAAEF) || // Mc   [2] MEETEI MAYEK VOWEL SIGN AU..MEETEI MAYEK VOWEL SIGN AAU\r\n\t\t0xAAF5 == code || // Mc       MEETEI MAYEK VOWEL SIGN VISARGA\r\n\t\t(0xABE3 <= code && code <= 0xABE4) || // Mc   [2] MEETEI MAYEK VOWEL SIGN ONAP..MEETEI MAYEK VOWEL SIGN INAP\r\n\t\t(0xABE6 <= code && code <= 0xABE7) || // Mc   [2] MEETEI MAYEK VOWEL SIGN YENAP..MEETEI MAYEK VOWEL SIGN SOUNAP\r\n\t\t(0xABE9 <= code && code <= 0xABEA) || // Mc   [2] MEETEI MAYEK VOWEL SIGN CHEINAP..MEETEI MAYEK VOWEL SIGN NUNG\r\n\t\t0xABEC == code || // Mc       MEETEI MAYEK LUM IYEK\r\n\t\t0x11000 == code || // Mc       BRAHMI SIGN CANDRABINDU\r\n\t\t0x11002 == code || // Mc       BRAHMI SIGN VISARGA\r\n\t\t0x11082 == code || // Mc       KAITHI SIGN VISARGA\r\n\t\t(0x110B0 <= code && code <= 0x110B2) || // Mc   [3] KAITHI VOWEL SIGN AA..KAITHI VOWEL SIGN II\r\n\t\t(0x110B7 <= code && code <= 0x110B8) || // Mc   [2] KAITHI VOWEL SIGN O..KAITHI VOWEL SIGN AU\r\n\t\t0x1112C == code || // Mc       CHAKMA VOWEL SIGN E\r\n\t\t0x11182 == code || // Mc       SHARADA SIGN VISARGA\r\n\t\t(0x111B3 <= code && code <= 0x111B5) || // Mc   [3] SHARADA VOWEL SIGN AA..SHARADA VOWEL SIGN II\r\n\t\t(0x111BF <= code && code <= 0x111C0) || // Mc   [2] SHARADA VOWEL SIGN AU..SHARADA SIGN VIRAMA\r\n\t\t(0x1122C <= code && code <= 0x1122E) || // Mc   [3] KHOJKI VOWEL SIGN AA..KHOJKI VOWEL SIGN II\r\n\t\t(0x11232 <= code && code <= 0x11233) || // Mc   [2] KHOJKI VOWEL SIGN O..KHOJKI VOWEL SIGN AU\r\n\t\t0x11235 == code || // Mc       KHOJKI SIGN VIRAMA\r\n\t\t(0x112E0 <= code && code <= 0x112E2) || // Mc   [3] KHUDAWADI VOWEL SIGN AA..KHUDAWADI VOWEL SIGN II\r\n\t\t(0x11302 <= code && code <= 0x11303) || // Mc   [2] GRANTHA SIGN ANUSVARA..GRANTHA SIGN VISARGA\r\n\t\t0x1133F == code || // Mc       GRANTHA VOWEL SIGN I\r\n\t\t(0x11341 <= code && code <= 0x11344) || // Mc   [4] GRANTHA VOWEL SIGN U..GRANTHA VOWEL SIGN VOCALIC RR\r\n\t\t(0x11347 <= code && code <= 0x11348) || // Mc   [2] GRANTHA VOWEL SIGN EE..GRANTHA VOWEL SIGN AI\r\n\t\t(0x1134B <= code && code <= 0x1134D) || // Mc   [3] GRANTHA VOWEL SIGN OO..GRANTHA SIGN VIRAMA\r\n\t\t(0x11362 <= code && code <= 0x11363) || // Mc   [2] GRANTHA VOWEL SIGN VOCALIC L..GRANTHA VOWEL SIGN VOCALIC LL\r\n\t\t(0x11435 <= code && code <= 0x11437) || // Mc   [3] NEWA VOWEL SIGN AA..NEWA VOWEL SIGN II\r\n\t\t(0x11440 <= code && code <= 0x11441) || // Mc   [2] NEWA VOWEL SIGN O..NEWA VOWEL SIGN AU\r\n\t\t0x11445 == code || // Mc       NEWA SIGN VISARGA\r\n\t\t(0x114B1 <= code && code <= 0x114B2) || // Mc   [2] TIRHUTA VOWEL SIGN I..TIRHUTA VOWEL SIGN II\r\n\t\t0x114B9 == code || // Mc       TIRHUTA VOWEL SIGN E\r\n\t\t(0x114BB <= code && code <= 0x114BC) || // Mc   [2] TIRHUTA VOWEL SIGN AI..TIRHUTA VOWEL SIGN O\r\n\t\t0x114BE == code || // Mc       TIRHUTA VOWEL SIGN AU\r\n\t\t0x114C1 == code || // Mc       TIRHUTA SIGN VISARGA\r\n\t\t(0x115B0 <= code && code <= 0x115B1) || // Mc   [2] SIDDHAM VOWEL SIGN I..SIDDHAM VOWEL SIGN II\r\n\t\t(0x115B8 <= code && code <= 0x115BB) || // Mc   [4] SIDDHAM VOWEL SIGN E..SIDDHAM VOWEL SIGN AU\r\n\t\t0x115BE == code || // Mc       SIDDHAM SIGN VISARGA\r\n\t\t(0x11630 <= code && code <= 0x11632) || // Mc   [3] MODI VOWEL SIGN AA..MODI VOWEL SIGN II\r\n\t\t(0x1163B <= code && code <= 0x1163C) || // Mc   [2] MODI VOWEL SIGN O..MODI VOWEL SIGN AU\r\n\t\t0x1163E == code || // Mc       MODI SIGN VISARGA\r\n\t\t0x116AC == code || // Mc       TAKRI SIGN VISARGA\r\n\t\t(0x116AE <= code && code <= 0x116AF) || // Mc   [2] TAKRI VOWEL SIGN I..TAKRI VOWEL SIGN II\r\n\t\t0x116B6 == code || // Mc       TAKRI SIGN VIRAMA\r\n\t\t(0x11720 <= code && code <= 0x11721) || // Mc   [2] AHOM VOWEL SIGN A..AHOM VOWEL SIGN AA\r\n\t\t0x11726 == code || // Mc       AHOM VOWEL SIGN E\r\n\t\t(0x11A07 <= code && code <= 0x11A08) || // Mc   [2] ZANABAZAR SQUARE VOWEL SIGN AI..ZANABAZAR SQUARE VOWEL SIGN AU\r\n\t\t0x11A39 == code || // Mc       ZANABAZAR SQUARE SIGN VISARGA\r\n\t\t(0x11A57 <= code && code <= 0x11A58) || // Mc   [2] SOYOMBO VOWEL SIGN AI..SOYOMBO VOWEL SIGN AU\r\n\t\t0x11A97 == code || // Mc       SOYOMBO SIGN VISARGA\r\n\t\t0x11C2F == code || // Mc       BHAIKSUKI VOWEL SIGN AA\r\n\t\t0x11C3E == code || // Mc       BHAIKSUKI SIGN VISARGA\r\n\t\t0x11CA9 == code || // Mc       MARCHEN SUBJOINED LETTER YA\r\n\t\t0x11CB1 == code || // Mc       MARCHEN VOWEL SIGN I\r\n\t\t0x11CB4 == code || // Mc       MARCHEN VOWEL SIGN O\r\n\t\t(0x16F51 <= code && code <= 0x16F7E) || // Mc  [46] MIAO SIGN ASPIRATION..MIAO VOWEL SIGN NG\r\n\t\t0x1D166 == code || // Mc       MUSICAL SYMBOL COMBINING SPRECHGESANG STEM\r\n\t\t0x1D16D == code // Mc       MUSICAL SYMBOL COMBINING AUGMENTATION DOT\r\n\t\t){\r\n\t\t\treturn SpacingMark;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif(\r\n\t\t(0x1100 <= code && code <= 0x115F) || // Lo  [96] HANGUL CHOSEONG KIYEOK..HANGUL CHOSEONG FILLER\r\n\t\t(0xA960 <= code && code <= 0xA97C) // Lo  [29] HANGUL CHOSEONG TIKEUT-MIEUM..HANGUL CHOSEONG SSANGYEORINHIEUH\r\n\t\t){\r\n\t\t\treturn L;\r\n\t\t}\r\n\t\t\r\n\t\tif(\r\n\t\t(0x1160 <= code && code <= 0x11A7) || // Lo  [72] HANGUL JUNGSEONG FILLER..HANGUL JUNGSEONG O-YAE\r\n\t\t(0xD7B0 <= code && code <= 0xD7C6) // Lo  [23] HANGUL JUNGSEONG O-YEO..HANGUL JUNGSEONG ARAEA-E\r\n\t\t){\r\n\t\t\treturn V;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\tif(\r\n\t\t(0x11A8 <= code && code <= 0x11FF) || // Lo  [88] HANGUL JONGSEONG KIYEOK..HANGUL JONGSEONG SSANGNIEUN\r\n\t\t(0xD7CB <= code && code <= 0xD7FB) // Lo  [49] HANGUL JONGSEONG NIEUN-RIEUL..HANGUL JONGSEONG PHIEUPH-THIEUTH\r\n\t\t){\r\n\t\t\treturn T;\r\n\t\t}\r\n\t\t\r\n\t\tif(\r\n\t\t0xAC00 == code || // Lo       HANGUL SYLLABLE GA\r\n\t\t0xAC1C == code || // Lo       HANGUL SYLLABLE GAE\r\n\t\t0xAC38 == code || // Lo       HANGUL SYLLABLE GYA\r\n\t\t0xAC54 == code || // Lo       HANGUL SYLLABLE GYAE\r\n\t\t0xAC70 == code || // Lo       HANGUL SYLLABLE GEO\r\n\t\t0xAC8C == code || // Lo       HANGUL SYLLABLE GE\r\n\t\t0xACA8 == code || // Lo       HANGUL SYLLABLE GYEO\r\n\t\t0xACC4 == code || // Lo       HANGUL SYLLABLE GYE\r\n\t\t0xACE0 == code || // Lo       HANGUL SYLLABLE GO\r\n\t\t0xACFC == code || // Lo       HANGUL SYLLABLE GWA\r\n\t\t0xAD18 == code || // Lo       HANGUL SYLLABLE GWAE\r\n\t\t0xAD34 == code || // Lo       HANGUL SYLLABLE GOE\r\n\t\t0xAD50 == code || // Lo       HANGUL SYLLABLE GYO\r\n\t\t0xAD6C == code || // Lo       HANGUL SYLLABLE GU\r\n\t\t0xAD88 == code || // Lo       HANGUL SYLLABLE GWEO\r\n\t\t0xADA4 == code || // Lo       HANGUL SYLLABLE GWE\r\n\t\t0xADC0 == code || // Lo       HANGUL SYLLABLE GWI\r\n\t\t0xADDC == code || // Lo       HANGUL SYLLABLE GYU\r\n\t\t0xADF8 == code || // Lo       HANGUL SYLLABLE GEU\r\n\t\t0xAE14 == code || // Lo       HANGUL SYLLABLE GYI\r\n\t\t0xAE30 == code || // Lo       HANGUL SYLLABLE GI\r\n\t\t0xAE4C == code || // Lo       HANGUL SYLLABLE GGA\r\n\t\t0xAE68 == code || // Lo       HANGUL SYLLABLE GGAE\r\n\t\t0xAE84 == code || // Lo       HANGUL SYLLABLE GGYA\r\n\t\t0xAEA0 == code || // Lo       HANGUL SYLLABLE GGYAE\r\n\t\t0xAEBC == code || // Lo       HANGUL SYLLABLE GGEO\r\n\t\t0xAED8 == code || // Lo       HANGUL SYLLABLE GGE\r\n\t\t0xAEF4 == code || // Lo       HANGUL SYLLABLE GGYEO\r\n\t\t0xAF10 == code || // Lo       HANGUL SYLLABLE GGYE\r\n\t\t0xAF2C == code || // Lo       HANGUL SYLLABLE GGO\r\n\t\t0xAF48 == code || // Lo       HANGUL SYLLABLE GGWA\r\n\t\t0xAF64 == code || // Lo       HANGUL SYLLABLE GGWAE\r\n\t\t0xAF80 == code || // Lo       HANGUL SYLLABLE GGOE\r\n\t\t0xAF9C == code || // Lo       HANGUL SYLLABLE GGYO\r\n\t\t0xAFB8 == code || // Lo       HANGUL SYLLABLE GGU\r\n\t\t0xAFD4 == code || // Lo       HANGUL SYLLABLE GGWEO\r\n\t\t0xAFF0 == code || // Lo       HANGUL SYLLABLE GGWE\r\n\t\t0xB00C == code || // Lo       HANGUL SYLLABLE GGWI\r\n\t\t0xB028 == code || // Lo       HANGUL SYLLABLE GGYU\r\n\t\t0xB044 == code || // Lo       HANGUL SYLLABLE GGEU\r\n\t\t0xB060 == code || // Lo       HANGUL SYLLABLE GGYI\r\n\t\t0xB07C == code || // Lo       HANGUL SYLLABLE GGI\r\n\t\t0xB098 == code || // Lo       HANGUL SYLLABLE NA\r\n\t\t0xB0B4 == code || // Lo       HANGUL SYLLABLE NAE\r\n\t\t0xB0D0 == code || // Lo       HANGUL SYLLABLE NYA\r\n\t\t0xB0EC == code || // Lo       HANGUL SYLLABLE NYAE\r\n\t\t0xB108 == code || // Lo       HANGUL SYLLABLE NEO\r\n\t\t0xB124 == code || // Lo       HANGUL SYLLABLE NE\r\n\t\t0xB140 == code || // Lo       HANGUL SYLLABLE NYEO\r\n\t\t0xB15C == code || // Lo       HANGUL SYLLABLE NYE\r\n\t\t0xB178 == code || // Lo       HANGUL SYLLABLE NO\r\n\t\t0xB194 == code || // Lo       HANGUL SYLLABLE NWA\r\n\t\t0xB1B0 == code || // Lo       HANGUL SYLLABLE NWAE\r\n\t\t0xB1CC == code || // Lo       HANGUL SYLLABLE NOE\r\n\t\t0xB1E8 == code || // Lo       HANGUL SYLLABLE NYO\r\n\t\t0xB204 == code || // Lo       HANGUL SYLLABLE NU\r\n\t\t0xB220 == code || // Lo       HANGUL SYLLABLE NWEO\r\n\t\t0xB23C == code || // Lo       HANGUL SYLLABLE NWE\r\n\t\t0xB258 == code || // Lo       HANGUL SYLLABLE NWI\r\n\t\t0xB274 == code || // Lo       HANGUL SYLLABLE NYU\r\n\t\t0xB290 == code || // Lo       HANGUL SYLLABLE NEU\r\n\t\t0xB2AC == code || // Lo       HANGUL SYLLABLE NYI\r\n\t\t0xB2C8 == code || // Lo       HANGUL SYLLABLE NI\r\n\t\t0xB2E4 == code || // Lo       HANGUL SYLLABLE DA\r\n\t\t0xB300 == code || // Lo       HANGUL SYLLABLE DAE\r\n\t\t0xB31C == code || // Lo       HANGUL SYLLABLE DYA\r\n\t\t0xB338 == code || // Lo       HANGUL SYLLABLE DYAE\r\n\t\t0xB354 == code || // Lo       HANGUL SYLLABLE DEO\r\n\t\t0xB370 == code || // Lo       HANGUL SYLLABLE DE\r\n\t\t0xB38C == code || // Lo       HANGUL SYLLABLE DYEO\r\n\t\t0xB3A8 == code || // Lo       HANGUL SYLLABLE DYE\r\n\t\t0xB3C4 == code || // Lo       HANGUL SYLLABLE DO\r\n\t\t0xB3E0 == code || // Lo       HANGUL SYLLABLE DWA\r\n\t\t0xB3FC == code || // Lo       HANGUL SYLLABLE DWAE\r\n\t\t0xB418 == code || // Lo       HANGUL SYLLABLE DOE\r\n\t\t0xB434 == code || // Lo       HANGUL SYLLABLE DYO\r\n\t\t0xB450 == code || // Lo       HANGUL SYLLABLE DU\r\n\t\t0xB46C == code || // Lo       HANGUL SYLLABLE DWEO\r\n\t\t0xB488 == code || // Lo       HANGUL SYLLABLE DWE\r\n\t\t0xB4A4 == code || // Lo       HANGUL SYLLABLE DWI\r\n\t\t0xB4C0 == code || // Lo       HANGUL SYLLABLE DYU\r\n\t\t0xB4DC == code || // Lo       HANGUL SYLLABLE DEU\r\n\t\t0xB4F8 == code || // Lo       HANGUL SYLLABLE DYI\r\n\t\t0xB514 == code || // Lo       HANGUL SYLLABLE DI\r\n\t\t0xB530 == code || // Lo       HANGUL SYLLABLE DDA\r\n\t\t0xB54C == code || // Lo       HANGUL SYLLABLE DDAE\r\n\t\t0xB568 == code || // Lo       HANGUL SYLLABLE DDYA\r\n\t\t0xB584 == code || // Lo       HANGUL SYLLABLE DDYAE\r\n\t\t0xB5A0 == code || // Lo       HANGUL SYLLABLE DDEO\r\n\t\t0xB5BC == code || // Lo       HANGUL SYLLABLE DDE\r\n\t\t0xB5D8 == code || // Lo       HANGUL SYLLABLE DDYEO\r\n\t\t0xB5F4 == code || // Lo       HANGUL SYLLABLE DDYE\r\n\t\t0xB610 == code || // Lo       HANGUL SYLLABLE DDO\r\n\t\t0xB62C == code || // Lo       HANGUL SYLLABLE DDWA\r\n\t\t0xB648 == code || // Lo       HANGUL SYLLABLE DDWAE\r\n\t\t0xB664 == code || // Lo       HANGUL SYLLABLE DDOE\r\n\t\t0xB680 == code || // Lo       HANGUL SYLLABLE DDYO\r\n\t\t0xB69C == code || // Lo       HANGUL SYLLABLE DDU\r\n\t\t0xB6B8 == code || // Lo       HANGUL SYLLABLE DDWEO\r\n\t\t0xB6D4 == code || // Lo       HANGUL SYLLABLE DDWE\r\n\t\t0xB6F0 == code || // Lo       HANGUL SYLLABLE DDWI\r\n\t\t0xB70C == code || // Lo       HANGUL SYLLABLE DDYU\r\n\t\t0xB728 == code || // Lo       HANGUL SYLLABLE DDEU\r\n\t\t0xB744 == code || // Lo       HANGUL SYLLABLE DDYI\r\n\t\t0xB760 == code || // Lo       HANGUL SYLLABLE DDI\r\n\t\t0xB77C == code || // Lo       HANGUL SYLLABLE RA\r\n\t\t0xB798 == code || // Lo       HANGUL SYLLABLE RAE\r\n\t\t0xB7B4 == code || // Lo       HANGUL SYLLABLE RYA\r\n\t\t0xB7D0 == code || // Lo       HANGUL SYLLABLE RYAE\r\n\t\t0xB7EC == code || // Lo       HANGUL SYLLABLE REO\r\n\t\t0xB808 == code || // Lo       HANGUL SYLLABLE RE\r\n\t\t0xB824 == code || // Lo       HANGUL SYLLABLE RYEO\r\n\t\t0xB840 == code || // Lo       HANGUL SYLLABLE RYE\r\n\t\t0xB85C == code || // Lo       HANGUL SYLLABLE RO\r\n\t\t0xB878 == code || // Lo       HANGUL SYLLABLE RWA\r\n\t\t0xB894 == code || // Lo       HANGUL SYLLABLE RWAE\r\n\t\t0xB8B0 == code || // Lo       HANGUL SYLLABLE ROE\r\n\t\t0xB8CC == code || // Lo       HANGUL SYLLABLE RYO\r\n\t\t0xB8E8 == code || // Lo       HANGUL SYLLABLE RU\r\n\t\t0xB904 == code || // Lo       HANGUL SYLLABLE RWEO\r\n\t\t0xB920 == code || // Lo       HANGUL SYLLABLE RWE\r\n\t\t0xB93C == code || // Lo       HANGUL SYLLABLE RWI\r\n\t\t0xB958 == code || // Lo       HANGUL SYLLABLE RYU\r\n\t\t0xB974 == code || // Lo       HANGUL SYLLABLE REU\r\n\t\t0xB990 == code || // Lo       HANGUL SYLLABLE RYI\r\n\t\t0xB9AC == code || // Lo       HANGUL SYLLABLE RI\r\n\t\t0xB9C8 == code || // Lo       HANGUL SYLLABLE MA\r\n\t\t0xB9E4 == code || // Lo       HANGUL SYLLABLE MAE\r\n\t\t0xBA00 == code || // Lo       HANGUL SYLLABLE MYA\r\n\t\t0xBA1C == code || // Lo       HANGUL SYLLABLE MYAE\r\n\t\t0xBA38 == code || // Lo       HANGUL SYLLABLE MEO\r\n\t\t0xBA54 == code || // Lo       HANGUL SYLLABLE ME\r\n\t\t0xBA70 == code || // Lo       HANGUL SYLLABLE MYEO\r\n\t\t0xBA8C == code || // Lo       HANGUL SYLLABLE MYE\r\n\t\t0xBAA8 == code || // Lo       HANGUL SYLLABLE MO\r\n\t\t0xBAC4 == code || // Lo       HANGUL SYLLABLE MWA\r\n\t\t0xBAE0 == code || // Lo       HANGUL SYLLABLE MWAE\r\n\t\t0xBAFC == code || // Lo       HANGUL SYLLABLE MOE\r\n\t\t0xBB18 == code || // Lo       HANGUL SYLLABLE MYO\r\n\t\t0xBB34 == code || // Lo       HANGUL SYLLABLE MU\r\n\t\t0xBB50 == code || // Lo       HANGUL SYLLABLE MWEO\r\n\t\t0xBB6C == code || // Lo       HANGUL SYLLABLE MWE\r\n\t\t0xBB88 == code || // Lo       HANGUL SYLLABLE MWI\r\n\t\t0xBBA4 == code || // Lo       HANGUL SYLLABLE MYU\r\n\t\t0xBBC0 == code || // Lo       HANGUL SYLLABLE MEU\r\n\t\t0xBBDC == code || // Lo       HANGUL SYLLABLE MYI\r\n\t\t0xBBF8 == code || // Lo       HANGUL SYLLABLE MI\r\n\t\t0xBC14 == code || // Lo       HANGUL SYLLABLE BA\r\n\t\t0xBC30 == code || // Lo       HANGUL SYLLABLE BAE\r\n\t\t0xBC4C == code || // Lo       HANGUL SYLLABLE BYA\r\n\t\t0xBC68 == code || // Lo       HANGUL SYLLABLE BYAE\r\n\t\t0xBC84 == code || // Lo       HANGUL SYLLABLE BEO\r\n\t\t0xBCA0 == code || // Lo       HANGUL SYLLABLE BE\r\n\t\t0xBCBC == code || // Lo       HANGUL SYLLABLE BYEO\r\n\t\t0xBCD8 == code || // Lo       HANGUL SYLLABLE BYE\r\n\t\t0xBCF4 == code || // Lo       HANGUL SYLLABLE BO\r\n\t\t0xBD10 == code || // Lo       HANGUL SYLLABLE BWA\r\n\t\t0xBD2C == code || // Lo       HANGUL SYLLABLE BWAE\r\n\t\t0xBD48 == code || // Lo       HANGUL SYLLABLE BOE\r\n\t\t0xBD64 == code || // Lo       HANGUL SYLLABLE BYO\r\n\t\t0xBD80 == code || // Lo       HANGUL SYLLABLE BU\r\n\t\t0xBD9C == code || // Lo       HANGUL SYLLABLE BWEO\r\n\t\t0xBDB8 == code || // Lo       HANGUL SYLLABLE BWE\r\n\t\t0xBDD4 == code || // Lo       HANGUL SYLLABLE BWI\r\n\t\t0xBDF0 == code || // Lo       HANGUL SYLLABLE BYU\r\n\t\t0xBE0C == code || // Lo       HANGUL SYLLABLE BEU\r\n\t\t0xBE28 == code || // Lo       HANGUL SYLLABLE BYI\r\n\t\t0xBE44 == code || // Lo       HANGUL SYLLABLE BI\r\n\t\t0xBE60 == code || // Lo       HANGUL SYLLABLE BBA\r\n\t\t0xBE7C == code || // Lo       HANGUL SYLLABLE BBAE\r\n\t\t0xBE98 == code || // Lo       HANGUL SYLLABLE BBYA\r\n\t\t0xBEB4 == code || // Lo       HANGUL SYLLABLE BBYAE\r\n\t\t0xBED0 == code || // Lo       HANGUL SYLLABLE BBEO\r\n\t\t0xBEEC == code || // Lo       HANGUL SYLLABLE BBE\r\n\t\t0xBF08 == code || // Lo       HANGUL SYLLABLE BBYEO\r\n\t\t0xBF24 == code || // Lo       HANGUL SYLLABLE BBYE\r\n\t\t0xBF40 == code || // Lo       HANGUL SYLLABLE BBO\r\n\t\t0xBF5C == code || // Lo       HANGUL SYLLABLE BBWA\r\n\t\t0xBF78 == code || // Lo       HANGUL SYLLABLE BBWAE\r\n\t\t0xBF94 == code || // Lo       HANGUL SYLLABLE BBOE\r\n\t\t0xBFB0 == code || // Lo       HANGUL SYLLABLE BBYO\r\n\t\t0xBFCC == code || // Lo       HANGUL SYLLABLE BBU\r\n\t\t0xBFE8 == code || // Lo       HANGUL SYLLABLE BBWEO\r\n\t\t0xC004 == code || // Lo       HANGUL SYLLABLE BBWE\r\n\t\t0xC020 == code || // Lo       HANGUL SYLLABLE BBWI\r\n\t\t0xC03C == code || // Lo       HANGUL SYLLABLE BBYU\r\n\t\t0xC058 == code || // Lo       HANGUL SYLLABLE BBEU\r\n\t\t0xC074 == code || // Lo       HANGUL SYLLABLE BBYI\r\n\t\t0xC090 == code || // Lo       HANGUL SYLLABLE BBI\r\n\t\t0xC0AC == code || // Lo       HANGUL SYLLABLE SA\r\n\t\t0xC0C8 == code || // Lo       HANGUL SYLLABLE SAE\r\n\t\t0xC0E4 == code || // Lo       HANGUL SYLLABLE SYA\r\n\t\t0xC100 == code || // Lo       HANGUL SYLLABLE SYAE\r\n\t\t0xC11C == code || // Lo       HANGUL SYLLABLE SEO\r\n\t\t0xC138 == code || // Lo       HANGUL SYLLABLE SE\r\n\t\t0xC154 == code || // Lo       HANGUL SYLLABLE SYEO\r\n\t\t0xC170 == code || // Lo       HANGUL SYLLABLE SYE\r\n\t\t0xC18C == code || // Lo       HANGUL SYLLABLE SO\r\n\t\t0xC1A8 == code || // Lo       HANGUL SYLLABLE SWA\r\n\t\t0xC1C4 == code || // Lo       HANGUL SYLLABLE SWAE\r\n\t\t0xC1E0 == code || // Lo       HANGUL SYLLABLE SOE\r\n\t\t0xC1FC == code || // Lo       HANGUL SYLLABLE SYO\r\n\t\t0xC218 == code || // Lo       HANGUL SYLLABLE SU\r\n\t\t0xC234 == code || // Lo       HANGUL SYLLABLE SWEO\r\n\t\t0xC250 == code || // Lo       HANGUL SYLLABLE SWE\r\n\t\t0xC26C == code || // Lo       HANGUL SYLLABLE SWI\r\n\t\t0xC288 == code || // Lo       HANGUL SYLLABLE SYU\r\n\t\t0xC2A4 == code || // Lo       HANGUL SYLLABLE SEU\r\n\t\t0xC2C0 == code || // Lo       HANGUL SYLLABLE SYI\r\n\t\t0xC2DC == code || // Lo       HANGUL SYLLABLE SI\r\n\t\t0xC2F8 == code || // Lo       HANGUL SYLLABLE SSA\r\n\t\t0xC314 == code || // Lo       HANGUL SYLLABLE SSAE\r\n\t\t0xC330 == code || // Lo       HANGUL SYLLABLE SSYA\r\n\t\t0xC34C == code || // Lo       HANGUL SYLLABLE SSYAE\r\n\t\t0xC368 == code || // Lo       HANGUL SYLLABLE SSEO\r\n\t\t0xC384 == code || // Lo       HANGUL SYLLABLE SSE\r\n\t\t0xC3A0 == code || // Lo       HANGUL SYLLABLE SSYEO\r\n\t\t0xC3BC == code || // Lo       HANGUL SYLLABLE SSYE\r\n\t\t0xC3D8 == code || // Lo       HANGUL SYLLABLE SSO\r\n\t\t0xC3F4 == code || // Lo       HANGUL SYLLABLE SSWA\r\n\t\t0xC410 == code || // Lo       HANGUL SYLLABLE SSWAE\r\n\t\t0xC42C == code || // Lo       HANGUL SYLLABLE SSOE\r\n\t\t0xC448 == code || // Lo       HANGUL SYLLABLE SSYO\r\n\t\t0xC464 == code || // Lo       HANGUL SYLLABLE SSU\r\n\t\t0xC480 == code || // Lo       HANGUL SYLLABLE SSWEO\r\n\t\t0xC49C == code || // Lo       HANGUL SYLLABLE SSWE\r\n\t\t0xC4B8 == code || // Lo       HANGUL SYLLABLE SSWI\r\n\t\t0xC4D4 == code || // Lo       HANGUL SYLLABLE SSYU\r\n\t\t0xC4F0 == code || // Lo       HANGUL SYLLABLE SSEU\r\n\t\t0xC50C == code || // Lo       HANGUL SYLLABLE SSYI\r\n\t\t0xC528 == code || // Lo       HANGUL SYLLABLE SSI\r\n\t\t0xC544 == code || // Lo       HANGUL SYLLABLE A\r\n\t\t0xC560 == code || // Lo       HANGUL SYLLABLE AE\r\n\t\t0xC57C == code || // Lo       HANGUL SYLLABLE YA\r\n\t\t0xC598 == code || // Lo       HANGUL SYLLABLE YAE\r\n\t\t0xC5B4 == code || // Lo       HANGUL SYLLABLE EO\r\n\t\t0xC5D0 == code || // Lo       HANGUL SYLLABLE E\r\n\t\t0xC5EC == code || // Lo       HANGUL SYLLABLE YEO\r\n\t\t0xC608 == code || // Lo       HANGUL SYLLABLE YE\r\n\t\t0xC624 == code || // Lo       HANGUL SYLLABLE O\r\n\t\t0xC640 == code || // Lo       HANGUL SYLLABLE WA\r\n\t\t0xC65C == code || // Lo       HANGUL SYLLABLE WAE\r\n\t\t0xC678 == code || // Lo       HANGUL SYLLABLE OE\r\n\t\t0xC694 == code || // Lo       HANGUL SYLLABLE YO\r\n\t\t0xC6B0 == code || // Lo       HANGUL SYLLABLE U\r\n\t\t0xC6CC == code || // Lo       HANGUL SYLLABLE WEO\r\n\t\t0xC6E8 == code || // Lo       HANGUL SYLLABLE WE\r\n\t\t0xC704 == code || // Lo       HANGUL SYLLABLE WI\r\n\t\t0xC720 == code || // Lo       HANGUL SYLLABLE YU\r\n\t\t0xC73C == code || // Lo       HANGUL SYLLABLE EU\r\n\t\t0xC758 == code || // Lo       HANGUL SYLLABLE YI\r\n\t\t0xC774 == code || // Lo       HANGUL SYLLABLE I\r\n\t\t0xC790 == code || // Lo       HANGUL SYLLABLE JA\r\n\t\t0xC7AC == code || // Lo       HANGUL SYLLABLE JAE\r\n\t\t0xC7C8 == code || // Lo       HANGUL SYLLABLE JYA\r\n\t\t0xC7E4 == code || // Lo       HANGUL SYLLABLE JYAE\r\n\t\t0xC800 == code || // Lo       HANGUL SYLLABLE JEO\r\n\t\t0xC81C == code || // Lo       HANGUL SYLLABLE JE\r\n\t\t0xC838 == code || // Lo       HANGUL SYLLABLE JYEO\r\n\t\t0xC854 == code || // Lo       HANGUL SYLLABLE JYE\r\n\t\t0xC870 == code || // Lo       HANGUL SYLLABLE JO\r\n\t\t0xC88C == code || // Lo       HANGUL SYLLABLE JWA\r\n\t\t0xC8A8 == code || // Lo       HANGUL SYLLABLE JWAE\r\n\t\t0xC8C4 == code || // Lo       HANGUL SYLLABLE JOE\r\n\t\t0xC8E0 == code || // Lo       HANGUL SYLLABLE JYO\r\n\t\t0xC8FC == code || // Lo       HANGUL SYLLABLE JU\r\n\t\t0xC918 == code || // Lo       HANGUL SYLLABLE JWEO\r\n\t\t0xC934 == code || // Lo       HANGUL SYLLABLE JWE\r\n\t\t0xC950 == code || // Lo       HANGUL SYLLABLE JWI\r\n\t\t0xC96C == code || // Lo       HANGUL SYLLABLE JYU\r\n\t\t0xC988 == code || // Lo       HANGUL SYLLABLE JEU\r\n\t\t0xC9A4 == code || // Lo       HANGUL SYLLABLE JYI\r\n\t\t0xC9C0 == code || // Lo       HANGUL SYLLABLE JI\r\n\t\t0xC9DC == code || // Lo       HANGUL SYLLABLE JJA\r\n\t\t0xC9F8 == code || // Lo       HANGUL SYLLABLE JJAE\r\n\t\t0xCA14 == code || // Lo       HANGUL SYLLABLE JJYA\r\n\t\t0xCA30 == code || // Lo       HANGUL SYLLABLE JJYAE\r\n\t\t0xCA4C == code || // Lo       HANGUL SYLLABLE JJEO\r\n\t\t0xCA68 == code || // Lo       HANGUL SYLLABLE JJE\r\n\t\t0xCA84 == code || // Lo       HANGUL SYLLABLE JJYEO\r\n\t\t0xCAA0 == code || // Lo       HANGUL SYLLABLE JJYE\r\n\t\t0xCABC == code || // Lo       HANGUL SYLLABLE JJO\r\n\t\t0xCAD8 == code || // Lo       HANGUL SYLLABLE JJWA\r\n\t\t0xCAF4 == code || // Lo       HANGUL SYLLABLE JJWAE\r\n\t\t0xCB10 == code || // Lo       HANGUL SYLLABLE JJOE\r\n\t\t0xCB2C == code || // Lo       HANGUL SYLLABLE JJYO\r\n\t\t0xCB48 == code || // Lo       HANGUL SYLLABLE JJU\r\n\t\t0xCB64 == code || // Lo       HANGUL SYLLABLE JJWEO\r\n\t\t0xCB80 == code || // Lo       HANGUL SYLLABLE JJWE\r\n\t\t0xCB9C == code || // Lo       HANGUL SYLLABLE JJWI\r\n\t\t0xCBB8 == code || // Lo       HANGUL SYLLABLE JJYU\r\n\t\t0xCBD4 == code || // Lo       HANGUL SYLLABLE JJEU\r\n\t\t0xCBF0 == code || // Lo       HANGUL SYLLABLE JJYI\r\n\t\t0xCC0C == code || // Lo       HANGUL SYLLABLE JJI\r\n\t\t0xCC28 == code || // Lo       HANGUL SYLLABLE CA\r\n\t\t0xCC44 == code || // Lo       HANGUL SYLLABLE CAE\r\n\t\t0xCC60 == code || // Lo       HANGUL SYLLABLE CYA\r\n\t\t0xCC7C == code || // Lo       HANGUL SYLLABLE CYAE\r\n\t\t0xCC98 == code || // Lo       HANGUL SYLLABLE CEO\r\n\t\t0xCCB4 == code || // Lo       HANGUL SYLLABLE CE\r\n\t\t0xCCD0 == code || // Lo       HANGUL SYLLABLE CYEO\r\n\t\t0xCCEC == code || // Lo       HANGUL SYLLABLE CYE\r\n\t\t0xCD08 == code || // Lo       HANGUL SYLLABLE CO\r\n\t\t0xCD24 == code || // Lo       HANGUL SYLLABLE CWA\r\n\t\t0xCD40 == code || // Lo       HANGUL SYLLABLE CWAE\r\n\t\t0xCD5C == code || // Lo       HANGUL SYLLABLE COE\r\n\t\t0xCD78 == code || // Lo       HANGUL SYLLABLE CYO\r\n\t\t0xCD94 == code || // Lo       HANGUL SYLLABLE CU\r\n\t\t0xCDB0 == code || // Lo       HANGUL SYLLABLE CWEO\r\n\t\t0xCDCC == code || // Lo       HANGUL SYLLABLE CWE\r\n\t\t0xCDE8 == code || // Lo       HANGUL SYLLABLE CWI\r\n\t\t0xCE04 == code || // Lo       HANGUL SYLLABLE CYU\r\n\t\t0xCE20 == code || // Lo       HANGUL SYLLABLE CEU\r\n\t\t0xCE3C == code || // Lo       HANGUL SYLLABLE CYI\r\n\t\t0xCE58 == code || // Lo       HANGUL SYLLABLE CI\r\n\t\t0xCE74 == code || // Lo       HANGUL SYLLABLE KA\r\n\t\t0xCE90 == code || // Lo       HANGUL SYLLABLE KAE\r\n\t\t0xCEAC == code || // Lo       HANGUL SYLLABLE KYA\r\n\t\t0xCEC8 == code || // Lo       HANGUL SYLLABLE KYAE\r\n\t\t0xCEE4 == code || // Lo       HANGUL SYLLABLE KEO\r\n\t\t0xCF00 == code || // Lo       HANGUL SYLLABLE KE\r\n\t\t0xCF1C == code || // Lo       HANGUL SYLLABLE KYEO\r\n\t\t0xCF38 == code || // Lo       HANGUL SYLLABLE KYE\r\n\t\t0xCF54 == code || // Lo       HANGUL SYLLABLE KO\r\n\t\t0xCF70 == code || // Lo       HANGUL SYLLABLE KWA\r\n\t\t0xCF8C == code || // Lo       HANGUL SYLLABLE KWAE\r\n\t\t0xCFA8 == code || // Lo       HANGUL SYLLABLE KOE\r\n\t\t0xCFC4 == code || // Lo       HANGUL SYLLABLE KYO\r\n\t\t0xCFE0 == code || // Lo       HANGUL SYLLABLE KU\r\n\t\t0xCFFC == code || // Lo       HANGUL SYLLABLE KWEO\r\n\t\t0xD018 == code || // Lo       HANGUL SYLLABLE KWE\r\n\t\t0xD034 == code || // Lo       HANGUL SYLLABLE KWI\r\n\t\t0xD050 == code || // Lo       HANGUL SYLLABLE KYU\r\n\t\t0xD06C == code || // Lo       HANGUL SYLLABLE KEU\r\n\t\t0xD088 == code || // Lo       HANGUL SYLLABLE KYI\r\n\t\t0xD0A4 == code || // Lo       HANGUL SYLLABLE KI\r\n\t\t0xD0C0 == code || // Lo       HANGUL SYLLABLE TA\r\n\t\t0xD0DC == code || // Lo       HANGUL SYLLABLE TAE\r\n\t\t0xD0F8 == code || // Lo       HANGUL SYLLABLE TYA\r\n\t\t0xD114 == code || // Lo       HANGUL SYLLABLE TYAE\r\n\t\t0xD130 == code || // Lo       HANGUL SYLLABLE TEO\r\n\t\t0xD14C == code || // Lo       HANGUL SYLLABLE TE\r\n\t\t0xD168 == code || // Lo       HANGUL SYLLABLE TYEO\r\n\t\t0xD184 == code || // Lo       HANGUL SYLLABLE TYE\r\n\t\t0xD1A0 == code || // Lo       HANGUL SYLLABLE TO\r\n\t\t0xD1BC == code || // Lo       HANGUL SYLLABLE TWA\r\n\t\t0xD1D8 == code || // Lo       HANGUL SYLLABLE TWAE\r\n\t\t0xD1F4 == code || // Lo       HANGUL SYLLABLE TOE\r\n\t\t0xD210 == code || // Lo       HANGUL SYLLABLE TYO\r\n\t\t0xD22C == code || // Lo       HANGUL SYLLABLE TU\r\n\t\t0xD248 == code || // Lo       HANGUL SYLLABLE TWEO\r\n\t\t0xD264 == code || // Lo       HANGUL SYLLABLE TWE\r\n\t\t0xD280 == code || // Lo       HANGUL SYLLABLE TWI\r\n\t\t0xD29C == code || // Lo       HANGUL SYLLABLE TYU\r\n\t\t0xD2B8 == code || // Lo       HANGUL SYLLABLE TEU\r\n\t\t0xD2D4 == code || // Lo       HANGUL SYLLABLE TYI\r\n\t\t0xD2F0 == code || // Lo       HANGUL SYLLABLE TI\r\n\t\t0xD30C == code || // Lo       HANGUL SYLLABLE PA\r\n\t\t0xD328 == code || // Lo       HANGUL SYLLABLE PAE\r\n\t\t0xD344 == code || // Lo       HANGUL SYLLABLE PYA\r\n\t\t0xD360 == code || // Lo       HANGUL SYLLABLE PYAE\r\n\t\t0xD37C == code || // Lo       HANGUL SYLLABLE PEO\r\n\t\t0xD398 == code || // Lo       HANGUL SYLLABLE PE\r\n\t\t0xD3B4 == code || // Lo       HANGUL SYLLABLE PYEO\r\n\t\t0xD3D0 == code || // Lo       HANGUL SYLLABLE PYE\r\n\t\t0xD3EC == code || // Lo       HANGUL SYLLABLE PO\r\n\t\t0xD408 == code || // Lo       HANGUL SYLLABLE PWA\r\n\t\t0xD424 == code || // Lo       HANGUL SYLLABLE PWAE\r\n\t\t0xD440 == code || // Lo       HANGUL SYLLABLE POE\r\n\t\t0xD45C == code || // Lo       HANGUL SYLLABLE PYO\r\n\t\t0xD478 == code || // Lo       HANGUL SYLLABLE PU\r\n\t\t0xD494 == code || // Lo       HANGUL SYLLABLE PWEO\r\n\t\t0xD4B0 == code || // Lo       HANGUL SYLLABLE PWE\r\n\t\t0xD4CC == code || // Lo       HANGUL SYLLABLE PWI\r\n\t\t0xD4E8 == code || // Lo       HANGUL SYLLABLE PYU\r\n\t\t0xD504 == code || // Lo       HANGUL SYLLABLE PEU\r\n\t\t0xD520 == code || // Lo       HANGUL SYLLABLE PYI\r\n\t\t0xD53C == code || // Lo       HANGUL SYLLABLE PI\r\n\t\t0xD558 == code || // Lo       HANGUL SYLLABLE HA\r\n\t\t0xD574 == code || // Lo       HANGUL SYLLABLE HAE\r\n\t\t0xD590 == code || // Lo       HANGUL SYLLABLE HYA\r\n\t\t0xD5AC == code || // Lo       HANGUL SYLLABLE HYAE\r\n\t\t0xD5C8 == code || // Lo       HANGUL SYLLABLE HEO\r\n\t\t0xD5E4 == code || // Lo       HANGUL SYLLABLE HE\r\n\t\t0xD600 == code || // Lo       HANGUL SYLLABLE HYEO\r\n\t\t0xD61C == code || // Lo       HANGUL SYLLABLE HYE\r\n\t\t0xD638 == code || // Lo       HANGUL SYLLABLE HO\r\n\t\t0xD654 == code || // Lo       HANGUL SYLLABLE HWA\r\n\t\t0xD670 == code || // Lo       HANGUL SYLLABLE HWAE\r\n\t\t0xD68C == code || // Lo       HANGUL SYLLABLE HOE\r\n\t\t0xD6A8 == code || // Lo       HANGUL SYLLABLE HYO\r\n\t\t0xD6C4 == code || // Lo       HANGUL SYLLABLE HU\r\n\t\t0xD6E0 == code || // Lo       HANGUL SYLLABLE HWEO\r\n\t\t0xD6FC == code || // Lo       HANGUL SYLLABLE HWE\r\n\t\t0xD718 == code || // Lo       HANGUL SYLLABLE HWI\r\n\t\t0xD734 == code || // Lo       HANGUL SYLLABLE HYU\r\n\t\t0xD750 == code || // Lo       HANGUL SYLLABLE HEU\r\n\t\t0xD76C == code || // Lo       HANGUL SYLLABLE HYI\r\n\t\t0xD788 == code // Lo       HANGUL SYLLABLE HI\r\n\t\t){\r\n\t\t\treturn LV;\r\n\t\t}\r\n\t\t\r\n\t\tif(\r\n\t\t(0xAC01 <= code && code <= 0xAC1B) || // Lo  [27] HANGUL SYLLABLE GAG..HANGUL SYLLABLE GAH\r\n\t\t(0xAC1D <= code && code <= 0xAC37) || // Lo  [27] HANGUL SYLLABLE GAEG..HANGUL SYLLABLE GAEH\r\n\t\t(0xAC39 <= code && code <= 0xAC53) || // Lo  [27] HANGUL SYLLABLE GYAG..HANGUL SYLLABLE GYAH\r\n\t\t(0xAC55 <= code && code <= 0xAC6F) || // Lo  [27] HANGUL SYLLABLE GYAEG..HANGUL SYLLABLE GYAEH\r\n\t\t(0xAC71 <= code && code <= 0xAC8B) || // Lo  [27] HANGUL SYLLABLE GEOG..HANGUL SYLLABLE GEOH\r\n\t\t(0xAC8D <= code && code <= 0xACA7) || // Lo  [27] HANGUL SYLLABLE GEG..HANGUL SYLLABLE GEH\r\n\t\t(0xACA9 <= code && code <= 0xACC3) || // Lo  [27] HANGUL SYLLABLE GYEOG..HANGUL SYLLABLE GYEOH\r\n\t\t(0xACC5 <= code && code <= 0xACDF) || // Lo  [27] HANGUL SYLLABLE GYEG..HANGUL SYLLABLE GYEH\r\n\t\t(0xACE1 <= code && code <= 0xACFB) || // Lo  [27] HANGUL SYLLABLE GOG..HANGUL SYLLABLE GOH\r\n\t\t(0xACFD <= code && code <= 0xAD17) || // Lo  [27] HANGUL SYLLABLE GWAG..HANGUL SYLLABLE GWAH\r\n\t\t(0xAD19 <= code && code <= 0xAD33) || // Lo  [27] HANGUL SYLLABLE GWAEG..HANGUL SYLLABLE GWAEH\r\n\t\t(0xAD35 <= code && code <= 0xAD4F) || // Lo  [27] HANGUL SYLLABLE GOEG..HANGUL SYLLABLE GOEH\r\n\t\t(0xAD51 <= code && code <= 0xAD6B) || // Lo  [27] HANGUL SYLLABLE GYOG..HANGUL SYLLABLE GYOH\r\n\t\t(0xAD6D <= code && code <= 0xAD87) || // Lo  [27] HANGUL SYLLABLE GUG..HANGUL SYLLABLE GUH\r\n\t\t(0xAD89 <= code && code <= 0xADA3) || // Lo  [27] HANGUL SYLLABLE GWEOG..HANGUL SYLLABLE GWEOH\r\n\t\t(0xADA5 <= code && code <= 0xADBF) || // Lo  [27] HANGUL SYLLABLE GWEG..HANGUL SYLLABLE GWEH\r\n\t\t(0xADC1 <= code && code <= 0xADDB) || // Lo  [27] HANGUL SYLLABLE GWIG..HANGUL SYLLABLE GWIH\r\n\t\t(0xADDD <= code && code <= 0xADF7) || // Lo  [27] HANGUL SYLLABLE GYUG..HANGUL SYLLABLE GYUH\r\n\t\t(0xADF9 <= code && code <= 0xAE13) || // Lo  [27] HANGUL SYLLABLE GEUG..HANGUL SYLLABLE GEUH\r\n\t\t(0xAE15 <= code && code <= 0xAE2F) || // Lo  [27] HANGUL SYLLABLE GYIG..HANGUL SYLLABLE GYIH\r\n\t\t(0xAE31 <= code && code <= 0xAE4B) || // Lo  [27] HANGUL SYLLABLE GIG..HANGUL SYLLABLE GIH\r\n\t\t(0xAE4D <= code && code <= 0xAE67) || // Lo  [27] HANGUL SYLLABLE GGAG..HANGUL SYLLABLE GGAH\r\n\t\t(0xAE69 <= code && code <= 0xAE83) || // Lo  [27] HANGUL SYLLABLE GGAEG..HANGUL SYLLABLE GGAEH\r\n\t\t(0xAE85 <= code && code <= 0xAE9F) || // Lo  [27] HANGUL SYLLABLE GGYAG..HANGUL SYLLABLE GGYAH\r\n\t\t(0xAEA1 <= code && code <= 0xAEBB) || // Lo  [27] HANGUL SYLLABLE GGYAEG..HANGUL SYLLABLE GGYAEH\r\n\t\t(0xAEBD <= code && code <= 0xAED7) || // Lo  [27] HANGUL SYLLABLE GGEOG..HANGUL SYLLABLE GGEOH\r\n\t\t(0xAED9 <= code && code <= 0xAEF3) || // Lo  [27] HANGUL SYLLABLE GGEG..HANGUL SYLLABLE GGEH\r\n\t\t(0xAEF5 <= code && code <= 0xAF0F) || // Lo  [27] HANGUL SYLLABLE GGYEOG..HANGUL SYLLABLE GGYEOH\r\n\t\t(0xAF11 <= code && code <= 0xAF2B) || // Lo  [27] HANGUL SYLLABLE GGYEG..HANGUL SYLLABLE GGYEH\r\n\t\t(0xAF2D <= code && code <= 0xAF47) || // Lo  [27] HANGUL SYLLABLE GGOG..HANGUL SYLLABLE GGOH\r\n\t\t(0xAF49 <= code && code <= 0xAF63) || // Lo  [27] HANGUL SYLLABLE GGWAG..HANGUL SYLLABLE GGWAH\r\n\t\t(0xAF65 <= code && code <= 0xAF7F) || // Lo  [27] HANGUL SYLLABLE GGWAEG..HANGUL SYLLABLE GGWAEH\r\n\t\t(0xAF81 <= code && code <= 0xAF9B) || // Lo  [27] HANGUL SYLLABLE GGOEG..HANGUL SYLLABLE GGOEH\r\n\t\t(0xAF9D <= code && code <= 0xAFB7) || // Lo  [27] HANGUL SYLLABLE GGYOG..HANGUL SYLLABLE GGYOH\r\n\t\t(0xAFB9 <= code && code <= 0xAFD3) || // Lo  [27] HANGUL SYLLABLE GGUG..HANGUL SYLLABLE GGUH\r\n\t\t(0xAFD5 <= code && code <= 0xAFEF) || // Lo  [27] HANGUL SYLLABLE GGWEOG..HANGUL SYLLABLE GGWEOH\r\n\t\t(0xAFF1 <= code && code <= 0xB00B) || // Lo  [27] HANGUL SYLLABLE GGWEG..HANGUL SYLLABLE GGWEH\r\n\t\t(0xB00D <= code && code <= 0xB027) || // Lo  [27] HANGUL SYLLABLE GGWIG..HANGUL SYLLABLE GGWIH\r\n\t\t(0xB029 <= code && code <= 0xB043) || // Lo  [27] HANGUL SYLLABLE GGYUG..HANGUL SYLLABLE GGYUH\r\n\t\t(0xB045 <= code && code <= 0xB05F) || // Lo  [27] HANGUL SYLLABLE GGEUG..HANGUL SYLLABLE GGEUH\r\n\t\t(0xB061 <= code && code <= 0xB07B) || // Lo  [27] HANGUL SYLLABLE GGYIG..HANGUL SYLLABLE GGYIH\r\n\t\t(0xB07D <= code && code <= 0xB097) || // Lo  [27] HANGUL SYLLABLE GGIG..HANGUL SYLLABLE GGIH\r\n\t\t(0xB099 <= code && code <= 0xB0B3) || // Lo  [27] HANGUL SYLLABLE NAG..HANGUL SYLLABLE NAH\r\n\t\t(0xB0B5 <= code && code <= 0xB0CF) || // Lo  [27] HANGUL SYLLABLE NAEG..HANGUL SYLLABLE NAEH\r\n\t\t(0xB0D1 <= code && code <= 0xB0EB) || // Lo  [27] HANGUL SYLLABLE NYAG..HANGUL SYLLABLE NYAH\r\n\t\t(0xB0ED <= code && code <= 0xB107) || // Lo  [27] HANGUL SYLLABLE NYAEG..HANGUL SYLLABLE NYAEH\r\n\t\t(0xB109 <= code && code <= 0xB123) || // Lo  [27] HANGUL SYLLABLE NEOG..HANGUL SYLLABLE NEOH\r\n\t\t(0xB125 <= code && code <= 0xB13F) || // Lo  [27] HANGUL SYLLABLE NEG..HANGUL SYLLABLE NEH\r\n\t\t(0xB141 <= code && code <= 0xB15B) || // Lo  [27] HANGUL SYLLABLE NYEOG..HANGUL SYLLABLE NYEOH\r\n\t\t(0xB15D <= code && code <= 0xB177) || // Lo  [27] HANGUL SYLLABLE NYEG..HANGUL SYLLABLE NYEH\r\n\t\t(0xB179 <= code && code <= 0xB193) || // Lo  [27] HANGUL SYLLABLE NOG..HANGUL SYLLABLE NOH\r\n\t\t(0xB195 <= code && code <= 0xB1AF) || // Lo  [27] HANGUL SYLLABLE NWAG..HANGUL SYLLABLE NWAH\r\n\t\t(0xB1B1 <= code && code <= 0xB1CB) || // Lo  [27] HANGUL SYLLABLE NWAEG..HANGUL SYLLABLE NWAEH\r\n\t\t(0xB1CD <= code && code <= 0xB1E7) || // Lo  [27] HANGUL SYLLABLE NOEG..HANGUL SYLLABLE NOEH\r\n\t\t(0xB1E9 <= code && code <= 0xB203) || // Lo  [27] HANGUL SYLLABLE NYOG..HANGUL SYLLABLE NYOH\r\n\t\t(0xB205 <= code && code <= 0xB21F) || // Lo  [27] HANGUL SYLLABLE NUG..HANGUL SYLLABLE NUH\r\n\t\t(0xB221 <= code && code <= 0xB23B) || // Lo  [27] HANGUL SYLLABLE NWEOG..HANGUL SYLLABLE NWEOH\r\n\t\t(0xB23D <= code && code <= 0xB257) || // Lo  [27] HANGUL SYLLABLE NWEG..HANGUL SYLLABLE NWEH\r\n\t\t(0xB259 <= code && code <= 0xB273) || // Lo  [27] HANGUL SYLLABLE NWIG..HANGUL SYLLABLE NWIH\r\n\t\t(0xB275 <= code && code <= 0xB28F) || // Lo  [27] HANGUL SYLLABLE NYUG..HANGUL SYLLABLE NYUH\r\n\t\t(0xB291 <= code && code <= 0xB2AB) || // Lo  [27] HANGUL SYLLABLE NEUG..HANGUL SYLLABLE NEUH\r\n\t\t(0xB2AD <= code && code <= 0xB2C7) || // Lo  [27] HANGUL SYLLABLE NYIG..HANGUL SYLLABLE NYIH\r\n\t\t(0xB2C9 <= code && code <= 0xB2E3) || // Lo  [27] HANGUL SYLLABLE NIG..HANGUL SYLLABLE NIH\r\n\t\t(0xB2E5 <= code && code <= 0xB2FF) || // Lo  [27] HANGUL SYLLABLE DAG..HANGUL SYLLABLE DAH\r\n\t\t(0xB301 <= code && code <= 0xB31B) || // Lo  [27] HANGUL SYLLABLE DAEG..HANGUL SYLLABLE DAEH\r\n\t\t(0xB31D <= code && code <= 0xB337) || // Lo  [27] HANGUL SYLLABLE DYAG..HANGUL SYLLABLE DYAH\r\n\t\t(0xB339 <= code && code <= 0xB353) || // Lo  [27] HANGUL SYLLABLE DYAEG..HANGUL SYLLABLE DYAEH\r\n\t\t(0xB355 <= code && code <= 0xB36F) || // Lo  [27] HANGUL SYLLABLE DEOG..HANGUL SYLLABLE DEOH\r\n\t\t(0xB371 <= code && code <= 0xB38B) || // Lo  [27] HANGUL SYLLABLE DEG..HANGUL SYLLABLE DEH\r\n\t\t(0xB38D <= code && code <= 0xB3A7) || // Lo  [27] HANGUL SYLLABLE DYEOG..HANGUL SYLLABLE DYEOH\r\n\t\t(0xB3A9 <= code && code <= 0xB3C3) || // Lo  [27] HANGUL SYLLABLE DYEG..HANGUL SYLLABLE DYEH\r\n\t\t(0xB3C5 <= code && code <= 0xB3DF) || // Lo  [27] HANGUL SYLLABLE DOG..HANGUL SYLLABLE DOH\r\n\t\t(0xB3E1 <= code && code <= 0xB3FB) || // Lo  [27] HANGUL SYLLABLE DWAG..HANGUL SYLLABLE DWAH\r\n\t\t(0xB3FD <= code && code <= 0xB417) || // Lo  [27] HANGUL SYLLABLE DWAEG..HANGUL SYLLABLE DWAEH\r\n\t\t(0xB419 <= code && code <= 0xB433) || // Lo  [27] HANGUL SYLLABLE DOEG..HANGUL SYLLABLE DOEH\r\n\t\t(0xB435 <= code && code <= 0xB44F) || // Lo  [27] HANGUL SYLLABLE DYOG..HANGUL SYLLABLE DYOH\r\n\t\t(0xB451 <= code && code <= 0xB46B) || // Lo  [27] HANGUL SYLLABLE DUG..HANGUL SYLLABLE DUH\r\n\t\t(0xB46D <= code && code <= 0xB487) || // Lo  [27] HANGUL SYLLABLE DWEOG..HANGUL SYLLABLE DWEOH\r\n\t\t(0xB489 <= code && code <= 0xB4A3) || // Lo  [27] HANGUL SYLLABLE DWEG..HANGUL SYLLABLE DWEH\r\n\t\t(0xB4A5 <= code && code <= 0xB4BF) || // Lo  [27] HANGUL SYLLABLE DWIG..HANGUL SYLLABLE DWIH\r\n\t\t(0xB4C1 <= code && code <= 0xB4DB) || // Lo  [27] HANGUL SYLLABLE DYUG..HANGUL SYLLABLE DYUH\r\n\t\t(0xB4DD <= code && code <= 0xB4F7) || // Lo  [27] HANGUL SYLLABLE DEUG..HANGUL SYLLABLE DEUH\r\n\t\t(0xB4F9 <= code && code <= 0xB513) || // Lo  [27] HANGUL SYLLABLE DYIG..HANGUL SYLLABLE DYIH\r\n\t\t(0xB515 <= code && code <= 0xB52F) || // Lo  [27] HANGUL SYLLABLE DIG..HANGUL SYLLABLE DIH\r\n\t\t(0xB531 <= code && code <= 0xB54B) || // Lo  [27] HANGUL SYLLABLE DDAG..HANGUL SYLLABLE DDAH\r\n\t\t(0xB54D <= code && code <= 0xB567) || // Lo  [27] HANGUL SYLLABLE DDAEG..HANGUL SYLLABLE DDAEH\r\n\t\t(0xB569 <= code && code <= 0xB583) || // Lo  [27] HANGUL SYLLABLE DDYAG..HANGUL SYLLABLE DDYAH\r\n\t\t(0xB585 <= code && code <= 0xB59F) || // Lo  [27] HANGUL SYLLABLE DDYAEG..HANGUL SYLLABLE DDYAEH\r\n\t\t(0xB5A1 <= code && code <= 0xB5BB) || // Lo  [27] HANGUL SYLLABLE DDEOG..HANGUL SYLLABLE DDEOH\r\n\t\t(0xB5BD <= code && code <= 0xB5D7) || // Lo  [27] HANGUL SYLLABLE DDEG..HANGUL SYLLABLE DDEH\r\n\t\t(0xB5D9 <= code && code <= 0xB5F3) || // Lo  [27] HANGUL SYLLABLE DDYEOG..HANGUL SYLLABLE DDYEOH\r\n\t\t(0xB5F5 <= code && code <= 0xB60F) || // Lo  [27] HANGUL SYLLABLE DDYEG..HANGUL SYLLABLE DDYEH\r\n\t\t(0xB611 <= code && code <= 0xB62B) || // Lo  [27] HANGUL SYLLABLE DDOG..HANGUL SYLLABLE DDOH\r\n\t\t(0xB62D <= code && code <= 0xB647) || // Lo  [27] HANGUL SYLLABLE DDWAG..HANGUL SYLLABLE DDWAH\r\n\t\t(0xB649 <= code && code <= 0xB663) || // Lo  [27] HANGUL SYLLABLE DDWAEG..HANGUL SYLLABLE DDWAEH\r\n\t\t(0xB665 <= code && code <= 0xB67F) || // Lo  [27] HANGUL SYLLABLE DDOEG..HANGUL SYLLABLE DDOEH\r\n\t\t(0xB681 <= code && code <= 0xB69B) || // Lo  [27] HANGUL SYLLABLE DDYOG..HANGUL SYLLABLE DDYOH\r\n\t\t(0xB69D <= code && code <= 0xB6B7) || // Lo  [27] HANGUL SYLLABLE DDUG..HANGUL SYLLABLE DDUH\r\n\t\t(0xB6B9 <= code && code <= 0xB6D3) || // Lo  [27] HANGUL SYLLABLE DDWEOG..HANGUL SYLLABLE DDWEOH\r\n\t\t(0xB6D5 <= code && code <= 0xB6EF) || // Lo  [27] HANGUL SYLLABLE DDWEG..HANGUL SYLLABLE DDWEH\r\n\t\t(0xB6F1 <= code && code <= 0xB70B) || // Lo  [27] HANGUL SYLLABLE DDWIG..HANGUL SYLLABLE DDWIH\r\n\t\t(0xB70D <= code && code <= 0xB727) || // Lo  [27] HANGUL SYLLABLE DDYUG..HANGUL SYLLABLE DDYUH\r\n\t\t(0xB729 <= code && code <= 0xB743) || // Lo  [27] HANGUL SYLLABLE DDEUG..HANGUL SYLLABLE DDEUH\r\n\t\t(0xB745 <= code && code <= 0xB75F) || // Lo  [27] HANGUL SYLLABLE DDYIG..HANGUL SYLLABLE DDYIH\r\n\t\t(0xB761 <= code && code <= 0xB77B) || // Lo  [27] HANGUL SYLLABLE DDIG..HANGUL SYLLABLE DDIH\r\n\t\t(0xB77D <= code && code <= 0xB797) || // Lo  [27] HANGUL SYLLABLE RAG..HANGUL SYLLABLE RAH\r\n\t\t(0xB799 <= code && code <= 0xB7B3) || // Lo  [27] HANGUL SYLLABLE RAEG..HANGUL SYLLABLE RAEH\r\n\t\t(0xB7B5 <= code && code <= 0xB7CF) || // Lo  [27] HANGUL SYLLABLE RYAG..HANGUL SYLLABLE RYAH\r\n\t\t(0xB7D1 <= code && code <= 0xB7EB) || // Lo  [27] HANGUL SYLLABLE RYAEG..HANGUL SYLLABLE RYAEH\r\n\t\t(0xB7ED <= code && code <= 0xB807) || // Lo  [27] HANGUL SYLLABLE REOG..HANGUL SYLLABLE REOH\r\n\t\t(0xB809 <= code && code <= 0xB823) || // Lo  [27] HANGUL SYLLABLE REG..HANGUL SYLLABLE REH\r\n\t\t(0xB825 <= code && code <= 0xB83F) || // Lo  [27] HANGUL SYLLABLE RYEOG..HANGUL SYLLABLE RYEOH\r\n\t\t(0xB841 <= code && code <= 0xB85B) || // Lo  [27] HANGUL SYLLABLE RYEG..HANGUL SYLLABLE RYEH\r\n\t\t(0xB85D <= code && code <= 0xB877) || // Lo  [27] HANGUL SYLLABLE ROG..HANGUL SYLLABLE ROH\r\n\t\t(0xB879 <= code && code <= 0xB893) || // Lo  [27] HANGUL SYLLABLE RWAG..HANGUL SYLLABLE RWAH\r\n\t\t(0xB895 <= code && code <= 0xB8AF) || // Lo  [27] HANGUL SYLLABLE RWAEG..HANGUL SYLLABLE RWAEH\r\n\t\t(0xB8B1 <= code && code <= 0xB8CB) || // Lo  [27] HANGUL SYLLABLE ROEG..HANGUL SYLLABLE ROEH\r\n\t\t(0xB8CD <= code && code <= 0xB8E7) || // Lo  [27] HANGUL SYLLABLE RYOG..HANGUL SYLLABLE RYOH\r\n\t\t(0xB8E9 <= code && code <= 0xB903) || // Lo  [27] HANGUL SYLLABLE RUG..HANGUL SYLLABLE RUH\r\n\t\t(0xB905 <= code && code <= 0xB91F) || // Lo  [27] HANGUL SYLLABLE RWEOG..HANGUL SYLLABLE RWEOH\r\n\t\t(0xB921 <= code && code <= 0xB93B) || // Lo  [27] HANGUL SYLLABLE RWEG..HANGUL SYLLABLE RWEH\r\n\t\t(0xB93D <= code && code <= 0xB957) || // Lo  [27] HANGUL SYLLABLE RWIG..HANGUL SYLLABLE RWIH\r\n\t\t(0xB959 <= code && code <= 0xB973) || // Lo  [27] HANGUL SYLLABLE RYUG..HANGUL SYLLABLE RYUH\r\n\t\t(0xB975 <= code && code <= 0xB98F) || // Lo  [27] HANGUL SYLLABLE REUG..HANGUL SYLLABLE REUH\r\n\t\t(0xB991 <= code && code <= 0xB9AB) || // Lo  [27] HANGUL SYLLABLE RYIG..HANGUL SYLLABLE RYIH\r\n\t\t(0xB9AD <= code && code <= 0xB9C7) || // Lo  [27] HANGUL SYLLABLE RIG..HANGUL SYLLABLE RIH\r\n\t\t(0xB9C9 <= code && code <= 0xB9E3) || // Lo  [27] HANGUL SYLLABLE MAG..HANGUL SYLLABLE MAH\r\n\t\t(0xB9E5 <= code && code <= 0xB9FF) || // Lo  [27] HANGUL SYLLABLE MAEG..HANGUL SYLLABLE MAEH\r\n\t\t(0xBA01 <= code && code <= 0xBA1B) || // Lo  [27] HANGUL SYLLABLE MYAG..HANGUL SYLLABLE MYAH\r\n\t\t(0xBA1D <= code && code <= 0xBA37) || // Lo  [27] HANGUL SYLLABLE MYAEG..HANGUL SYLLABLE MYAEH\r\n\t\t(0xBA39 <= code && code <= 0xBA53) || // Lo  [27] HANGUL SYLLABLE MEOG..HANGUL SYLLABLE MEOH\r\n\t\t(0xBA55 <= code && code <= 0xBA6F) || // Lo  [27] HANGUL SYLLABLE MEG..HANGUL SYLLABLE MEH\r\n\t\t(0xBA71 <= code && code <= 0xBA8B) || // Lo  [27] HANGUL SYLLABLE MYEOG..HANGUL SYLLABLE MYEOH\r\n\t\t(0xBA8D <= code && code <= 0xBAA7) || // Lo  [27] HANGUL SYLLABLE MYEG..HANGUL SYLLABLE MYEH\r\n\t\t(0xBAA9 <= code && code <= 0xBAC3) || // Lo  [27] HANGUL SYLLABLE MOG..HANGUL SYLLABLE MOH\r\n\t\t(0xBAC5 <= code && code <= 0xBADF) || // Lo  [27] HANGUL SYLLABLE MWAG..HANGUL SYLLABLE MWAH\r\n\t\t(0xBAE1 <= code && code <= 0xBAFB) || // Lo  [27] HANGUL SYLLABLE MWAEG..HANGUL SYLLABLE MWAEH\r\n\t\t(0xBAFD <= code && code <= 0xBB17) || // Lo  [27] HANGUL SYLLABLE MOEG..HANGUL SYLLABLE MOEH\r\n\t\t(0xBB19 <= code && code <= 0xBB33) || // Lo  [27] HANGUL SYLLABLE MYOG..HANGUL SYLLABLE MYOH\r\n\t\t(0xBB35 <= code && code <= 0xBB4F) || // Lo  [27] HANGUL SYLLABLE MUG..HANGUL SYLLABLE MUH\r\n\t\t(0xBB51 <= code && code <= 0xBB6B) || // Lo  [27] HANGUL SYLLABLE MWEOG..HANGUL SYLLABLE MWEOH\r\n\t\t(0xBB6D <= code && code <= 0xBB87) || // Lo  [27] HANGUL SYLLABLE MWEG..HANGUL SYLLABLE MWEH\r\n\t\t(0xBB89 <= code && code <= 0xBBA3) || // Lo  [27] HANGUL SYLLABLE MWIG..HANGUL SYLLABLE MWIH\r\n\t\t(0xBBA5 <= code && code <= 0xBBBF) || // Lo  [27] HANGUL SYLLABLE MYUG..HANGUL SYLLABLE MYUH\r\n\t\t(0xBBC1 <= code && code <= 0xBBDB) || // Lo  [27] HANGUL SYLLABLE MEUG..HANGUL SYLLABLE MEUH\r\n\t\t(0xBBDD <= code && code <= 0xBBF7) || // Lo  [27] HANGUL SYLLABLE MYIG..HANGUL SYLLABLE MYIH\r\n\t\t(0xBBF9 <= code && code <= 0xBC13) || // Lo  [27] HANGUL SYLLABLE MIG..HANGUL SYLLABLE MIH\r\n\t\t(0xBC15 <= code && code <= 0xBC2F) || // Lo  [27] HANGUL SYLLABLE BAG..HANGUL SYLLABLE BAH\r\n\t\t(0xBC31 <= code && code <= 0xBC4B) || // Lo  [27] HANGUL SYLLABLE BAEG..HANGUL SYLLABLE BAEH\r\n\t\t(0xBC4D <= code && code <= 0xBC67) || // Lo  [27] HANGUL SYLLABLE BYAG..HANGUL SYLLABLE BYAH\r\n\t\t(0xBC69 <= code && code <= 0xBC83) || // Lo  [27] HANGUL SYLLABLE BYAEG..HANGUL SYLLABLE BYAEH\r\n\t\t(0xBC85 <= code && code <= 0xBC9F) || // Lo  [27] HANGUL SYLLABLE BEOG..HANGUL SYLLABLE BEOH\r\n\t\t(0xBCA1 <= code && code <= 0xBCBB) || // Lo  [27] HANGUL SYLLABLE BEG..HANGUL SYLLABLE BEH\r\n\t\t(0xBCBD <= code && code <= 0xBCD7) || // Lo  [27] HANGUL SYLLABLE BYEOG..HANGUL SYLLABLE BYEOH\r\n\t\t(0xBCD9 <= code && code <= 0xBCF3) || // Lo  [27] HANGUL SYLLABLE BYEG..HANGUL SYLLABLE BYEH\r\n\t\t(0xBCF5 <= code && code <= 0xBD0F) || // Lo  [27] HANGUL SYLLABLE BOG..HANGUL SYLLABLE BOH\r\n\t\t(0xBD11 <= code && code <= 0xBD2B) || // Lo  [27] HANGUL SYLLABLE BWAG..HANGUL SYLLABLE BWAH\r\n\t\t(0xBD2D <= code && code <= 0xBD47) || // Lo  [27] HANGUL SYLLABLE BWAEG..HANGUL SYLLABLE BWAEH\r\n\t\t(0xBD49 <= code && code <= 0xBD63) || // Lo  [27] HANGUL SYLLABLE BOEG..HANGUL SYLLABLE BOEH\r\n\t\t(0xBD65 <= code && code <= 0xBD7F) || // Lo  [27] HANGUL SYLLABLE BYOG..HANGUL SYLLABLE BYOH\r\n\t\t(0xBD81 <= code && code <= 0xBD9B) || // Lo  [27] HANGUL SYLLABLE BUG..HANGUL SYLLABLE BUH\r\n\t\t(0xBD9D <= code && code <= 0xBDB7) || // Lo  [27] HANGUL SYLLABLE BWEOG..HANGUL SYLLABLE BWEOH\r\n\t\t(0xBDB9 <= code && code <= 0xBDD3) || // Lo  [27] HANGUL SYLLABLE BWEG..HANGUL SYLLABLE BWEH\r\n\t\t(0xBDD5 <= code && code <= 0xBDEF) || // Lo  [27] HANGUL SYLLABLE BWIG..HANGUL SYLLABLE BWIH\r\n\t\t(0xBDF1 <= code && code <= 0xBE0B) || // Lo  [27] HANGUL SYLLABLE BYUG..HANGUL SYLLABLE BYUH\r\n\t\t(0xBE0D <= code && code <= 0xBE27) || // Lo  [27] HANGUL SYLLABLE BEUG..HANGUL SYLLABLE BEUH\r\n\t\t(0xBE29 <= code && code <= 0xBE43) || // Lo  [27] HANGUL SYLLABLE BYIG..HANGUL SYLLABLE BYIH\r\n\t\t(0xBE45 <= code && code <= 0xBE5F) || // Lo  [27] HANGUL SYLLABLE BIG..HANGUL SYLLABLE BIH\r\n\t\t(0xBE61 <= code && code <= 0xBE7B) || // Lo  [27] HANGUL SYLLABLE BBAG..HANGUL SYLLABLE BBAH\r\n\t\t(0xBE7D <= code && code <= 0xBE97) || // Lo  [27] HANGUL SYLLABLE BBAEG..HANGUL SYLLABLE BBAEH\r\n\t\t(0xBE99 <= code && code <= 0xBEB3) || // Lo  [27] HANGUL SYLLABLE BBYAG..HANGUL SYLLABLE BBYAH\r\n\t\t(0xBEB5 <= code && code <= 0xBECF) || // Lo  [27] HANGUL SYLLABLE BBYAEG..HANGUL SYLLABLE BBYAEH\r\n\t\t(0xBED1 <= code && code <= 0xBEEB) || // Lo  [27] HANGUL SYLLABLE BBEOG..HANGUL SYLLABLE BBEOH\r\n\t\t(0xBEED <= code && code <= 0xBF07) || // Lo  [27] HANGUL SYLLABLE BBEG..HANGUL SYLLABLE BBEH\r\n\t\t(0xBF09 <= code && code <= 0xBF23) || // Lo  [27] HANGUL SYLLABLE BBYEOG..HANGUL SYLLABLE BBYEOH\r\n\t\t(0xBF25 <= code && code <= 0xBF3F) || // Lo  [27] HANGUL SYLLABLE BBYEG..HANGUL SYLLABLE BBYEH\r\n\t\t(0xBF41 <= code && code <= 0xBF5B) || // Lo  [27] HANGUL SYLLABLE BBOG..HANGUL SYLLABLE BBOH\r\n\t\t(0xBF5D <= code && code <= 0xBF77) || // Lo  [27] HANGUL SYLLABLE BBWAG..HANGUL SYLLABLE BBWAH\r\n\t\t(0xBF79 <= code && code <= 0xBF93) || // Lo  [27] HANGUL SYLLABLE BBWAEG..HANGUL SYLLABLE BBWAEH\r\n\t\t(0xBF95 <= code && code <= 0xBFAF) || // Lo  [27] HANGUL SYLLABLE BBOEG..HANGUL SYLLABLE BBOEH\r\n\t\t(0xBFB1 <= code && code <= 0xBFCB) || // Lo  [27] HANGUL SYLLABLE BBYOG..HANGUL SYLLABLE BBYOH\r\n\t\t(0xBFCD <= code && code <= 0xBFE7) || // Lo  [27] HANGUL SYLLABLE BBUG..HANGUL SYLLABLE BBUH\r\n\t\t(0xBFE9 <= code && code <= 0xC003) || // Lo  [27] HANGUL SYLLABLE BBWEOG..HANGUL SYLLABLE BBWEOH\r\n\t\t(0xC005 <= code && code <= 0xC01F) || // Lo  [27] HANGUL SYLLABLE BBWEG..HANGUL SYLLABLE BBWEH\r\n\t\t(0xC021 <= code && code <= 0xC03B) || // Lo  [27] HANGUL SYLLABLE BBWIG..HANGUL SYLLABLE BBWIH\r\n\t\t(0xC03D <= code && code <= 0xC057) || // Lo  [27] HANGUL SYLLABLE BBYUG..HANGUL SYLLABLE BBYUH\r\n\t\t(0xC059 <= code && code <= 0xC073) || // Lo  [27] HANGUL SYLLABLE BBEUG..HANGUL SYLLABLE BBEUH\r\n\t\t(0xC075 <= code && code <= 0xC08F) || // Lo  [27] HANGUL SYLLABLE BBYIG..HANGUL SYLLABLE BBYIH\r\n\t\t(0xC091 <= code && code <= 0xC0AB) || // Lo  [27] HANGUL SYLLABLE BBIG..HANGUL SYLLABLE BBIH\r\n\t\t(0xC0AD <= code && code <= 0xC0C7) || // Lo  [27] HANGUL SYLLABLE SAG..HANGUL SYLLABLE SAH\r\n\t\t(0xC0C9 <= code && code <= 0xC0E3) || // Lo  [27] HANGUL SYLLABLE SAEG..HANGUL SYLLABLE SAEH\r\n\t\t(0xC0E5 <= code && code <= 0xC0FF) || // Lo  [27] HANGUL SYLLABLE SYAG..HANGUL SYLLABLE SYAH\r\n\t\t(0xC101 <= code && code <= 0xC11B) || // Lo  [27] HANGUL SYLLABLE SYAEG..HANGUL SYLLABLE SYAEH\r\n\t\t(0xC11D <= code && code <= 0xC137) || // Lo  [27] HANGUL SYLLABLE SEOG..HANGUL SYLLABLE SEOH\r\n\t\t(0xC139 <= code && code <= 0xC153) || // Lo  [27] HANGUL SYLLABLE SEG..HANGUL SYLLABLE SEH\r\n\t\t(0xC155 <= code && code <= 0xC16F) || // Lo  [27] HANGUL SYLLABLE SYEOG..HANGUL SYLLABLE SYEOH\r\n\t\t(0xC171 <= code && code <= 0xC18B) || // Lo  [27] HANGUL SYLLABLE SYEG..HANGUL SYLLABLE SYEH\r\n\t\t(0xC18D <= code && code <= 0xC1A7) || // Lo  [27] HANGUL SYLLABLE SOG..HANGUL SYLLABLE SOH\r\n\t\t(0xC1A9 <= code && code <= 0xC1C3) || // Lo  [27] HANGUL SYLLABLE SWAG..HANGUL SYLLABLE SWAH\r\n\t\t(0xC1C5 <= code && code <= 0xC1DF) || // Lo  [27] HANGUL SYLLABLE SWAEG..HANGUL SYLLABLE SWAEH\r\n\t\t(0xC1E1 <= code && code <= 0xC1FB) || // Lo  [27] HANGUL SYLLABLE SOEG..HANGUL SYLLABLE SOEH\r\n\t\t(0xC1FD <= code && code <= 0xC217) || // Lo  [27] HANGUL SYLLABLE SYOG..HANGUL SYLLABLE SYOH\r\n\t\t(0xC219 <= code && code <= 0xC233) || // Lo  [27] HANGUL SYLLABLE SUG..HANGUL SYLLABLE SUH\r\n\t\t(0xC235 <= code && code <= 0xC24F) || // Lo  [27] HANGUL SYLLABLE SWEOG..HANGUL SYLLABLE SWEOH\r\n\t\t(0xC251 <= code && code <= 0xC26B) || // Lo  [27] HANGUL SYLLABLE SWEG..HANGUL SYLLABLE SWEH\r\n\t\t(0xC26D <= code && code <= 0xC287) || // Lo  [27] HANGUL SYLLABLE SWIG..HANGUL SYLLABLE SWIH\r\n\t\t(0xC289 <= code && code <= 0xC2A3) || // Lo  [27] HANGUL SYLLABLE SYUG..HANGUL SYLLABLE SYUH\r\n\t\t(0xC2A5 <= code && code <= 0xC2BF) || // Lo  [27] HANGUL SYLLABLE SEUG..HANGUL SYLLABLE SEUH\r\n\t\t(0xC2C1 <= code && code <= 0xC2DB) || // Lo  [27] HANGUL SYLLABLE SYIG..HANGUL SYLLABLE SYIH\r\n\t\t(0xC2DD <= code && code <= 0xC2F7) || // Lo  [27] HANGUL SYLLABLE SIG..HANGUL SYLLABLE SIH\r\n\t\t(0xC2F9 <= code && code <= 0xC313) || // Lo  [27] HANGUL SYLLABLE SSAG..HANGUL SYLLABLE SSAH\r\n\t\t(0xC315 <= code && code <= 0xC32F) || // Lo  [27] HANGUL SYLLABLE SSAEG..HANGUL SYLLABLE SSAEH\r\n\t\t(0xC331 <= code && code <= 0xC34B) || // Lo  [27] HANGUL SYLLABLE SSYAG..HANGUL SYLLABLE SSYAH\r\n\t\t(0xC34D <= code && code <= 0xC367) || // Lo  [27] HANGUL SYLLABLE SSYAEG..HANGUL SYLLABLE SSYAEH\r\n\t\t(0xC369 <= code && code <= 0xC383) || // Lo  [27] HANGUL SYLLABLE SSEOG..HANGUL SYLLABLE SSEOH\r\n\t\t(0xC385 <= code && code <= 0xC39F) || // Lo  [27] HANGUL SYLLABLE SSEG..HANGUL SYLLABLE SSEH\r\n\t\t(0xC3A1 <= code && code <= 0xC3BB) || // Lo  [27] HANGUL SYLLABLE SSYEOG..HANGUL SYLLABLE SSYEOH\r\n\t\t(0xC3BD <= code && code <= 0xC3D7) || // Lo  [27] HANGUL SYLLABLE SSYEG..HANGUL SYLLABLE SSYEH\r\n\t\t(0xC3D9 <= code && code <= 0xC3F3) || // Lo  [27] HANGUL SYLLABLE SSOG..HANGUL SYLLABLE SSOH\r\n\t\t(0xC3F5 <= code && code <= 0xC40F) || // Lo  [27] HANGUL SYLLABLE SSWAG..HANGUL SYLLABLE SSWAH\r\n\t\t(0xC411 <= code && code <= 0xC42B) || // Lo  [27] HANGUL SYLLABLE SSWAEG..HANGUL SYLLABLE SSWAEH\r\n\t\t(0xC42D <= code && code <= 0xC447) || // Lo  [27] HANGUL SYLLABLE SSOEG..HANGUL SYLLABLE SSOEH\r\n\t\t(0xC449 <= code && code <= 0xC463) || // Lo  [27] HANGUL SYLLABLE SSYOG..HANGUL SYLLABLE SSYOH\r\n\t\t(0xC465 <= code && code <= 0xC47F) || // Lo  [27] HANGUL SYLLABLE SSUG..HANGUL SYLLABLE SSUH\r\n\t\t(0xC481 <= code && code <= 0xC49B) || // Lo  [27] HANGUL SYLLABLE SSWEOG..HANGUL SYLLABLE SSWEOH\r\n\t\t(0xC49D <= code && code <= 0xC4B7) || // Lo  [27] HANGUL SYLLABLE SSWEG..HANGUL SYLLABLE SSWEH\r\n\t\t(0xC4B9 <= code && code <= 0xC4D3) || // Lo  [27] HANGUL SYLLABLE SSWIG..HANGUL SYLLABLE SSWIH\r\n\t\t(0xC4D5 <= code && code <= 0xC4EF) || // Lo  [27] HANGUL SYLLABLE SSYUG..HANGUL SYLLABLE SSYUH\r\n\t\t(0xC4F1 <= code && code <= 0xC50B) || // Lo  [27] HANGUL SYLLABLE SSEUG..HANGUL SYLLABLE SSEUH\r\n\t\t(0xC50D <= code && code <= 0xC527) || // Lo  [27] HANGUL SYLLABLE SSYIG..HANGUL SYLLABLE SSYIH\r\n\t\t(0xC529 <= code && code <= 0xC543) || // Lo  [27] HANGUL SYLLABLE SSIG..HANGUL SYLLABLE SSIH\r\n\t\t(0xC545 <= code && code <= 0xC55F) || // Lo  [27] HANGUL SYLLABLE AG..HANGUL SYLLABLE AH\r\n\t\t(0xC561 <= code && code <= 0xC57B) || // Lo  [27] HANGUL SYLLABLE AEG..HANGUL SYLLABLE AEH\r\n\t\t(0xC57D <= code && code <= 0xC597) || // Lo  [27] HANGUL SYLLABLE YAG..HANGUL SYLLABLE YAH\r\n\t\t(0xC599 <= code && code <= 0xC5B3) || // Lo  [27] HANGUL SYLLABLE YAEG..HANGUL SYLLABLE YAEH\r\n\t\t(0xC5B5 <= code && code <= 0xC5CF) || // Lo  [27] HANGUL SYLLABLE EOG..HANGUL SYLLABLE EOH\r\n\t\t(0xC5D1 <= code && code <= 0xC5EB) || // Lo  [27] HANGUL SYLLABLE EG..HANGUL SYLLABLE EH\r\n\t\t(0xC5ED <= code && code <= 0xC607) || // Lo  [27] HANGUL SYLLABLE YEOG..HANGUL SYLLABLE YEOH\r\n\t\t(0xC609 <= code && code <= 0xC623) || // Lo  [27] HANGUL SYLLABLE YEG..HANGUL SYLLABLE YEH\r\n\t\t(0xC625 <= code && code <= 0xC63F) || // Lo  [27] HANGUL SYLLABLE OG..HANGUL SYLLABLE OH\r\n\t\t(0xC641 <= code && code <= 0xC65B) || // Lo  [27] HANGUL SYLLABLE WAG..HANGUL SYLLABLE WAH\r\n\t\t(0xC65D <= code && code <= 0xC677) || // Lo  [27] HANGUL SYLLABLE WAEG..HANGUL SYLLABLE WAEH\r\n\t\t(0xC679 <= code && code <= 0xC693) || // Lo  [27] HANGUL SYLLABLE OEG..HANGUL SYLLABLE OEH\r\n\t\t(0xC695 <= code && code <= 0xC6AF) || // Lo  [27] HANGUL SYLLABLE YOG..HANGUL SYLLABLE YOH\r\n\t\t(0xC6B1 <= code && code <= 0xC6CB) || // Lo  [27] HANGUL SYLLABLE UG..HANGUL SYLLABLE UH\r\n\t\t(0xC6CD <= code && code <= 0xC6E7) || // Lo  [27] HANGUL SYLLABLE WEOG..HANGUL SYLLABLE WEOH\r\n\t\t(0xC6E9 <= code && code <= 0xC703) || // Lo  [27] HANGUL SYLLABLE WEG..HANGUL SYLLABLE WEH\r\n\t\t(0xC705 <= code && code <= 0xC71F) || // Lo  [27] HANGUL SYLLABLE WIG..HANGUL SYLLABLE WIH\r\n\t\t(0xC721 <= code && code <= 0xC73B) || // Lo  [27] HANGUL SYLLABLE YUG..HANGUL SYLLABLE YUH\r\n\t\t(0xC73D <= code && code <= 0xC757) || // Lo  [27] HANGUL SYLLABLE EUG..HANGUL SYLLABLE EUH\r\n\t\t(0xC759 <= code && code <= 0xC773) || // Lo  [27] HANGUL SYLLABLE YIG..HANGUL SYLLABLE YIH\r\n\t\t(0xC775 <= code && code <= 0xC78F) || // Lo  [27] HANGUL SYLLABLE IG..HANGUL SYLLABLE IH\r\n\t\t(0xC791 <= code && code <= 0xC7AB) || // Lo  [27] HANGUL SYLLABLE JAG..HANGUL SYLLABLE JAH\r\n\t\t(0xC7AD <= code && code <= 0xC7C7) || // Lo  [27] HANGUL SYLLABLE JAEG..HANGUL SYLLABLE JAEH\r\n\t\t(0xC7C9 <= code && code <= 0xC7E3) || // Lo  [27] HANGUL SYLLABLE JYAG..HANGUL SYLLABLE JYAH\r\n\t\t(0xC7E5 <= code && code <= 0xC7FF) || // Lo  [27] HANGUL SYLLABLE JYAEG..HANGUL SYLLABLE JYAEH\r\n\t\t(0xC801 <= code && code <= 0xC81B) || // Lo  [27] HANGUL SYLLABLE JEOG..HANGUL SYLLABLE JEOH\r\n\t\t(0xC81D <= code && code <= 0xC837) || // Lo  [27] HANGUL SYLLABLE JEG..HANGUL SYLLABLE JEH\r\n\t\t(0xC839 <= code && code <= 0xC853) || // Lo  [27] HANGUL SYLLABLE JYEOG..HANGUL SYLLABLE JYEOH\r\n\t\t(0xC855 <= code && code <= 0xC86F) || // Lo  [27] HANGUL SYLLABLE JYEG..HANGUL SYLLABLE JYEH\r\n\t\t(0xC871 <= code && code <= 0xC88B) || // Lo  [27] HANGUL SYLLABLE JOG..HANGUL SYLLABLE JOH\r\n\t\t(0xC88D <= code && code <= 0xC8A7) || // Lo  [27] HANGUL SYLLABLE JWAG..HANGUL SYLLABLE JWAH\r\n\t\t(0xC8A9 <= code && code <= 0xC8C3) || // Lo  [27] HANGUL SYLLABLE JWAEG..HANGUL SYLLABLE JWAEH\r\n\t\t(0xC8C5 <= code && code <= 0xC8DF) || // Lo  [27] HANGUL SYLLABLE JOEG..HANGUL SYLLABLE JOEH\r\n\t\t(0xC8E1 <= code && code <= 0xC8FB) || // Lo  [27] HANGUL SYLLABLE JYOG..HANGUL SYLLABLE JYOH\r\n\t\t(0xC8FD <= code && code <= 0xC917) || // Lo  [27] HANGUL SYLLABLE JUG..HANGUL SYLLABLE JUH\r\n\t\t(0xC919 <= code && code <= 0xC933) || // Lo  [27] HANGUL SYLLABLE JWEOG..HANGUL SYLLABLE JWEOH\r\n\t\t(0xC935 <= code && code <= 0xC94F) || // Lo  [27] HANGUL SYLLABLE JWEG..HANGUL SYLLABLE JWEH\r\n\t\t(0xC951 <= code && code <= 0xC96B) || // Lo  [27] HANGUL SYLLABLE JWIG..HANGUL SYLLABLE JWIH\r\n\t\t(0xC96D <= code && code <= 0xC987) || // Lo  [27] HANGUL SYLLABLE JYUG..HANGUL SYLLABLE JYUH\r\n\t\t(0xC989 <= code && code <= 0xC9A3) || // Lo  [27] HANGUL SYLLABLE JEUG..HANGUL SYLLABLE JEUH\r\n\t\t(0xC9A5 <= code && code <= 0xC9BF) || // Lo  [27] HANGUL SYLLABLE JYIG..HANGUL SYLLABLE JYIH\r\n\t\t(0xC9C1 <= code && code <= 0xC9DB) || // Lo  [27] HANGUL SYLLABLE JIG..HANGUL SYLLABLE JIH\r\n\t\t(0xC9DD <= code && code <= 0xC9F7) || // Lo  [27] HANGUL SYLLABLE JJAG..HANGUL SYLLABLE JJAH\r\n\t\t(0xC9F9 <= code && code <= 0xCA13) || // Lo  [27] HANGUL SYLLABLE JJAEG..HANGUL SYLLABLE JJAEH\r\n\t\t(0xCA15 <= code && code <= 0xCA2F) || // Lo  [27] HANGUL SYLLABLE JJYAG..HANGUL SYLLABLE JJYAH\r\n\t\t(0xCA31 <= code && code <= 0xCA4B) || // Lo  [27] HANGUL SYLLABLE JJYAEG..HANGUL SYLLABLE JJYAEH\r\n\t\t(0xCA4D <= code && code <= 0xCA67) || // Lo  [27] HANGUL SYLLABLE JJEOG..HANGUL SYLLABLE JJEOH\r\n\t\t(0xCA69 <= code && code <= 0xCA83) || // Lo  [27] HANGUL SYLLABLE JJEG..HANGUL SYLLABLE JJEH\r\n\t\t(0xCA85 <= code && code <= 0xCA9F) || // Lo  [27] HANGUL SYLLABLE JJYEOG..HANGUL SYLLABLE JJYEOH\r\n\t\t(0xCAA1 <= code && code <= 0xCABB) || // Lo  [27] HANGUL SYLLABLE JJYEG..HANGUL SYLLABLE JJYEH\r\n\t\t(0xCABD <= code && code <= 0xCAD7) || // Lo  [27] HANGUL SYLLABLE JJOG..HANGUL SYLLABLE JJOH\r\n\t\t(0xCAD9 <= code && code <= 0xCAF3) || // Lo  [27] HANGUL SYLLABLE JJWAG..HANGUL SYLLABLE JJWAH\r\n\t\t(0xCAF5 <= code && code <= 0xCB0F) || // Lo  [27] HANGUL SYLLABLE JJWAEG..HANGUL SYLLABLE JJWAEH\r\n\t\t(0xCB11 <= code && code <= 0xCB2B) || // Lo  [27] HANGUL SYLLABLE JJOEG..HANGUL SYLLABLE JJOEH\r\n\t\t(0xCB2D <= code && code <= 0xCB47) || // Lo  [27] HANGUL SYLLABLE JJYOG..HANGUL SYLLABLE JJYOH\r\n\t\t(0xCB49 <= code && code <= 0xCB63) || // Lo  [27] HANGUL SYLLABLE JJUG..HANGUL SYLLABLE JJUH\r\n\t\t(0xCB65 <= code && code <= 0xCB7F) || // Lo  [27] HANGUL SYLLABLE JJWEOG..HANGUL SYLLABLE JJWEOH\r\n\t\t(0xCB81 <= code && code <= 0xCB9B) || // Lo  [27] HANGUL SYLLABLE JJWEG..HANGUL SYLLABLE JJWEH\r\n\t\t(0xCB9D <= code && code <= 0xCBB7) || // Lo  [27] HANGUL SYLLABLE JJWIG..HANGUL SYLLABLE JJWIH\r\n\t\t(0xCBB9 <= code && code <= 0xCBD3) || // Lo  [27] HANGUL SYLLABLE JJYUG..HANGUL SYLLABLE JJYUH\r\n\t\t(0xCBD5 <= code && code <= 0xCBEF) || // Lo  [27] HANGUL SYLLABLE JJEUG..HANGUL SYLLABLE JJEUH\r\n\t\t(0xCBF1 <= code && code <= 0xCC0B) || // Lo  [27] HANGUL SYLLABLE JJYIG..HANGUL SYLLABLE JJYIH\r\n\t\t(0xCC0D <= code && code <= 0xCC27) || // Lo  [27] HANGUL SYLLABLE JJIG..HANGUL SYLLABLE JJIH\r\n\t\t(0xCC29 <= code && code <= 0xCC43) || // Lo  [27] HANGUL SYLLABLE CAG..HANGUL SYLLABLE CAH\r\n\t\t(0xCC45 <= code && code <= 0xCC5F) || // Lo  [27] HANGUL SYLLABLE CAEG..HANGUL SYLLABLE CAEH\r\n\t\t(0xCC61 <= code && code <= 0xCC7B) || // Lo  [27] HANGUL SYLLABLE CYAG..HANGUL SYLLABLE CYAH\r\n\t\t(0xCC7D <= code && code <= 0xCC97) || // Lo  [27] HANGUL SYLLABLE CYAEG..HANGUL SYLLABLE CYAEH\r\n\t\t(0xCC99 <= code && code <= 0xCCB3) || // Lo  [27] HANGUL SYLLABLE CEOG..HANGUL SYLLABLE CEOH\r\n\t\t(0xCCB5 <= code && code <= 0xCCCF) || // Lo  [27] HANGUL SYLLABLE CEG..HANGUL SYLLABLE CEH\r\n\t\t(0xCCD1 <= code && code <= 0xCCEB) || // Lo  [27] HANGUL SYLLABLE CYEOG..HANGUL SYLLABLE CYEOH\r\n\t\t(0xCCED <= code && code <= 0xCD07) || // Lo  [27] HANGUL SYLLABLE CYEG..HANGUL SYLLABLE CYEH\r\n\t\t(0xCD09 <= code && code <= 0xCD23) || // Lo  [27] HANGUL SYLLABLE COG..HANGUL SYLLABLE COH\r\n\t\t(0xCD25 <= code && code <= 0xCD3F) || // Lo  [27] HANGUL SYLLABLE CWAG..HANGUL SYLLABLE CWAH\r\n\t\t(0xCD41 <= code && code <= 0xCD5B) || // Lo  [27] HANGUL SYLLABLE CWAEG..HANGUL SYLLABLE CWAEH\r\n\t\t(0xCD5D <= code && code <= 0xCD77) || // Lo  [27] HANGUL SYLLABLE COEG..HANGUL SYLLABLE COEH\r\n\t\t(0xCD79 <= code && code <= 0xCD93) || // Lo  [27] HANGUL SYLLABLE CYOG..HANGUL SYLLABLE CYOH\r\n\t\t(0xCD95 <= code && code <= 0xCDAF) || // Lo  [27] HANGUL SYLLABLE CUG..HANGUL SYLLABLE CUH\r\n\t\t(0xCDB1 <= code && code <= 0xCDCB) || // Lo  [27] HANGUL SYLLABLE CWEOG..HANGUL SYLLABLE CWEOH\r\n\t\t(0xCDCD <= code && code <= 0xCDE7) || // Lo  [27] HANGUL SYLLABLE CWEG..HANGUL SYLLABLE CWEH\r\n\t\t(0xCDE9 <= code && code <= 0xCE03) || // Lo  [27] HANGUL SYLLABLE CWIG..HANGUL SYLLABLE CWIH\r\n\t\t(0xCE05 <= code && code <= 0xCE1F) || // Lo  [27] HANGUL SYLLABLE CYUG..HANGUL SYLLABLE CYUH\r\n\t\t(0xCE21 <= code && code <= 0xCE3B) || // Lo  [27] HANGUL SYLLABLE CEUG..HANGUL SYLLABLE CEUH\r\n\t\t(0xCE3D <= code && code <= 0xCE57) || // Lo  [27] HANGUL SYLLABLE CYIG..HANGUL SYLLABLE CYIH\r\n\t\t(0xCE59 <= code && code <= 0xCE73) || // Lo  [27] HANGUL SYLLABLE CIG..HANGUL SYLLABLE CIH\r\n\t\t(0xCE75 <= code && code <= 0xCE8F) || // Lo  [27] HANGUL SYLLABLE KAG..HANGUL SYLLABLE KAH\r\n\t\t(0xCE91 <= code && code <= 0xCEAB) || // Lo  [27] HANGUL SYLLABLE KAEG..HANGUL SYLLABLE KAEH\r\n\t\t(0xCEAD <= code && code <= 0xCEC7) || // Lo  [27] HANGUL SYLLABLE KYAG..HANGUL SYLLABLE KYAH\r\n\t\t(0xCEC9 <= code && code <= 0xCEE3) || // Lo  [27] HANGUL SYLLABLE KYAEG..HANGUL SYLLABLE KYAEH\r\n\t\t(0xCEE5 <= code && code <= 0xCEFF) || // Lo  [27] HANGUL SYLLABLE KEOG..HANGUL SYLLABLE KEOH\r\n\t\t(0xCF01 <= code && code <= 0xCF1B) || // Lo  [27] HANGUL SYLLABLE KEG..HANGUL SYLLABLE KEH\r\n\t\t(0xCF1D <= code && code <= 0xCF37) || // Lo  [27] HANGUL SYLLABLE KYEOG..HANGUL SYLLABLE KYEOH\r\n\t\t(0xCF39 <= code && code <= 0xCF53) || // Lo  [27] HANGUL SYLLABLE KYEG..HANGUL SYLLABLE KYEH\r\n\t\t(0xCF55 <= code && code <= 0xCF6F) || // Lo  [27] HANGUL SYLLABLE KOG..HANGUL SYLLABLE KOH\r\n\t\t(0xCF71 <= code && code <= 0xCF8B) || // Lo  [27] HANGUL SYLLABLE KWAG..HANGUL SYLLABLE KWAH\r\n\t\t(0xCF8D <= code && code <= 0xCFA7) || // Lo  [27] HANGUL SYLLABLE KWAEG..HANGUL SYLLABLE KWAEH\r\n\t\t(0xCFA9 <= code && code <= 0xCFC3) || // Lo  [27] HANGUL SYLLABLE KOEG..HANGUL SYLLABLE KOEH\r\n\t\t(0xCFC5 <= code && code <= 0xCFDF) || // Lo  [27] HANGUL SYLLABLE KYOG..HANGUL SYLLABLE KYOH\r\n\t\t(0xCFE1 <= code && code <= 0xCFFB) || // Lo  [27] HANGUL SYLLABLE KUG..HANGUL SYLLABLE KUH\r\n\t\t(0xCFFD <= code && code <= 0xD017) || // Lo  [27] HANGUL SYLLABLE KWEOG..HANGUL SYLLABLE KWEOH\r\n\t\t(0xD019 <= code && code <= 0xD033) || // Lo  [27] HANGUL SYLLABLE KWEG..HANGUL SYLLABLE KWEH\r\n\t\t(0xD035 <= code && code <= 0xD04F) || // Lo  [27] HANGUL SYLLABLE KWIG..HANGUL SYLLABLE KWIH\r\n\t\t(0xD051 <= code && code <= 0xD06B) || // Lo  [27] HANGUL SYLLABLE KYUG..HANGUL SYLLABLE KYUH\r\n\t\t(0xD06D <= code && code <= 0xD087) || // Lo  [27] HANGUL SYLLABLE KEUG..HANGUL SYLLABLE KEUH\r\n\t\t(0xD089 <= code && code <= 0xD0A3) || // Lo  [27] HANGUL SYLLABLE KYIG..HANGUL SYLLABLE KYIH\r\n\t\t(0xD0A5 <= code && code <= 0xD0BF) || // Lo  [27] HANGUL SYLLABLE KIG..HANGUL SYLLABLE KIH\r\n\t\t(0xD0C1 <= code && code <= 0xD0DB) || // Lo  [27] HANGUL SYLLABLE TAG..HANGUL SYLLABLE TAH\r\n\t\t(0xD0DD <= code && code <= 0xD0F7) || // Lo  [27] HANGUL SYLLABLE TAEG..HANGUL SYLLABLE TAEH\r\n\t\t(0xD0F9 <= code && code <= 0xD113) || // Lo  [27] HANGUL SYLLABLE TYAG..HANGUL SYLLABLE TYAH\r\n\t\t(0xD115 <= code && code <= 0xD12F) || // Lo  [27] HANGUL SYLLABLE TYAEG..HANGUL SYLLABLE TYAEH\r\n\t\t(0xD131 <= code && code <= 0xD14B) || // Lo  [27] HANGUL SYLLABLE TEOG..HANGUL SYLLABLE TEOH\r\n\t\t(0xD14D <= code && code <= 0xD167) || // Lo  [27] HANGUL SYLLABLE TEG..HANGUL SYLLABLE TEH\r\n\t\t(0xD169 <= code && code <= 0xD183) || // Lo  [27] HANGUL SYLLABLE TYEOG..HANGUL SYLLABLE TYEOH\r\n\t\t(0xD185 <= code && code <= 0xD19F) || // Lo  [27] HANGUL SYLLABLE TYEG..HANGUL SYLLABLE TYEH\r\n\t\t(0xD1A1 <= code && code <= 0xD1BB) || // Lo  [27] HANGUL SYLLABLE TOG..HANGUL SYLLABLE TOH\r\n\t\t(0xD1BD <= code && code <= 0xD1D7) || // Lo  [27] HANGUL SYLLABLE TWAG..HANGUL SYLLABLE TWAH\r\n\t\t(0xD1D9 <= code && code <= 0xD1F3) || // Lo  [27] HANGUL SYLLABLE TWAEG..HANGUL SYLLABLE TWAEH\r\n\t\t(0xD1F5 <= code && code <= 0xD20F) || // Lo  [27] HANGUL SYLLABLE TOEG..HANGUL SYLLABLE TOEH\r\n\t\t(0xD211 <= code && code <= 0xD22B) || // Lo  [27] HANGUL SYLLABLE TYOG..HANGUL SYLLABLE TYOH\r\n\t\t(0xD22D <= code && code <= 0xD247) || // Lo  [27] HANGUL SYLLABLE TUG..HANGUL SYLLABLE TUH\r\n\t\t(0xD249 <= code && code <= 0xD263) || // Lo  [27] HANGUL SYLLABLE TWEOG..HANGUL SYLLABLE TWEOH\r\n\t\t(0xD265 <= code && code <= 0xD27F) || // Lo  [27] HANGUL SYLLABLE TWEG..HANGUL SYLLABLE TWEH\r\n\t\t(0xD281 <= code && code <= 0xD29B) || // Lo  [27] HANGUL SYLLABLE TWIG..HANGUL SYLLABLE TWIH\r\n\t\t(0xD29D <= code && code <= 0xD2B7) || // Lo  [27] HANGUL SYLLABLE TYUG..HANGUL SYLLABLE TYUH\r\n\t\t(0xD2B9 <= code && code <= 0xD2D3) || // Lo  [27] HANGUL SYLLABLE TEUG..HANGUL SYLLABLE TEUH\r\n\t\t(0xD2D5 <= code && code <= 0xD2EF) || // Lo  [27] HANGUL SYLLABLE TYIG..HANGUL SYLLABLE TYIH\r\n\t\t(0xD2F1 <= code && code <= 0xD30B) || // Lo  [27] HANGUL SYLLABLE TIG..HANGUL SYLLABLE TIH\r\n\t\t(0xD30D <= code && code <= 0xD327) || // Lo  [27] HANGUL SYLLABLE PAG..HANGUL SYLLABLE PAH\r\n\t\t(0xD329 <= code && code <= 0xD343) || // Lo  [27] HANGUL SYLLABLE PAEG..HANGUL SYLLABLE PAEH\r\n\t\t(0xD345 <= code && code <= 0xD35F) || // Lo  [27] HANGUL SYLLABLE PYAG..HANGUL SYLLABLE PYAH\r\n\t\t(0xD361 <= code && code <= 0xD37B) || // Lo  [27] HANGUL SYLLABLE PYAEG..HANGUL SYLLABLE PYAEH\r\n\t\t(0xD37D <= code && code <= 0xD397) || // Lo  [27] HANGUL SYLLABLE PEOG..HANGUL SYLLABLE PEOH\r\n\t\t(0xD399 <= code && code <= 0xD3B3) || // Lo  [27] HANGUL SYLLABLE PEG..HANGUL SYLLABLE PEH\r\n\t\t(0xD3B5 <= code && code <= 0xD3CF) || // Lo  [27] HANGUL SYLLABLE PYEOG..HANGUL SYLLABLE PYEOH\r\n\t\t(0xD3D1 <= code && code <= 0xD3EB) || // Lo  [27] HANGUL SYLLABLE PYEG..HANGUL SYLLABLE PYEH\r\n\t\t(0xD3ED <= code && code <= 0xD407) || // Lo  [27] HANGUL SYLLABLE POG..HANGUL SYLLABLE POH\r\n\t\t(0xD409 <= code && code <= 0xD423) || // Lo  [27] HANGUL SYLLABLE PWAG..HANGUL SYLLABLE PWAH\r\n\t\t(0xD425 <= code && code <= 0xD43F) || // Lo  [27] HANGUL SYLLABLE PWAEG..HANGUL SYLLABLE PWAEH\r\n\t\t(0xD441 <= code && code <= 0xD45B) || // Lo  [27] HANGUL SYLLABLE POEG..HANGUL SYLLABLE POEH\r\n\t\t(0xD45D <= code && code <= 0xD477) || // Lo  [27] HANGUL SYLLABLE PYOG..HANGUL SYLLABLE PYOH\r\n\t\t(0xD479 <= code && code <= 0xD493) || // Lo  [27] HANGUL SYLLABLE PUG..HANGUL SYLLABLE PUH\r\n\t\t(0xD495 <= code && code <= 0xD4AF) || // Lo  [27] HANGUL SYLLABLE PWEOG..HANGUL SYLLABLE PWEOH\r\n\t\t(0xD4B1 <= code && code <= 0xD4CB) || // Lo  [27] HANGUL SYLLABLE PWEG..HANGUL SYLLABLE PWEH\r\n\t\t(0xD4CD <= code && code <= 0xD4E7) || // Lo  [27] HANGUL SYLLABLE PWIG..HANGUL SYLLABLE PWIH\r\n\t\t(0xD4E9 <= code && code <= 0xD503) || // Lo  [27] HANGUL SYLLABLE PYUG..HANGUL SYLLABLE PYUH\r\n\t\t(0xD505 <= code && code <= 0xD51F) || // Lo  [27] HANGUL SYLLABLE PEUG..HANGUL SYLLABLE PEUH\r\n\t\t(0xD521 <= code && code <= 0xD53B) || // Lo  [27] HANGUL SYLLABLE PYIG..HANGUL SYLLABLE PYIH\r\n\t\t(0xD53D <= code && code <= 0xD557) || // Lo  [27] HANGUL SYLLABLE PIG..HANGUL SYLLABLE PIH\r\n\t\t(0xD559 <= code && code <= 0xD573) || // Lo  [27] HANGUL SYLLABLE HAG..HANGUL SYLLABLE HAH\r\n\t\t(0xD575 <= code && code <= 0xD58F) || // Lo  [27] HANGUL SYLLABLE HAEG..HANGUL SYLLABLE HAEH\r\n\t\t(0xD591 <= code && code <= 0xD5AB) || // Lo  [27] HANGUL SYLLABLE HYAG..HANGUL SYLLABLE HYAH\r\n\t\t(0xD5AD <= code && code <= 0xD5C7) || // Lo  [27] HANGUL SYLLABLE HYAEG..HANGUL SYLLABLE HYAEH\r\n\t\t(0xD5C9 <= code && code <= 0xD5E3) || // Lo  [27] HANGUL SYLLABLE HEOG..HANGUL SYLLABLE HEOH\r\n\t\t(0xD5E5 <= code && code <= 0xD5FF) || // Lo  [27] HANGUL SYLLABLE HEG..HANGUL SYLLABLE HEH\r\n\t\t(0xD601 <= code && code <= 0xD61B) || // Lo  [27] HANGUL SYLLABLE HYEOG..HANGUL SYLLABLE HYEOH\r\n\t\t(0xD61D <= code && code <= 0xD637) || // Lo  [27] HANGUL SYLLABLE HYEG..HANGUL SYLLABLE HYEH\r\n\t\t(0xD639 <= code && code <= 0xD653) || // Lo  [27] HANGUL SYLLABLE HOG..HANGUL SYLLABLE HOH\r\n\t\t(0xD655 <= code && code <= 0xD66F) || // Lo  [27] HANGUL SYLLABLE HWAG..HANGUL SYLLABLE HWAH\r\n\t\t(0xD671 <= code && code <= 0xD68B) || // Lo  [27] HANGUL SYLLABLE HWAEG..HANGUL SYLLABLE HWAEH\r\n\t\t(0xD68D <= code && code <= 0xD6A7) || // Lo  [27] HANGUL SYLLABLE HOEG..HANGUL SYLLABLE HOEH\r\n\t\t(0xD6A9 <= code && code <= 0xD6C3) || // Lo  [27] HANGUL SYLLABLE HYOG..HANGUL SYLLABLE HYOH\r\n\t\t(0xD6C5 <= code && code <= 0xD6DF) || // Lo  [27] HANGUL SYLLABLE HUG..HANGUL SYLLABLE HUH\r\n\t\t(0xD6E1 <= code && code <= 0xD6FB) || // Lo  [27] HANGUL SYLLABLE HWEOG..HANGUL SYLLABLE HWEOH\r\n\t\t(0xD6FD <= code && code <= 0xD717) || // Lo  [27] HANGUL SYLLABLE HWEG..HANGUL SYLLABLE HWEH\r\n\t\t(0xD719 <= code && code <= 0xD733) || // Lo  [27] HANGUL SYLLABLE HWIG..HANGUL SYLLABLE HWIH\r\n\t\t(0xD735 <= code && code <= 0xD74F) || // Lo  [27] HANGUL SYLLABLE HYUG..HANGUL SYLLABLE HYUH\r\n\t\t(0xD751 <= code && code <= 0xD76B) || // Lo  [27] HANGUL SYLLABLE HEUG..HANGUL SYLLABLE HEUH\r\n\t\t(0xD76D <= code && code <= 0xD787) || // Lo  [27] HANGUL SYLLABLE HYIG..HANGUL SYLLABLE HYIH\r\n\t\t(0xD789 <= code && code <= 0xD7A3) // Lo  [27] HANGUL SYLLABLE HIG..HANGUL SYLLABLE HIH\r\n\t\t){\r\n\t\t\treturn LVT;\r\n\t\t}\r\n\t\t\r\n\t\tif(\r\n\t\t0x261D == code || // So       WHITE UP POINTING INDEX\r\n\t\t0x26F9 == code || // So       PERSON WITH BALL\r\n\t\t(0x270A <= code && code <= 0x270D) || // So   [4] RAISED FIST..WRITING HAND\r\n\t\t0x1F385 == code || // So       FATHER CHRISTMAS\r\n\t\t(0x1F3C2 <= code && code <= 0x1F3C4) || // So   [3] SNOWBOARDER..SURFER\r\n\t\t0x1F3C7 == code || // So       HORSE RACING\r\n\t\t(0x1F3CA <= code && code <= 0x1F3CC) || // So   [3] SWIMMER..GOLFER\r\n\t\t(0x1F442 <= code && code <= 0x1F443) || // So   [2] EAR..NOSE\r\n\t\t(0x1F446 <= code && code <= 0x1F450) || // So  [11] WHITE UP POINTING BACKHAND INDEX..OPEN HANDS SIGN\r\n\t\t0x1F46E == code || // So       POLICE OFFICER\r\n\t\t(0x1F470 <= code && code <= 0x1F478) || // So   [9] BRIDE WITH VEIL..PRINCESS\r\n\t\t0x1F47C == code || // So       BABY ANGEL\r\n\t\t(0x1F481 <= code && code <= 0x1F483) || // So   [3] INFORMATION DESK PERSON..DANCER\r\n\t\t(0x1F485 <= code && code <= 0x1F487) || // So   [3] NAIL POLISH..HAIRCUT\r\n\t\t0x1F4AA == code || // So       FLEXED BICEPS\r\n\t\t(0x1F574 <= code && code <= 0x1F575) || // So   [2] MAN IN BUSINESS SUIT LEVITATING..SLEUTH OR SPY\r\n\t\t0x1F57A == code || // So       MAN DANCING\r\n\t\t0x1F590 == code || // So       RAISED HAND WITH FINGERS SPLAYED\r\n\t\t(0x1F595 <= code && code <= 0x1F596) || // So   [2] REVERSED HAND WITH MIDDLE FINGER EXTENDED..RAISED HAND WITH PART BETWEEN MIDDLE AND RING FINGERS\r\n\t\t(0x1F645 <= code && code <= 0x1F647) || // So   [3] FACE WITH NO GOOD GESTURE..PERSON BOWING DEEPLY\r\n\t\t(0x1F64B <= code && code <= 0x1F64F) || // So   [5] HAPPY PERSON RAISING ONE HAND..PERSON WITH FOLDED HANDS\r\n\t\t0x1F6A3 == code || // So       ROWBOAT\r\n\t\t(0x1F6B4 <= code && code <= 0x1F6B6) || // So   [3] BICYCLIST..PEDESTRIAN\r\n\t\t0x1F6C0 == code || // So       BATH\r\n\t\t0x1F6CC == code || // So       SLEEPING ACCOMMODATION\r\n\t\t(0x1F918 <= code && code <= 0x1F91C) || // So   [5] SIGN OF THE HORNS..RIGHT-FACING FIST\r\n\t\t(0x1F91E <= code && code <= 0x1F91F) || // So   [2] HAND WITH INDEX AND MIDDLE FINGERS CROSSED..I LOVE YOU HAND SIGN\r\n\t\t0x1F926 == code || // So       FACE PALM\r\n\t\t(0x1F930 <= code && code <= 0x1F939) || // So  [10] PREGNANT WOMAN..JUGGLING\r\n\t\t(0x1F93D <= code && code <= 0x1F93E) || // So   [2] WATER POLO..HANDBALL\r\n\t\t(0x1F9D1 <= code && code <= 0x1F9DD) // So  [13] ADULT..ELF\r\n\t\t){\r\n\t\t\treturn E_Base;\r\n\t\t}\r\n\r\n\t\tif(\r\n\t\t(0x1F3FB <= code && code <= 0x1F3FF) // Sk   [5] EMOJI MODIFIER FITZPATRICK TYPE-1-2..EMOJI MODIFIER FITZPATRICK TYPE-6\r\n\t\t){\r\n\t\t\treturn E_Modifier;\r\n\t\t}\r\n\r\n\t\tif(\r\n\t\t0x200D == code // Cf       ZERO WIDTH JOINER\r\n\t\t){\r\n\t\t\treturn ZWJ;\r\n\t\t}\r\n\r\n\t\tif(\r\n\t\t0x2640 == code || // So       FEMALE SIGN\r\n\t\t0x2642 == code || // So       MALE SIGN\r\n\t\t(0x2695 <= code && code <= 0x2696) || // So   [2] STAFF OF AESCULAPIUS..SCALES\r\n\t\t0x2708 == code || // So       AIRPLANE\r\n\t\t0x2764 == code || // So       HEAVY BLACK HEART\r\n\t\t0x1F308 == code || // So       RAINBOW\r\n\t\t0x1F33E == code || // So       EAR OF RICE\r\n\t\t0x1F373 == code || // So       COOKING\r\n\t\t0x1F393 == code || // So       GRADUATION CAP\r\n\t\t0x1F3A4 == code || // So       MICROPHONE\r\n\t\t0x1F3A8 == code || // So       ARTIST PALETTE\r\n\t\t0x1F3EB == code || // So       SCHOOL\r\n\t\t0x1F3ED == code || // So       FACTORY\r\n\t\t0x1F48B == code || // So       KISS MARK\r\n\t\t(0x1F4BB <= code && code <= 0x1F4BC) || // So   [2] PERSONAL COMPUTER..BRIEFCASE\r\n\t\t0x1F527 == code || // So       WRENCH\r\n\t\t0x1F52C == code || // So       MICROSCOPE\r\n\t\t0x1F5E8 == code || // So       LEFT SPEECH BUBBLE\r\n\t\t0x1F680 == code || // So       ROCKET\r\n\t\t0x1F692 == code // So       FIRE ENGINE\r\n\t\t){\r\n\t\t\treturn Glue_After_Zwj;\r\n\t\t}\r\n\r\n\t\tif(\r\n\t\t(0x1F466 <= code && code <= 0x1F469) // So   [4] BOY..WOMAN\r\n\t\t){\r\n\t\t\treturn E_Base_GAZ;\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t//all unlisted characters have a grapheme break property of \"Other\"\r\n\t\treturn Other;\r\n\t}\r\n\treturn this;\r\n}\r\n\r\nif (typeof module != 'undefined' && module.exports) {\r\n    module.exports = GraphemeSplitter;\r\n}\r\n","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./language-services\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Common = require(\"./common\");\r\nconst currentDocumentSymbolProvider_1 = require(\"./currentDocumentSymbolProvider\");\r\nconst InspectionHelpers = require(\"./inspectionHelpers\");\r\nconst keywordProvider_1 = require(\"./keywordProvider\");\r\nconst providers_1 = require(\"./providers\");\r\nconst WorkspaceCache = require(\"./workspaceCache\");\r\nfunction createAnalysisSession(document, position, options) {\r\n    return new DocumentAnalysis(document, position, options);\r\n}\r\nexports.createAnalysisSession = createAnalysisSession;\r\nclass DocumentAnalysis {\r\n    constructor(document, position, options) {\r\n        this.document = document;\r\n        this.position = position;\r\n        this.environmentSymbolProvider = options.environmentSymbolProvider\r\n            ? options.environmentSymbolProvider\r\n            : new providers_1.NullLibrarySymbolProvider();\r\n        this.keywordProvider = new keywordProvider_1.KeywordProvider();\r\n        this.librarySymbolProvider = options.librarySymbolProvider\r\n            ? options.librarySymbolProvider\r\n            : new providers_1.NullLibrarySymbolProvider();\r\n        this.localSymbolProvider = new currentDocumentSymbolProvider_1.CurrentDocumentSymbolProvider(document, position);\r\n    }\r\n    getCompletionItems() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let context = {};\r\n            const maybeToken = maybeTokenAt(this.document, this.position);\r\n            if (maybeToken !== undefined) {\r\n                context = {\r\n                    range: getTokenRangeForPosition(maybeToken, this.position),\r\n                    text: maybeToken.data,\r\n                    tokenKind: maybeToken.kind,\r\n                };\r\n            }\r\n            // TODO: intellisense improvements\r\n            // - honor expected data type\r\n            // - get inspection for current scope\r\n            // - only include current query name after @\r\n            // - don't return completion items when on lefthand side of assignment\r\n            // TODO: add tracing/logging to the catch()\r\n            const getLibraryCompletionItems = this.librarySymbolProvider\r\n                .getCompletionItems(context)\r\n                .catch(() => {\r\n                return Common.EmptyCompletionItems;\r\n            });\r\n            const getKeywords = this.keywordProvider.getCompletionItems(context).catch(() => {\r\n                return Common.EmptyCompletionItems;\r\n            });\r\n            const getEnvironmentCompletionItems = this.environmentSymbolProvider\r\n                .getCompletionItems(context)\r\n                .catch(() => {\r\n                return Common.EmptyCompletionItems;\r\n            });\r\n            const getLocalCompletionItems = this.localSymbolProvider\r\n                .getCompletionItems(context)\r\n                .catch(() => {\r\n                return Common.EmptyCompletionItems;\r\n            });\r\n            const [libraryResponse, keywordResponse, environmentResponse, localResponse] = yield Promise.all([\r\n                getLibraryCompletionItems,\r\n                getKeywords,\r\n                getEnvironmentCompletionItems,\r\n                getLocalCompletionItems,\r\n            ]);\r\n            let completionItems = Array.isArray(keywordResponse) ? keywordResponse : [keywordResponse];\r\n            completionItems = completionItems.concat(libraryResponse, environmentResponse, localResponse);\r\n            return completionItems;\r\n        });\r\n    }\r\n    getHover() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const identifierToken = maybeIdentifierAt(this.document, this.position);\r\n            if (identifierToken) {\r\n                const context = {\r\n                    range: getTokenRangeForPosition(identifierToken, this.position),\r\n                    identifier: identifierToken.data,\r\n                };\r\n                // TODO: add tracing/logging to the catch()\r\n                const getLibraryHover = this.librarySymbolProvider.getHover(context).catch(() => {\r\n                    // tslint:disable-next-line: no-null-keyword\r\n                    return null;\r\n                });\r\n                // TODO: use other providers\r\n                // TODO: define priority when multiple providers return results\r\n                const [libraryResponse] = yield Promise.all([getLibraryHover]);\r\n                if (libraryResponse) {\r\n                    return libraryResponse;\r\n                }\r\n            }\r\n            return Common.EmptyHover;\r\n        });\r\n    }\r\n    getSignatureHelp() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const triedInspection = WorkspaceCache.getTriedInspection(this.document, this.position);\r\n            if (triedInspection && triedInspection.kind === \"Ok\" /* Ok */) {\r\n                const inspected = triedInspection.value;\r\n                const maybeContext = InspectionHelpers.getContextForInspected(inspected);\r\n                if (maybeContext !== undefined) {\r\n                    const context = maybeContext;\r\n                    if (context.maybeFunctionName) {\r\n                        // TODO: add tracing/logging to the catch()\r\n                        const librarySignatureHelp = this.librarySymbolProvider\r\n                            .getSignatureHelp(context)\r\n                            .catch(() => {\r\n                            // tslint:disable-next-line: no-null-keyword\r\n                            return null;\r\n                        });\r\n                        const [libraryResponse] = yield Promise.all([librarySignatureHelp]);\r\n                        if (libraryResponse) {\r\n                            return libraryResponse;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return Common.EmptySignatureHelp;\r\n        });\r\n    }\r\n}\r\nfunction getTokenRangeForPosition(token, cursorPosition) {\r\n    return {\r\n        start: {\r\n            line: cursorPosition.line,\r\n            character: token.positionStart,\r\n        },\r\n        end: {\r\n            line: cursorPosition.line,\r\n            character: token.positionEnd,\r\n        },\r\n    };\r\n}\r\nfunction maybeIdentifierAt(document, position) {\r\n    const maybeToken = maybeTokenAt(document, position);\r\n    if (maybeToken) {\r\n        const token = maybeToken;\r\n        if (token.kind === \"Identifier\" /* Identifier */) {\r\n            return token;\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\nfunction maybeLineTokensAt(document, position) {\r\n    const lexResult = WorkspaceCache.getLexerState(document);\r\n    const maybeLine = lexResult.lines[position.line];\r\n    return maybeLine !== undefined ? maybeLine.tokens : undefined;\r\n}\r\nfunction maybeTokenAt(document, position) {\r\n    const maybeLineTokens = maybeLineTokensAt(document, position);\r\n    if (maybeLineTokens === undefined) {\r\n        return undefined;\r\n    }\r\n    const lineTokens = maybeLineTokens;\r\n    for (const token of lineTokens) {\r\n        if (token.positionStart <= position.character && token.positionEnd >= position.character) {\r\n            return token;\r\n        }\r\n    }\r\n    // Token wasn't found - check for special case where current position is a trailing \".\" on an identifier\r\n    const currentRange = {\r\n        start: {\r\n            line: position.line,\r\n            character: position.character - 1,\r\n        },\r\n        end: position,\r\n    };\r\n    if (document.getText(currentRange) === \".\") {\r\n        for (const token of lineTokens) {\r\n            if (token.positionStart <= position.character - 1 && token.positionEnd >= position.character - 1) {\r\n                if (token.kind === \"Identifier\" /* Identifier */) {\r\n                    // Use this token with an adjusted position\r\n                    return {\r\n                        data: `${token.data}.`,\r\n                        kind: token.kind,\r\n                        positionStart: token.positionStart,\r\n                        positionEnd: token.positionEnd + 1,\r\n                    };\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return undefined;\r\n}\r\n//# sourceMappingURL=analysis.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nexports.EmptyCompletionItems = [];\r\nexports.EmptyHover = {\r\n    range: undefined,\r\n    contents: [],\r\n};\r\nexports.EmptySignatureHelp = {\r\n    signatures: [],\r\n    // tslint:disable-next-line: no-null-keyword\r\n    activeParameter: null,\r\n    activeSignature: 0,\r\n};\r\nfunction documentSymbolToCompletionItem(documentSymbols) {\r\n    const result = [];\r\n    documentSymbols.forEach(sym => {\r\n        result.push({\r\n            deprecated: sym.deprecated,\r\n            detail: sym.detail,\r\n            label: sym.name,\r\n            kind: symbolKindToCompletionItemKind(sym.kind),\r\n        });\r\n    });\r\n    return result;\r\n}\r\nexports.documentSymbolToCompletionItem = documentSymbolToCompletionItem;\r\nfunction symbolKindToCompletionItemKind(symbolKind) {\r\n    switch (symbolKind) {\r\n        case vscode_languageserver_types_1.SymbolKind.Module:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Module;\r\n        case vscode_languageserver_types_1.SymbolKind.Field:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Field;\r\n        case vscode_languageserver_types_1.SymbolKind.Constructor:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Constructor;\r\n        case vscode_languageserver_types_1.SymbolKind.Enum:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Enum;\r\n        case vscode_languageserver_types_1.SymbolKind.EnumMember:\r\n            return vscode_languageserver_types_1.CompletionItemKind.EnumMember;\r\n        case vscode_languageserver_types_1.SymbolKind.Function:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Function;\r\n        case vscode_languageserver_types_1.SymbolKind.Variable:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Variable;\r\n        case vscode_languageserver_types_1.SymbolKind.Constant:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Constant;\r\n        case vscode_languageserver_types_1.SymbolKind.Array:\r\n        case vscode_languageserver_types_1.SymbolKind.Boolean:\r\n        case vscode_languageserver_types_1.SymbolKind.Number:\r\n        case vscode_languageserver_types_1.SymbolKind.Null:\r\n        case vscode_languageserver_types_1.SymbolKind.String:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Value;\r\n        case vscode_languageserver_types_1.SymbolKind.Struct:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Struct;\r\n        case vscode_languageserver_types_1.SymbolKind.TypeParameter:\r\n            return vscode_languageserver_types_1.CompletionItemKind.TypeParameter;\r\n        default:\r\n            return undefined;\r\n    }\r\n}\r\nexports.symbolKindToCompletionItemKind = symbolKindToCompletionItemKind;\r\nfunction tokenPositionToPosition(tokenPosition) {\r\n    return {\r\n        line: tokenPosition.lineNumber,\r\n        character: tokenPosition.lineCodeUnit,\r\n    };\r\n}\r\nexports.tokenPositionToPosition = tokenPositionToPosition;\r\nfunction tokenPositionToRange(startTokenPosition, endTokenPosition) {\r\n    if (startTokenPosition && endTokenPosition) {\r\n        return {\r\n            start: tokenPositionToPosition(startTokenPosition),\r\n            end: tokenPositionToPosition(endTokenPosition),\r\n        };\r\n    }\r\n    return undefined;\r\n}\r\nexports.tokenPositionToRange = tokenPositionToRange;\r\nfunction tokenRangeToRange(tokenRange) {\r\n    return tokenPositionToRange(tokenRange.positionStart, tokenRange.positionEnd);\r\n}\r\nexports.tokenRangeToRange = tokenRangeToRange;\r\n//# sourceMappingURL=common.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst Common = require(\"./common\");\r\nconst InspectionHelpers = require(\"./inspectionHelpers\");\r\nconst WorkspaceCache = require(\"./workspaceCache\");\r\nclass CurrentDocumentSymbolProvider {\r\n    constructor(textDocument, position) {\r\n        this.document = textDocument;\r\n        this.position = position;\r\n    }\r\n    getCompletionItems(_context) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return Common.documentSymbolToCompletionItem(this.getDocumentSymbols());\r\n        });\r\n    }\r\n    getHover(_context) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // TODO: implement - documentSymbols should be a map\r\n            // tslint:disable-next-line: no-null-keyword\r\n            return null;\r\n        });\r\n    }\r\n    getSignatureHelp(_context) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // TODO: store parser/node info so we can reconstruct the function parameters\r\n            // tslint:disable-next-line: no-null-keyword\r\n            return null;\r\n        });\r\n    }\r\n    getDocumentSymbols() {\r\n        if (this.documentSymbols === undefined) {\r\n            this.documentSymbols = [];\r\n            const triedInspection = WorkspaceCache.getTriedInspection(this.document, this.position);\r\n            if (triedInspection && triedInspection.kind === \"Ok\" /* Ok */) {\r\n                const inspected = triedInspection.value;\r\n                this.documentSymbols = InspectionHelpers.getSymbolsForInspectionScope(inspected);\r\n            }\r\n        }\r\n        return this.documentSymbols;\r\n    }\r\n}\r\nexports.CurrentDocumentSymbolProvider = CurrentDocumentSymbolProvider;\r\n//# sourceMappingURL=currentDocumentSymbolProvider.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst WorkspaceCache = require(\"./workspaceCache\");\r\nfunction documentUpdated(document) {\r\n    WorkspaceCache.update(document);\r\n}\r\nexports.documentUpdated = documentUpdated;\r\nfunction documentClosed(document) {\r\n    WorkspaceCache.close(document);\r\n}\r\nexports.documentClosed = documentClosed;\r\n__export(require(\"./analysis\"));\r\n__export(require(\"./providers\"));\r\n__export(require(\"./validation\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst PQP = require(\"@microsoft/powerquery-parser\");\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst Common = require(\"./common\");\r\nfunction getContextForInspected(inspected) {\r\n    return inspected.maybeInvokeExpression !== undefined\r\n        ? getContextForInvokeExpression(inspected.maybeInvokeExpression)\r\n        : undefined;\r\n}\r\nexports.getContextForInspected = getContextForInspected;\r\nfunction getContextForInvokeExpression(maybeExpression) {\r\n    const functionName = maybeExpression.maybeName !== undefined ? maybeExpression.maybeName : undefined;\r\n    const argumentOrdinal = maybeExpression.maybeArguments !== undefined ? maybeExpression.maybeArguments.positionArgumentIndex : undefined;\r\n    if (functionName !== undefined || argumentOrdinal !== undefined) {\r\n        return {\r\n            maybeArgumentOrdinal: argumentOrdinal,\r\n            maybeFunctionName: functionName,\r\n        };\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n}\r\nexports.getContextForInvokeExpression = getContextForInvokeExpression;\r\nfunction getSymbolKindForLiteralExpression(node) {\r\n    switch (node.literalKind) {\r\n        case \"List\" /* List */:\r\n            return vscode_languageserver_types_1.SymbolKind.Array;\r\n        case \"Logical\" /* Logical */:\r\n            return vscode_languageserver_types_1.SymbolKind.Boolean;\r\n        case \"Null\" /* Null */:\r\n            return vscode_languageserver_types_1.SymbolKind.Null;\r\n        case \"Numeric\" /* Numeric */:\r\n            return vscode_languageserver_types_1.SymbolKind.Number;\r\n        case \"Record\" /* Record */:\r\n            return vscode_languageserver_types_1.SymbolKind.Struct;\r\n        case \"Str\" /* Str */:\r\n            return vscode_languageserver_types_1.SymbolKind.String;\r\n        default:\r\n            return PQP.isNever(node.literalKind);\r\n    }\r\n}\r\nexports.getSymbolKindForLiteralExpression = getSymbolKindForLiteralExpression;\r\nfunction getSymbolKindFromNode(node) {\r\n    switch (node.kind) {\r\n        case \"Constant\" /* Constant */:\r\n            return vscode_languageserver_types_1.SymbolKind.Constant;\r\n        case \"FunctionExpression\" /* FunctionExpression */:\r\n            return vscode_languageserver_types_1.SymbolKind.Function;\r\n        case \"ListExpression\" /* ListExpression */:\r\n            return vscode_languageserver_types_1.SymbolKind.Array;\r\n        case \"LiteralExpression\" /* LiteralExpression */:\r\n            return getSymbolKindForLiteralExpression(node);\r\n        case \"MetadataExpression\" /* MetadataExpression */:\r\n            return vscode_languageserver_types_1.SymbolKind.TypeParameter;\r\n        case \"RecordExpression\" /* RecordExpression */:\r\n            return vscode_languageserver_types_1.SymbolKind.Struct;\r\n        default:\r\n            return vscode_languageserver_types_1.SymbolKind.Variable;\r\n    }\r\n}\r\nexports.getSymbolKindFromNode = getSymbolKindFromNode;\r\nfunction getSymbolsForLetExpression(expressionNode) {\r\n    const documentSymbols = [];\r\n    for (const element of expressionNode.variableList.elements) {\r\n        const pairedExpression = element;\r\n        const memberSymbol = getSymbolForIdentifierPairedExpression(pairedExpression.node);\r\n        documentSymbols.push(memberSymbol);\r\n    }\r\n    return documentSymbols;\r\n}\r\nexports.getSymbolsForLetExpression = getSymbolsForLetExpression;\r\nfunction getSymbolsForSection(sectionNode) {\r\n    const documentSymbols = [];\r\n    for (const member of sectionNode.sectionMembers.elements) {\r\n        const memberSymbol = getSymbolForIdentifierPairedExpression(member.namePairedExpression);\r\n        documentSymbols.push(memberSymbol);\r\n    }\r\n    return documentSymbols;\r\n}\r\nexports.getSymbolsForSection = getSymbolsForSection;\r\nfunction getSymbolForIdentifierPairedExpression(identifierPairedExpressionNode) {\r\n    return {\r\n        kind: getSymbolKindFromNode(identifierPairedExpressionNode.value),\r\n        deprecated: false,\r\n        name: identifierPairedExpressionNode.key.literal,\r\n        range: Common.tokenRangeToRange(identifierPairedExpressionNode.tokenRange),\r\n        selectionRange: Common.tokenRangeToRange(identifierPairedExpressionNode.key.tokenRange),\r\n    };\r\n}\r\nexports.getSymbolForIdentifierPairedExpression = getSymbolForIdentifierPairedExpression;\r\nfunction getSymbolsForInspectionScope(inspected) {\r\n    const documentSymbols = [];\r\n    for (const [key, scopeItem] of inspected.scope.entries()) {\r\n        let kind;\r\n        let range;\r\n        switch (scopeItem.kind) {\r\n            case \"Each\" /* Each */: {\r\n                if (scopeItem.each.kind !== \"Ast\" /* Ast */) {\r\n                    continue;\r\n                }\r\n                kind = vscode_languageserver_types_1.SymbolKind.Variable;\r\n                range = Common.tokenRangeToRange(scopeItem.each.node.tokenRange);\r\n                break;\r\n            }\r\n            case \"KeyValuePair\" /* KeyValuePair */: {\r\n                if (scopeItem.maybeValue === undefined || scopeItem.maybeValue.kind !== \"Ast\" /* Ast */) {\r\n                    continue;\r\n                }\r\n                kind = vscode_languageserver_types_1.SymbolKind.Variable;\r\n                range = Common.tokenRangeToRange(scopeItem.key.tokenRange);\r\n                break;\r\n            }\r\n            case \"Parameter\" /* Parameter */: {\r\n                kind = vscode_languageserver_types_1.SymbolKind.Variable;\r\n                range = Common.tokenRangeToRange(scopeItem.name.tokenRange);\r\n                break;\r\n            }\r\n            case \"SectionMember\" /* SectionMember */: {\r\n                kind = vscode_languageserver_types_1.SymbolKind.Variable;\r\n                range = Common.tokenRangeToRange(scopeItem.key.tokenRange);\r\n                break;\r\n            }\r\n            case \"Undefined\" /* Undefined */: {\r\n                if (scopeItem.xorNode.kind !== \"Ast\" /* Ast */) {\r\n                    continue;\r\n                }\r\n                kind = vscode_languageserver_types_1.SymbolKind.Variable;\r\n                range = Common.tokenRangeToRange(scopeItem.xorNode.node.tokenRange);\r\n                break;\r\n            }\r\n            default:\r\n                throw PQP.isNever(scopeItem);\r\n        }\r\n        documentSymbols.push({\r\n            name: key,\r\n            kind,\r\n            deprecated: false,\r\n            range,\r\n            selectionRange: range,\r\n        });\r\n    }\r\n    return documentSymbols;\r\n}\r\nexports.getSymbolsForInspectionScope = getSymbolsForInspectionScope;\r\n//# sourceMappingURL=inspectionHelpers.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst PQP = require(\"@microsoft/powerquery-parser\");\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\n// TODO: Power Query parser defines constructor functions (ex. #table()) as keywords, but we want\r\n// them to be treated like library functions instead.\r\nconst excludedKeywords = [\"#binary\", \"#date\", \"#datetime\", \"#datetimezone\", \"#duration\", \"#table\", \"#time\"];\r\nclass KeywordProvider {\r\n    constructor() {\r\n        this.keywordCompletionItems = [];\r\n        PQP.Keywords.forEach(keyword => {\r\n            if (excludedKeywords.indexOf(keyword) === -1) {\r\n                this.keywordCompletionItems.push({\r\n                    kind: vscode_languageserver_types_1.CompletionItemKind.Keyword,\r\n                    label: keyword,\r\n                });\r\n            }\r\n        });\r\n    }\r\n    // TODO: context sensitive keywords (closing \"in\" for \"let\", \"otherwise\" for \"try\", etc...)\r\n    getCompletionItems(_context) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return this.keywordCompletionItems;\r\n        });\r\n    }\r\n}\r\nexports.KeywordProvider = KeywordProvider;\r\n//# sourceMappingURL=keywordProvider.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// TODO: providers for record fields and table columns\r\nclass NullLibrarySymbolProvider {\r\n    getCompletionItems(_context) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            return [];\r\n        });\r\n    }\r\n    getHover(_context) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // tslint:disable-next-line: no-null-keyword\r\n            return null;\r\n        });\r\n    }\r\n    getSignatureHelp(_context) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            // tslint:disable-next-line: no-null-keyword\r\n            return null;\r\n        });\r\n    }\r\n    includeModules(_modules) {\r\n        // No impact\r\n    }\r\n}\r\nexports.NullLibrarySymbolProvider = NullLibrarySymbolProvider;\r\n//# sourceMappingURL=providers.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst PQP = require(\"@microsoft/powerquery-parser\");\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nconst WorkspaceCache = require(\"./workspaceCache\");\r\nfunction validate(document) {\r\n    const triedLexParse = WorkspaceCache.getTriedLexParse(document);\r\n    let diagnostics = [];\r\n    if (triedLexParse.kind !== \"Ok\" /* Ok */) {\r\n        const lexParseErr = triedLexParse.error;\r\n        const innerError = lexParseErr.innerError;\r\n        if (PQP.ParseError.isTInnerParseError(innerError)) {\r\n            const maybeDiagnostic = maybeParseErrorToDiagnostic(innerError);\r\n            if (maybeDiagnostic !== undefined) {\r\n                diagnostics = [maybeDiagnostic];\r\n            }\r\n        }\r\n        else if (PQP.LexError.isTInnerLexError(innerError)) {\r\n            const maybeLexerErrorDiagnostics = maybeLexErrorToDiagnostics(innerError);\r\n            if (maybeLexerErrorDiagnostics !== undefined) {\r\n                diagnostics = maybeLexerErrorDiagnostics;\r\n            }\r\n        }\r\n    }\r\n    return {\r\n        hasErrors: diagnostics.length > 0,\r\n        diagnostics,\r\n    };\r\n}\r\nexports.validate = validate;\r\nfunction maybeLexErrorToDiagnostics(error) {\r\n    const diagnostics = [];\r\n    // TODO: handle other types of lexer errors\r\n    if (error instanceof PQP.LexError.ErrorLineMapError) {\r\n        for (const errorLine of error.errorLineMap.values()) {\r\n            const innerError = errorLine.error.innerError;\r\n            if (innerError.graphemePosition) {\r\n                const graphemePosition = innerError.graphemePosition;\r\n                const message = innerError.message;\r\n                const position = {\r\n                    line: graphemePosition.lineNumber,\r\n                    character: graphemePosition.lineCodeUnit,\r\n                };\r\n                // TODO: \"lex\" errors aren't that useful to display to end user. Should we make it more generic?\r\n                diagnostics.push({\r\n                    message: message,\r\n                    severity: vscode_languageserver_types_1.DiagnosticSeverity.Error,\r\n                    range: {\r\n                        start: position,\r\n                        end: position,\r\n                    },\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return diagnostics.length ? diagnostics : undefined;\r\n}\r\nfunction maybeParseErrorToDiagnostic(error) {\r\n    const message = error.message;\r\n    let errorToken;\r\n    if ((error instanceof PQP.ParseError.ExpectedAnyTokenKindError ||\r\n        error instanceof PQP.ParseError.ExpectedTokenKindError) &&\r\n        error.maybeFoundToken !== undefined) {\r\n        errorToken = error.maybeFoundToken.token;\r\n    }\r\n    else if (error instanceof PQP.ParseError.InvalidPrimitiveTypeError) {\r\n        errorToken = error.token;\r\n    }\r\n    else if (error instanceof PQP.ParseError.UnterminatedBracketError) {\r\n        errorToken = error.openBracketToken;\r\n    }\r\n    else if (error instanceof PQP.ParseError.UnterminatedParenthesesError) {\r\n        errorToken = error.openParenthesesToken;\r\n    }\r\n    else if (error instanceof PQP.ParseError.UnusedTokensRemainError) {\r\n        errorToken = error.firstUnusedToken;\r\n    }\r\n    else {\r\n        return undefined;\r\n    }\r\n    return {\r\n        message: message,\r\n        severity: vscode_languageserver_types_1.DiagnosticSeverity.Error,\r\n        range: {\r\n            start: {\r\n                line: errorToken.positionStart.lineNumber,\r\n                character: errorToken.positionStart.lineCodeUnit,\r\n            },\r\n            end: {\r\n                line: errorToken.positionEnd.lineNumber,\r\n                character: errorToken.positionEnd.lineCodeUnit,\r\n            },\r\n        },\r\n    };\r\n}\r\n//# sourceMappingURL=validation.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst PQP = require(\"@microsoft/powerquery-parser\");\r\nconst lexerStateCache = new Map();\r\nconst lexerSnapshotCache = new Map();\r\nconst triedLexParseCache = new Map();\r\nconst triedInspectionCache = new Map();\r\nconst allCaches = [lexerSnapshotCache, lexerStateCache, triedLexParseCache, triedInspectionCache];\r\n// TODO: is the position key valid for a single intellisense operation,\r\n// or would it be the same for multiple invocations?\r\nfunction close(textDocument) {\r\n    allCaches.forEach(map => {\r\n        map.delete(textDocument.uri);\r\n    });\r\n}\r\nexports.close = close;\r\nfunction update(textDocument) {\r\n    // TODO: support incremental lexing\r\n    // TODO: premptively prepare cache on background thread?\r\n    // TODO: use document version\r\n    close(textDocument);\r\n}\r\nexports.update = update;\r\nfunction getLexerState(textDocument) {\r\n    return getOrCreate(lexerStateCache, textDocument, createLexerState);\r\n}\r\nexports.getLexerState = getLexerState;\r\nfunction getTriedLexerSnapshot(textDocument) {\r\n    return getOrCreate(lexerSnapshotCache, textDocument, createTriedLexerSnapshot);\r\n}\r\nexports.getTriedLexerSnapshot = getTriedLexerSnapshot;\r\nfunction getTriedLexParse(textDocument) {\r\n    return getOrCreate(triedLexParseCache, textDocument, createTriedLexParse);\r\n}\r\nexports.getTriedLexParse = getTriedLexParse;\r\n// We can't easily reuse getOrCreate because inspections require a position argument.\r\n// This results in a double layer cache.\r\nfunction getTriedInspection(textDocument, position) {\r\n    const cacheKey = textDocument.uri;\r\n    const maybePositionCache = triedInspectionCache.get(cacheKey);\r\n    let positionCache;\r\n    // document has been inspected before\r\n    if (maybePositionCache !== undefined) {\r\n        positionCache = maybePositionCache;\r\n    }\r\n    else {\r\n        positionCache = new WeakMap();\r\n        triedInspectionCache.set(textDocument.uri, positionCache);\r\n    }\r\n    if (positionCache.has(position)) {\r\n        return positionCache.get(position);\r\n    }\r\n    else {\r\n        const value = createTriedInspection(textDocument, position);\r\n        positionCache.set(position, value);\r\n        return value;\r\n    }\r\n}\r\nexports.getTriedInspection = getTriedInspection;\r\nfunction getOrCreate(cache, textDocument, factoryFn) {\r\n    const cacheKey = textDocument.uri;\r\n    const maybeValue = cache.get(cacheKey);\r\n    if (maybeValue === undefined) {\r\n        const value = factoryFn(textDocument);\r\n        cache.set(cacheKey, value);\r\n        return value;\r\n    }\r\n    else {\r\n        return maybeValue;\r\n    }\r\n}\r\nfunction createLexerState(textDocument) {\r\n    // TODO (Localization): update settings based on locale\r\n    return PQP.Lexer.stateFrom(PQP.DefaultSettings, textDocument.getText());\r\n}\r\nfunction createTriedLexerSnapshot(textDocument) {\r\n    const lexerState = getLexerState(textDocument);\r\n    return PQP.LexerSnapshot.tryFrom(lexerState);\r\n}\r\nfunction createTriedLexParse(textDocument) {\r\n    const triedLexerSnapshot = getTriedLexerSnapshot(textDocument);\r\n    if (triedLexerSnapshot.kind === \"Err\" /* Err */) {\r\n        return triedLexerSnapshot;\r\n    }\r\n    const lexerSnapshot = triedLexerSnapshot.value;\r\n    // TODO (Localization): update settings based on locale\r\n    const triedParse = PQP.tryParse(PQP.DefaultSettings, lexerSnapshot);\r\n    if (triedParse.kind === \"Err\" /* Err */) {\r\n        return triedParse;\r\n    }\r\n    const parseOk = triedParse.value;\r\n    return {\r\n        kind: \"Ok\" /* Ok */,\r\n        value: Object.assign(Object.assign({}, parseOk), { lexerSnapshot }),\r\n    };\r\n}\r\n// We're allowed to return undefined because if a document wasn't parsed\r\n// then there's no way to perform an inspection.\r\nfunction createTriedInspection(textDocument, position) {\r\n    const triedLexParse = getTriedLexParse(textDocument);\r\n    let nodeIdMapCollection;\r\n    let leafNodeIds;\r\n    let maybeParseError;\r\n    if (triedLexParse.kind === \"Err\" /* Err */) {\r\n        // You can't inspect something that was never parsed\r\n        if (!(triedLexParse.error instanceof PQP.ParseError.ParseError)) {\r\n            return undefined;\r\n        }\r\n        const context = triedLexParse.error.state.contextState;\r\n        nodeIdMapCollection = context.nodeIdMapCollection;\r\n        leafNodeIds = context.leafNodeIds;\r\n        maybeParseError = triedLexParse.error;\r\n    }\r\n    else {\r\n        const parseOk = triedLexParse.value;\r\n        nodeIdMapCollection = parseOk.nodeIdMapCollection;\r\n        leafNodeIds = parseOk.leafNodeIds;\r\n    }\r\n    const inspectionPosition = {\r\n        lineNumber: position.line,\r\n        lineCodeUnit: position.character,\r\n    };\r\n    return PQP.Inspection.tryFrom(PQP.DefaultSettings, inspectionPosition, nodeIdMapCollection, leafNodeIds, maybeParseError);\r\n}\r\n//# sourceMappingURL=workspaceCache.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nfunction __export(m) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n__export(require(\"./library\"));\r\n__export(require(\"./library/jsonTypes\"));\r\n__export(require(\"./library/staticLibrarySymbolProvider\"));\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst StandardLibrary = require(\"./standard.json\");\r\nexports.AllModules = loadAllModules();\r\n// TODO:\r\n// - Use Visibility to define 'ModuleSets' for a given environment (i.e. Power BI, or the SDK)\r\n// - Export LibraryLoader and add constructor that takes in a string[] or ModuleSet\r\n// - Modules can be added/removed from LibraryLoader\r\n// - Call LibraryLoader.load() when ready to retrieve definition\r\nfunction loadAllModules() {\r\n    return loadStandardLibrary();\r\n}\r\nfunction loadStandardLibrary() {\r\n    var _a;\r\n    const library = new Map();\r\n    // standard library is listed by module\r\n    for (const mod of StandardLibrary) {\r\n        for (const exported of mod.exports) {\r\n            const signatures = (_a = exported.signatures) !== null && _a !== void 0 ? _a : [];\r\n            library.set(exported.export, Object.assign(Object.assign({}, exported), { label: exported.export, kind: exported.kind, module: {\r\n                    name: mod.module,\r\n                    // TODO until there's at least 1 non-null for version there will be typing issues.\r\n                    // eg `mod.version !== null ? mod.version : mod.version` fails as version is always null,\r\n                    // so Typescript always goes to the false ternary expression which is null causing the ternary's\r\n                    // type to become null.\r\n                    version: undefined,\r\n                    visibility: mod.visibility,\r\n                }, signatures }));\r\n        }\r\n    }\r\n    return library;\r\n}\r\n//# sourceMappingURL=index.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n//# sourceMappingURL=jsonTypes.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst index_1 = require(\"./index\");\r\nconst Utils = require(\"./utils\");\r\nfunction createLibraryProvider() {\r\n    return new StaticLibrarySymbolProvider();\r\n}\r\nexports.createLibraryProvider = createLibraryProvider;\r\nclass StaticLibrarySymbolProvider {\r\n    constructor() {\r\n        this.activeLibrary = index_1.AllModules;\r\n    }\r\n    includeModules(_modules) {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    getCompletionItems(context) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            if (context.range) {\r\n                return Utils.cloneCompletionItemsWithRange(this.getCachedCompletionItems(), context.range);\r\n            }\r\n            return this.getCachedCompletionItems();\r\n        });\r\n    }\r\n    getHover(context) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const definition = this.activeLibrary.get(context.identifier);\r\n            if (definition) {\r\n                return Utils.libraryDefinitionToHover(definition, context.range);\r\n            }\r\n            // tslint:disable-next-line: no-null-keyword\r\n            return null;\r\n        });\r\n    }\r\n    getSignatureHelp(context) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            const functionName = context.maybeFunctionName;\r\n            if (functionName) {\r\n                const definition = this.activeLibrary.get(functionName);\r\n                if (definition) {\r\n                    const signatures = Utils.signaturesToSignatureInformation(definition.signatures, definition.summary);\r\n                    return {\r\n                        signatures: signatures,\r\n                        // tslint:disable-next-line: no-null-keyword\r\n                        activeParameter: context.maybeArgumentOrdinal ? context.maybeArgumentOrdinal : null,\r\n                        activeSignature: signatures.length - 1,\r\n                    };\r\n                }\r\n            }\r\n            // tslint:disable-next-line: no-null-keyword\r\n            return null;\r\n        });\r\n    }\r\n    getCachedCompletionItems() {\r\n        if (!this.cachedCompletionItems) {\r\n            this.cachedCompletionItems = [];\r\n            for (const definition of this.activeLibrary.values()) {\r\n                const completionItem = Utils.libraryDefinitionToCompletionItem(definition);\r\n                this.cachedCompletionItems.push(completionItem);\r\n            }\r\n        }\r\n        return this.cachedCompletionItems;\r\n    }\r\n}\r\n//# sourceMappingURL=staticLibrarySymbolProvider.js.map","\"use strict\";\r\n// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst vscode_languageserver_types_1 = require(\"vscode-languageserver-types\");\r\nfunction cloneCompletionItemsWithRange(completionItems, range) {\r\n    const result = [];\r\n    completionItems.forEach(item => {\r\n        result.push(Object.assign(Object.assign({}, item), { textEdit: {\r\n                range: range,\r\n                newText: item.label,\r\n            } }));\r\n    });\r\n    return result;\r\n}\r\nexports.cloneCompletionItemsWithRange = cloneCompletionItemsWithRange;\r\nfunction libraryDefinitionToCompletionItem(definition) {\r\n    return {\r\n        label: definition.label,\r\n        kind: exportKindToCompletionItemKind(definition.kind),\r\n        documentation: definition.summary,\r\n    };\r\n}\r\nexports.libraryDefinitionToCompletionItem = libraryDefinitionToCompletionItem;\r\nfunction libraryDefinitionToHover(definition, range) {\r\n    let contents;\r\n    // TODO: move this into LibraryDefinition - we should be able to call \".getMarkdownFormattedString()\"\r\n    if (isFunction(definition)) {\r\n        contents = formatFunctionDefinition(definition);\r\n    }\r\n    else if (definition.kind === \"Type\" /* Type */) {\r\n        contents = formatTypeDefinition(definition);\r\n    }\r\n    else {\r\n        contents = formatConstantDefinition(definition);\r\n    }\r\n    return {\r\n        contents,\r\n        range,\r\n    };\r\n}\r\nexports.libraryDefinitionToHover = libraryDefinitionToHover;\r\nfunction isFunction(definition) {\r\n    return (definition &&\r\n        (definition.kind === \"Function\" /* Function */ || definition.kind === \"Constructor\" /* Constructor */));\r\n}\r\nexports.isFunction = isFunction;\r\nfunction exportKindToCompletionItemKind(kind) {\r\n    switch (kind) {\r\n        case \"Constant\" /* Constant */:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Constant;\r\n        case \"Constructor\" /* Constructor */:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Constructor;\r\n        case \"Function\" /* Function */:\r\n            return vscode_languageserver_types_1.CompletionItemKind.Function;\r\n        case \"Type\" /* Type */:\r\n            return vscode_languageserver_types_1.CompletionItemKind.TypeParameter;\r\n        default:\r\n            throw new Error(`Unmapped ExportKind: ${kind}`);\r\n    }\r\n}\r\nexports.exportKindToCompletionItemKind = exportKindToCompletionItemKind;\r\nfunction signaturesToSignatureInformation(signatures, summary) {\r\n    return signatures.map(signature => {\r\n        return {\r\n            label: signature.label,\r\n            documentation: summary !== null && summary !== void 0 ? summary : \"\",\r\n            parameters: parametersToParameterInformation(signature.parameters),\r\n        };\r\n    });\r\n}\r\nexports.signaturesToSignatureInformation = signaturesToSignatureInformation;\r\nfunction parametersToParameterInformation(parameters) {\r\n    return parameters.map(parameter => {\r\n        var _a;\r\n        return {\r\n            label: [parameter.signatureLabelOffset, parameter.signatureLabelEnd],\r\n            documentation: (_a = parameter.documentation) !== null && _a !== void 0 ? _a : parameter.type,\r\n        };\r\n    });\r\n}\r\nexports.parametersToParameterInformation = parametersToParameterInformation;\r\nfunction formatTypeDefinition(definition) {\r\n    return {\r\n        kind: vscode_languageserver_types_1.MarkupKind.Markdown,\r\n        value: `(type) ${definition.label}\\n\\n\\n${definition.summary}`,\r\n    };\r\n}\r\nfunction formatConstantDefinition(definition) {\r\n    return {\r\n        kind: vscode_languageserver_types_1.MarkupKind.Markdown,\r\n        value: `(constant) ${definition.label}\\n\\n\\n${definition.summary}`,\r\n    };\r\n}\r\nfunction formatFunctionDefinition(definition) {\r\n    // TODO: assert that we have at least one signature\r\n    return {\r\n        kind: vscode_languageserver_types_1.MarkupKind.Markdown,\r\n        value: [\r\n            \"```powerquery\",\r\n            definition.signatures[definition.signatures.length - 1].label,\r\n            \"```\",\r\n            definition.summary,\r\n        ].join(\"\\n\"),\r\n    };\r\n}\r\n//# sourceMappingURL=utils.js.map","// Copyright (c) Microsoft Corporation.\r\n// Licensed under the MIT license.\r\n\r\nimport {\r\n    format,\r\n    FormatError,\r\n    FormatSettings,\r\n    IndentationLiteral,\r\n    NewlineLiteral,\r\n    Result,\r\n    ResultKind,\r\n} from \"@microsoft/powerquery-format\";\r\nimport * as LanguageServices from \"@microsoft/powerquery-language-services\";\r\nimport * as Library from \"@microsoft/powerquery-library\";\r\nimport { DefaultSettings } from \"@microsoft/powerquery-parser\";\r\nimport * as LS from \"vscode-languageserver\";\r\nimport { TextDocument } from \"vscode-languageserver-textdocument\";\r\n\r\n// Create a connection for the server. The connection uses Node's IPC as a transport.\r\n// Also include all preview / proposed LSP features.\r\nconst connection: LS.Connection = LS.createConnection(LS.ProposedFeatures.all);\r\n\r\nconst documents: LS.TextDocuments<TextDocument> = new LS.TextDocuments(TextDocument);\r\n\r\nlet analysisOptions: LanguageServices.AnalysisOptions;\r\n\r\nconnection.onInitialize(() => {\r\n    return {\r\n        capabilities: {\r\n            textDocumentSync: LS.TextDocumentSyncKind.Incremental,\r\n            documentFormattingProvider: true,\r\n            completionProvider: {\r\n                // TODO: is it better to return the first pass without documention to reduce message size?\r\n                resolveProvider: false,\r\n            },\r\n            hoverProvider: true,\r\n            signatureHelpProvider: {\r\n                triggerCharacters: [\"(\", \",\"],\r\n            },\r\n        },\r\n    };\r\n});\r\n\r\nconnection.onInitialized(() => {\r\n    analysisOptions = {\r\n        librarySymbolProvider: Library.createLibraryProvider(),\r\n    };\r\n});\r\n\r\ndocuments.onDidClose(event => {\r\n    LanguageServices.documentClosed(event.document);\r\n});\r\n\r\n// TODO: Support incremental lexing.\r\n// TextDocuments uses the connection's onDidChangeTextDocument, and I can't see a way to provide a second\r\n// one to intercept incremental changes. TextDocuments.OnDidChangeContent only provides the full document.\r\ndocuments.onDidChangeContent(event => {\r\n    LanguageServices.documentUpdated(event.document);\r\n\r\n    validateDocument(event.document).catch(err =>\r\n        connection.console.error(`validateDocument err: ${JSON.stringify(err, undefined, 4)}`),\r\n    );\r\n});\r\n\r\nasync function validateDocument(document: LS.TextDocument): Promise<void> {\r\n    const validationResult: LanguageServices.ValidationResult = LanguageServices.validate(document);\r\n\r\n    connection.sendDiagnostics({\r\n        uri: document.uri,\r\n        diagnostics: validationResult.diagnostics,\r\n    });\r\n}\r\n\r\nconnection.onDocumentFormatting((documentfomattingParams: LS.DocumentFormattingParams): LS.TextEdit[] => {\r\n    const maybeDocument: undefined | LS.TextDocument = documents.get(documentfomattingParams.textDocument.uri);\r\n    if (maybeDocument === undefined) {\r\n        return [];\r\n    }\r\n    const document: LS.TextDocument = maybeDocument;\r\n\r\n    const options: LS.FormattingOptions = documentfomattingParams.options;\r\n    const textEditResult: LS.TextEdit[] = [];\r\n\r\n    let indentationLiteral: IndentationLiteral;\r\n    if (options.insertSpaces) {\r\n        indentationLiteral = IndentationLiteral.SpaceX4;\r\n    } else {\r\n        indentationLiteral = IndentationLiteral.Tab;\r\n    }\r\n\r\n    const formatSettings: FormatSettings = {\r\n        // TODO (Localization): update settings based on locale\r\n        ...DefaultSettings,\r\n        indentationLiteral,\r\n        // TODO: get the newline terminator for the document/workspace\r\n        newlineLiteral: NewlineLiteral.Windows,\r\n    };\r\n\r\n    const formatResult: Result<string, FormatError.TFormatError> = format(formatSettings, document.getText());\r\n    if (formatResult.kind === ResultKind.Ok) {\r\n        textEditResult.push(LS.TextEdit.replace(fullDocumentRange(document), formatResult.value));\r\n    } else {\r\n        // TODO: should this go in the failed promise path?\r\n        const error: FormatError.TFormatError = formatResult.error;\r\n        let message: string;\r\n        if (FormatError.isTFormatError(error)) {\r\n            message = error.innerError.message;\r\n        } else {\r\n            message = \"An unknown error occured during formatting.\";\r\n        }\r\n\r\n        connection.window.showErrorMessage(message);\r\n    }\r\n\r\n    return textEditResult;\r\n});\r\n\r\n// TODO: is there a better way to do this?\r\nfunction fullDocumentRange(document: LS.TextDocument): LS.Range {\r\n    return {\r\n        start: document.positionAt(0),\r\n        end: {\r\n            line: document.lineCount - 1,\r\n            character: Number.MAX_VALUE,\r\n        },\r\n    };\r\n}\r\n\r\nconnection.onCompletion(\r\n    async (\r\n        textDocumentPosition: LS.TextDocumentPositionParams,\r\n        _token: LS.CancellationToken,\r\n    ): Promise<LS.CompletionItem[]> => {\r\n        const document: LS.TextDocument | undefined = documents.get(textDocumentPosition.textDocument.uri);\r\n        if (document) {\r\n            const analysis: LanguageServices.Analysis = LanguageServices.createAnalysisSession(\r\n                document,\r\n                textDocumentPosition.position,\r\n                analysisOptions,\r\n            );\r\n\r\n            return analysis.getCompletionItems().catch(err => {\r\n                connection.console.error(`onCompletion error ${JSON.stringify(err, undefined, 4)}`);\r\n                return [];\r\n            });\r\n        }\r\n\r\n        return [];\r\n    },\r\n);\r\n\r\nconnection.onHover(\r\n    async (textDocumentPosition: LS.TextDocumentPositionParams, _token: LS.CancellationToken): Promise<LS.Hover> => {\r\n        const emptyHover: LS.Hover = {\r\n            range: undefined,\r\n            contents: [],\r\n        };\r\n\r\n        const document: LS.TextDocument | undefined = documents.get(textDocumentPosition.textDocument.uri);\r\n        if (document) {\r\n            const analysis: LanguageServices.Analysis = LanguageServices.createAnalysisSession(\r\n                document,\r\n                textDocumentPosition.position,\r\n                analysisOptions,\r\n            );\r\n\r\n            return analysis.getHover().catch(err => {\r\n                connection.console.error(`onHover error ${JSON.stringify(err, undefined, 4)}`);\r\n                return emptyHover;\r\n            });\r\n        }\r\n\r\n        return emptyHover;\r\n    },\r\n);\r\n\r\nconnection.onSignatureHelp(\r\n    async (\r\n        textDocumentPosition: LS.TextDocumentPositionParams,\r\n        _token: LS.CancellationToken,\r\n    ): Promise<LS.SignatureHelp> => {\r\n        const emptySignatureHelp: LS.SignatureHelp = {\r\n            signatures: [],\r\n            // tslint:disable-next-line: no-null-keyword\r\n            activeParameter: null,\r\n            activeSignature: 0,\r\n        };\r\n\r\n        const document: LS.TextDocument | undefined = documents.get(textDocumentPosition.textDocument.uri);\r\n        if (document) {\r\n            const analysis: LanguageServices.Analysis = LanguageServices.createAnalysisSession(\r\n                document,\r\n                textDocumentPosition.position,\r\n                analysisOptions,\r\n            );\r\n\r\n            return analysis.getSignatureHelp().catch(err => {\r\n                connection.console.error(`onSignatureHelp error ${JSON.stringify(err, undefined, 4)}`);\r\n                return emptySignatureHelp;\r\n            });\r\n        }\r\n\r\n        return emptySignatureHelp;\r\n    },\r\n);\r\n\r\n// Make the text document manager listen on the connection\r\n// for open, change and close text document events\r\ndocuments.listen(connection);\r\n\r\n// Listen on the connection\r\nconnection.listen();\r\n","module.exports = require(\"child_process\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"url\");"],"sourceRoot":""}